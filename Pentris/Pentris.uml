<?xml version="1.0" encoding="UTF-8"?>
<xmi:XMI xmi:version="20131001" xmlns:xmi="http://www.omg.org/spec/XMI/20131001" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:UMLLabProfile="http:///schemas/UMLLabProfile/NS/0" xmlns:ecore="http://www.eclipse.org/emf/2002/Ecore" xmlns:uml="http://www.eclipse.org/uml2/5.0.0/UML" xsi:schemaLocation="http:///schemas/UMLLabProfile/NS/0 pathmap://UMLLAB_PROFILES/UMLLab.profile.uml#UMLLabProfile-Annotation_2-UMLLabProfile">
  <uml:Model xmi:id="_pF5gMHk6EeSVm5Faw75mfQ" name="Pentris">
    <eAnnotations xmi:id="_pdzC0Hk6EeSVm5Faw75mfQ" source="http://ns.yatta.de/umllab">
      <contents xmi:type="ecore:EAnnotation" xmi:id="_pdzp4Hk6EeSVm5Faw75mfQ" source="codegen">
        <details xmi:id="_pdzp4Xk6EeSVm5Faw75mfQ" key="codegenDirectory" value="/Pentris/src"/>
        <details xmi:id="_5f9pcHk7EeSVm5Faw75mfQ" key="AssociatedSourceCode" value="/Pentris/src/AllTests.java;3915362168/1;/Pentris/src/Board.java;35787359/1;/Pentris/src/ComputerPlayer.java;140286663/1;/Pentris/src/FinalBoard.java;1612761704/1;/Pentris/src/FinalBoardTest.java;2307375014/1;/Pentris/src/Game.java;2264494984/1;/Pentris/src/GameTest.java;723773829/1;/Pentris/src/HighScore.java;1078298553/1;/Pentris/src/ReadFile.java;542905976/1;/Pentris/src/UI_stan.java;183453128/1;/Pentris/src/WriteFile.java;3656094563/1;/Pentris/src/ViewScoreUI.java;3544847779/1;/Pentris/src/UI.java;2524759411/1;/Pentris/src/Pentomino.java;3646622976/1;"/>
      </contents>
    </eAnnotations>
    <elementImport xmi:id="_qNYssHk6EeSVm5Faw75mfQ">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
    </elementImport>
    <elementImport xmi:id="_qNYssXk6EeSVm5Faw75mfQ">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#byte"/>
    </elementImport>
    <elementImport xmi:id="_qNYssnk6EeSVm5Faw75mfQ">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#char"/>
    </elementImport>
    <elementImport xmi:id="_qNYss3k6EeSVm5Faw75mfQ">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
    </elementImport>
    <elementImport xmi:id="_qNYstHk6EeSVm5Faw75mfQ">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
    </elementImport>
    <elementImport xmi:id="_qNYstXk6EeSVm5Faw75mfQ">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
    </elementImport>
    <elementImport xmi:id="_qNZTwHk6EeSVm5Faw75mfQ">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
    </elementImport>
    <elementImport xmi:id="_qNZTwXk6EeSVm5Faw75mfQ">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#short"/>
    </elementImport>
    <elementImport xmi:id="_qNZ60Hk6EeSVm5Faw75mfQ">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
    </elementImport>
    <packagedElement xmi:type="uml:Package" xmi:id="_qI4nMHk6EeSVm5Faw75mfQ" name="org">
      <packagedElement xmi:type="uml:Package" xmi:id="_qI4nMXk6EeSVm5Faw75mfQ" name="junit">
        <packagedElement xmi:type="uml:Package" xmi:id="_qI4nMnk6EeSVm5Faw75mfQ" name="runner">
          <packagedElement xmi:type="uml:Interface" xmi:id="_qVvXcHk6EeSVm5Faw75mfQ" name="RunWith"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Package" xmi:id="_qI5OQHk6EeSVm5Faw75mfQ" name="runners">
          <packagedElement xmi:type="uml:Package" xmi:id="_qI5OQXk6EeSVm5Faw75mfQ" name="Suite">
            <packagedElement xmi:type="uml:Interface" xmi:id="_qVxMoXk6EeSVm5Faw75mfQ" name="SuiteClasses"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_qVwlkHk6EeSVm5Faw75mfQ" name="Suite"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_qV_PEHk6EeSVm5Faw75mfQ" name="Assert"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_qWAdMHk6EeSVm5Faw75mfQ" name="Test"/>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_qJWhQHk6EeSVm5Faw75mfQ" name="java">
      <packagedElement xmi:type="uml:Package" xmi:id="_qJXIUHk6EeSVm5Faw75mfQ" name="util">
        <packagedElement xmi:type="uml:Class" xmi:id="_qV2sMHk6EeSVm5Faw75mfQ" name="Observable"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_qV36UHk6EeSVm5Faw75mfQ" name="Observer"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_qWBrUHk6EeSVm5Faw75mfQ" name="ArrayList"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_qWCSYXk6EeSVm5Faw75mfQ" name="Random"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_qWC5cXk6EeSVm5Faw75mfQ" name="Timer"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_qWDggXk6EeSVm5Faw75mfQ" name="TimerTask"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_qKP5IHk6EeSVm5Faw75mfQ" name="io">
        <packagedElement xmi:type="uml:Class" xmi:id="_qWPtwHk6EeSVm5Faw75mfQ" name="BufferedWriter"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_qWQU0Xk6EeSVm5Faw75mfQ" name="FileOutputStream"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_qWQ74Xk6EeSVm5Faw75mfQ" name="IOException"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_qWRi8Xk6EeSVm5Faw75mfQ" name="OutputStreamWriter"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_qWSKAXk6EeSVm5Faw75mfQ" name="Writer"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_qXENIHk6EeSVm5Faw75mfQ" name="FileWriter"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_qXE0MXk6EeSVm5Faw75mfQ" name="PrintWriter"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_qKfwwHk6EeSVm5Faw75mfQ" name="awt">
        <packagedElement xmi:type="uml:Package" xmi:id="_qKgX0Hk6EeSVm5Faw75mfQ" name="event">
          <packagedElement xmi:type="uml:Class" xmi:id="_qWXpkXk6EeSVm5Faw75mfQ" name="KeyEvent"/>
          <packagedElement xmi:type="uml:Interface" xmi:id="_qWaF0Xk6EeSVm5Faw75mfQ" name="KeyListener"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_qXH3gHk6EeSVm5Faw75mfQ" name="ActionEvent"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_qWVNUHk6EeSVm5Faw75mfQ" name="Color"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_qWV0YXk6EeSVm5Faw75mfQ" name="Container"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_qWXCgHk6EeSVm5Faw75mfQ" name="GridLayout"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_qXjVUHk6EeSVm5Faw75mfQ" name="lang">
        <packagedElement xmi:type="uml:Class" xmi:id="_qXjVUXk6EeSVm5Faw75mfQ" name="Object"/>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_qKgX0Xk6EeSVm5Faw75mfQ" name="javax">
      <packagedElement xmi:type="uml:Package" xmi:id="_qKgX0nk6EeSVm5Faw75mfQ" name="swing">
        <packagedElement xmi:type="uml:Class" xmi:id="_qPatAHk6EeSVm5Faw75mfQ" name="JFrame"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_qWbT8Hk6EeSVm5Faw75mfQ" name="BoxLayout"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_qWb7AXk6EeSVm5Faw75mfQ" name="JLabel"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_qWciEXk6EeSVm5Faw75mfQ" name="JPanel"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_qXJFoHk6EeSVm5Faw75mfQ" name="JButton"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_qXKTwHk6EeSVm5Faw75mfQ" name="JScrollPane"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_qXMI8Hk6EeSVm5Faw75mfQ" name="JTextArea"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_rCaQMHk6EeSVm5Faw75mfQ" name="JTextField"/>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_qNUbQHk6EeSVm5Faw75mfQ" name="AllTests"/>
    <packagedElement xmi:type="uml:Class" xmi:id="_qNXekXk6EeSVm5Faw75mfQ" name="Board">
      <ownedAttribute xmi:id="_qYhlsHk6EeSVm5Faw75mfQ" name="width" isReadOnly="true">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_qjSEMHk6EeSVm5Faw75mfQ" name="pent" visibility="private" type="_qXbZgHk6EeSVm5Faw75mfQ" association="_qlGCEHk6EeSVm5Faw75mfQ"/>
      <ownedAttribute xmi:id="_qjk_IHk6EeSVm5Faw75mfQ" name="location" isReadOnly="true">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_qjk_IXk6EeSVm5Faw75mfQ" value="*"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_qjlmMXk6EeSVm5Faw75mfQ" name="DEFAULT_WIDTH" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        <defaultValue xmi:type="uml:LiteralString" xmi:id="_qjmNQHk6EeSVm5Faw75mfQ" value="5"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_qjm0UHk6EeSVm5Faw75mfQ" name="DEFAULT_HEIGHT" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        <defaultValue xmi:type="uml:LiteralString" xmi:id="_qjm0UXk6EeSVm5Faw75mfQ" value="15"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_qk3_onk6EeSVm5Faw75mfQ" name="height">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
      </ownedAttribute>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qkXCQHk6EeSVm5Faw75mfQ" name="Board" specification="_qNbwAHk6EeSVm5Faw75mfQ">
        <ownedParameter xmi:id="_qkXCQXk6EeSVm5Faw75mfQ" name="height">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        </ownedParameter>
        <ownedParameter xmi:id="_qkXCQnk6EeSVm5Faw75mfQ" name="width">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        </ownedParameter>
        <ownedParameter xmi:id="_qkXCQ3k6EeSVm5Faw75mfQ" type="_qNXekXk6EeSVm5Faw75mfQ" direction="return"/>
        <language>java</language>
        <body>this.width = width;
		this.height = height;
		pent = null;
		this.location = null;
	</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qkXpUHk6EeSVm5Faw75mfQ" name="Board" specification="_qNc-IHk6EeSVm5Faw75mfQ">
        <ownedParameter xmi:id="_qkXpUXk6EeSVm5Faw75mfQ" type="_qNXekXk6EeSVm5Faw75mfQ" direction="return"/>
        <language>java</language>
        <body>this(DEFAULT_HEIGHT, DEFAULT_WIDTH);
	</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qkXpUnk6EeSVm5Faw75mfQ" name="getPentomino" specification="_qNdlMHk6EeSVm5Faw75mfQ">
        <ownedParameter xmi:id="_qkXpU3k6EeSVm5Faw75mfQ" type="_qXbZgHk6EeSVm5Faw75mfQ" direction="return"/>
        <language>java</language>
        <body>return pent;
	</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qkYQYHk6EeSVm5Faw75mfQ" name="putPentomino" specification="_qXdOsHk6EeSVm5Faw75mfQ">
        <ownedParameter xmi:id="_qkYQYXk6EeSVm5Faw75mfQ" name="pent" type="_qXbZgHk6EeSVm5Faw75mfQ"/>
        <ownedParameter xmi:id="_qkYQYnk6EeSVm5Faw75mfQ" name="location">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_qkYQY3k6EeSVm5Faw75mfQ" value="*"/>
        </ownedParameter>
        <language>java</language>
        <body>this.pent = pent;
		this.location = location;
	</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qkYQZHk6EeSVm5Faw75mfQ" name="getHeight" specification="_qNeMQHk6EeSVm5Faw75mfQ">
        <ownedParameter xmi:id="_qkYQZXk6EeSVm5Faw75mfQ" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        </ownedParameter>
        <language>java</language>
        <body>return height;
	</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qkY3cHk6EeSVm5Faw75mfQ" name="movePentomino" specification="_qNezUHk6EeSVm5Faw75mfQ">
        <ownedParameter xmi:id="_qkY3cXk6EeSVm5Faw75mfQ" name="relativeLocation">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_qkY3cnk6EeSVm5Faw75mfQ" value="*"/>
        </ownedParameter>
        <language>java</language>
        <body>if((location[1] + relativeLocation[1]) + pent.getWidth() > getWidth() || 
                     (location[1] + relativeLocation[1]) &lt; 0 ){return;
		}	
		else{
			location[0] = location[0] + relativeLocation[0];
			location[1] = location[1] + relativeLocation[1];
		}
	</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qkY3c3k6EeSVm5Faw75mfQ" name="getGrid" specification="_qNgBcHk6EeSVm5Faw75mfQ">
        <ownedParameter xmi:id="_qkY3dHk6EeSVm5Faw75mfQ" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#char"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_qkY3dXk6EeSVm5Faw75mfQ" value="*"/>
        </ownedParameter>
        <language>java</language>
        <body>char[][] grid = new char[height][width];
		if (pent == null)
			return grid;
		
		int[][] shape = pent.getShape();

		for (int row = 0; row &lt; shape.length; row++)
			for (int col = 0; col &lt; shape[row].length; col++)
				if (shape[row][col] != 0)
					grid[row + location[0]][col + location[1]] = pent.getType();
		
		return grid;
	</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qkY3dnk6EeSVm5Faw75mfQ" name="toString" specification="_qNhPkHk6EeSVm5Faw75mfQ">
        <ownedParameter xmi:id="_qkY3d3k6EeSVm5Faw75mfQ" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </ownedParameter>
        <language>java</language>
        <body>String result = &quot;&quot;;

		char[][] grid = getGrid();

		for (int row = 0; row &lt; grid.length; row++) {
			for (int col = 0; col &lt; grid[row].length; col++)
				if (grid[row][col] == 0)
					result += &quot;0&quot;;
				else
					result += grid[row][col];
			result += &quot;\n&quot;;
		}

		return result;
	</body>
      </ownedBehavior>
      <ownedOperation xmi:id="_qNbwAHk6EeSVm5Faw75mfQ" name="Board" method="_qkXCQHk6EeSVm5Faw75mfQ">
        <eAnnotations xmi:id="_qNbwA3k6EeSVm5Faw75mfQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
          <details xmi:id="_qNbwBHk6EeSVm5Faw75mfQ" key="create"/>
        </eAnnotations>
        <ownedParameter xmi:id="_qNbwAXk6EeSVm5Faw75mfQ" name="height">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        </ownedParameter>
        <ownedParameter xmi:id="_qNbwAnk6EeSVm5Faw75mfQ" name="width">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        </ownedParameter>
        <ownedParameter xmi:id="_qNbwBXk6EeSVm5Faw75mfQ" type="_qNXekXk6EeSVm5Faw75mfQ" direction="return"/>
      </ownedOperation>
      <ownedOperation xmi:id="_qNc-IHk6EeSVm5Faw75mfQ" name="Board" method="_qkXpUHk6EeSVm5Faw75mfQ">
        <eAnnotations xmi:id="_qNc-IXk6EeSVm5Faw75mfQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
          <details xmi:id="_qNc-Ink6EeSVm5Faw75mfQ" key="create"/>
        </eAnnotations>
        <ownedParameter xmi:id="_qNc-I3k6EeSVm5Faw75mfQ" type="_qNXekXk6EeSVm5Faw75mfQ" direction="return"/>
      </ownedOperation>
      <ownedOperation xmi:id="_qNdlMHk6EeSVm5Faw75mfQ" name="getPentomino" method="_qkXpUnk6EeSVm5Faw75mfQ">
        <ownedParameter xmi:id="_qXcnoHk6EeSVm5Faw75mfQ" type="_qXbZgHk6EeSVm5Faw75mfQ" direction="return"/>
      </ownedOperation>
      <ownedOperation xmi:id="_qNeMQHk6EeSVm5Faw75mfQ" name="getHeight" method="_qkYQZHk6EeSVm5Faw75mfQ">
        <ownedParameter xmi:id="_qNeMQXk6EeSVm5Faw75mfQ" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_qNezUHk6EeSVm5Faw75mfQ" name="movePentomino" method="_qkY3cHk6EeSVm5Faw75mfQ">
        <ownedParameter xmi:id="_qNezUXk6EeSVm5Faw75mfQ" name="relativeLocation">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_qNfaYHk6EeSVm5Faw75mfQ" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_qNgBcHk6EeSVm5Faw75mfQ" name="getGrid" method="_qkY3c3k6EeSVm5Faw75mfQ">
        <ownedParameter xmi:id="_qNgBcXk6EeSVm5Faw75mfQ" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#char"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_qNgogHk6EeSVm5Faw75mfQ" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_qNhPkHk6EeSVm5Faw75mfQ" name="toString" method="_qkY3dnk6EeSVm5Faw75mfQ">
        <ownedParameter xmi:id="_qNhPkXk6EeSVm5Faw75mfQ" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_qXdOsHk6EeSVm5Faw75mfQ" name="putPentomino" method="_qkYQYHk6EeSVm5Faw75mfQ">
        <ownedParameter xmi:id="_qXdOsXk6EeSVm5Faw75mfQ" name="pent" type="_qXbZgHk6EeSVm5Faw75mfQ"/>
        <ownedParameter xmi:id="_qXdOsnk6EeSVm5Faw75mfQ" name="location">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_qXd1wHk6EeSVm5Faw75mfQ" value="*"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_qNmIEHk6EeSVm5Faw75mfQ" name="ComputerPlayer">
      <ownedAttribute xmi:id="_qjopgHk6EeSVm5Faw75mfQ" name="game" visibility="package" type="_qN8GUHk6EeSVm5Faw75mfQ" association="_qlGpIXk6EeSVm5Faw75mfQ"/>
      <ownedAttribute xmi:id="_qjp3oHk6EeSVm5Faw75mfQ" name="board" visibility="package" type="_qNXekXk6EeSVm5Faw75mfQ" association="_qlHQMXk6EeSVm5Faw75mfQ"/>
      <ownedAttribute xmi:id="_qjqesHk6EeSVm5Faw75mfQ" name="fboard" visibility="package" type="_qNuq8Hk6EeSVm5Faw75mfQ" association="_qlH3QXk6EeSVm5Faw75mfQ"/>
      <ownedAttribute xmi:id="_qjrFwHk6EeSVm5Faw75mfQ" name="cPent" visibility="package" type="_qXbZgHk6EeSVm5Faw75mfQ" association="_qlIeUXk6EeSVm5Faw75mfQ"/>
      <interfaceRealization xmi:id="_qXg5EHk6EeSVm5Faw75mfQ" client="_qNmIEHk6EeSVm5Faw75mfQ" supplier="_qV36UHk6EeSVm5Faw75mfQ" contract="_qV36UHk6EeSVm5Faw75mfQ"/>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qkaFkHk6EeSVm5Faw75mfQ" name="ComputerPlayer" specification="_qV5vgHk6EeSVm5Faw75mfQ">
        <ownedParameter xmi:id="_qkaFkXk6EeSVm5Faw75mfQ" name="game" type="_qN8GUHk6EeSVm5Faw75mfQ"/>
        <ownedParameter xmi:id="_qkaFknk6EeSVm5Faw75mfQ" type="_qNmIEHk6EeSVm5Faw75mfQ" direction="return"/>
        <language>java</language>
        <body>this.game = game;
		board = game.getBoard();
		fboard = game.getFinalBoard();
		cPent = board.getPentomino();
	</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qkaFk3k6EeSVm5Faw75mfQ" name="update" specification="_qXj8YXk6EeSVm5Faw75mfQ">
        <ownedParameter xmi:id="_qkaFlHk6EeSVm5Faw75mfQ" name="obs" type="_qV2sMHk6EeSVm5Faw75mfQ"/>
        <ownedParameter xmi:id="_qkaFlXk6EeSVm5Faw75mfQ" name="obj" type="_qXjVUXk6EeSVm5Faw75mfQ"/>
        <language>java</language>
        <body>if(obs == game){
			board = game.getBoard();
			fboard = game.getFinalBoard();
			cPent = board.getPentomino();
			
			
			
			
			
		}
	</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qkasoHk6EeSVm5Faw75mfQ" name="possibilities" specification="_qXlxkHk6EeSVm5Faw75mfQ">
        <ownedParameter xmi:id="_qkasoXk6EeSVm5Faw75mfQ" name="fboard" type="_qNuq8Hk6EeSVm5Faw75mfQ"/>
        <ownedParameter xmi:id="_qkasonk6EeSVm5Faw75mfQ" name="pent" type="_qXbZgHk6EeSVm5Faw75mfQ"/>
        <ownedParameter xmi:id="_qkaso3k6EeSVm5Faw75mfQ" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_qkaspHk6EeSVm5Faw75mfQ" value="*"/>
        </ownedParameter>
        <language>java</language>
        <body>int[][] result = null;
		
		
		
		
		return result;
	</body>
      </ownedBehavior>
      <ownedOperation xmi:id="_qV5vgHk6EeSVm5Faw75mfQ" name="ComputerPlayer" method="_qkaFkHk6EeSVm5Faw75mfQ">
        <eAnnotations xmi:id="_qV5vgnk6EeSVm5Faw75mfQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
          <details xmi:id="_qV5vg3k6EeSVm5Faw75mfQ" key="create"/>
        </eAnnotations>
        <ownedParameter xmi:id="_qV5vgXk6EeSVm5Faw75mfQ" name="game" type="_qN8GUHk6EeSVm5Faw75mfQ"/>
        <ownedParameter xmi:id="_qV5vhHk6EeSVm5Faw75mfQ" type="_qNmIEHk6EeSVm5Faw75mfQ" direction="return"/>
      </ownedOperation>
      <ownedOperation xmi:id="_qXj8YXk6EeSVm5Faw75mfQ" name="update" method="_qkaFk3k6EeSVm5Faw75mfQ">
        <ownedParameter xmi:id="_qXkjcHk6EeSVm5Faw75mfQ" name="obs" type="_qV2sMHk6EeSVm5Faw75mfQ"/>
        <ownedParameter xmi:id="_qXkjcXk6EeSVm5Faw75mfQ" name="obj" type="_qXjVUXk6EeSVm5Faw75mfQ"/>
      </ownedOperation>
      <ownedOperation xmi:id="_qXlxkHk6EeSVm5Faw75mfQ" name="possibilities" method="_qkasoHk6EeSVm5Faw75mfQ">
        <ownedParameter xmi:id="_qXlxkXk6EeSVm5Faw75mfQ" name="fboard" type="_qNuq8Hk6EeSVm5Faw75mfQ"/>
        <ownedParameter xmi:id="_qXlxknk6EeSVm5Faw75mfQ" name="pent" type="_qXbZgHk6EeSVm5Faw75mfQ"/>
        <ownedParameter xmi:id="_qXlxk3k6EeSVm5Faw75mfQ" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_qXlxlHk6EeSVm5Faw75mfQ" value="*"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_qNuq8Hk6EeSVm5Faw75mfQ" name="FinalBoard">
      <ownedAttribute xmi:id="_qjsT4Hk6EeSVm5Faw75mfQ" name="grid" visibility="private">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#char"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_qjsT4Xk6EeSVm5Faw75mfQ" value="*"/>
      </ownedAttribute>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qkbTsHk6EeSVm5Faw75mfQ" name="FinalBoard" specification="_qNv5EHk6EeSVm5Faw75mfQ">
        <ownedParameter xmi:id="_qkbTsXk6EeSVm5Faw75mfQ" name="width">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        </ownedParameter>
        <ownedParameter xmi:id="_qkbTsnk6EeSVm5Faw75mfQ" name="height">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        </ownedParameter>
        <ownedParameter xmi:id="_qkbTs3k6EeSVm5Faw75mfQ" type="_qNuq8Hk6EeSVm5Faw75mfQ" direction="return">
          <name xsi:nil="true"/>
        </ownedParameter>
        <language>java</language>
        <body>grid = new char[height][width];
		for (int row = 0; row &lt; height; row++) {
			for (int col = 0; col &lt; width; col++) {
				grid[row][col] = 0;
			}
		}
	</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qkb6wHk6EeSVm5Faw75mfQ" name="removeLine" specification="_qNxHMHk6EeSVm5Faw75mfQ">
        <ownedParameter xmi:id="_qkb6wXk6EeSVm5Faw75mfQ" name="row">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        </ownedParameter>
        <language>java</language>
        <body>for (int rw = row; rw >= 0; rw--)
			for (int cl = 0; cl &lt; grid[rw].length; cl++)
				if (rw == 0)
					grid[rw][cl] = 0;
				else
					grid[rw][cl] = grid[rw - 1][cl];

	</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qkb6wnk6EeSVm5Faw75mfQ" name="checkFullRow" specification="_qNxuQHk6EeSVm5Faw75mfQ">
        <ownedParameter xmi:id="_qkb6w3k6EeSVm5Faw75mfQ" name="row">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        </ownedParameter>
        <ownedParameter xmi:id="_qkb6xHk6EeSVm5Faw75mfQ" direction="return">
          <name xsi:nil="true"/>
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
        </ownedParameter>
        <language>java</language>
        <body>for (int c = 0; c &lt; grid[row].length; c++)
			if (grid[row][c] == 0)
				return false;
		return true;
	</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qkch0Hk6EeSVm5Faw75mfQ" name="checkFloorCollision" specification="_qXo04Hk6EeSVm5Faw75mfQ">
        <ownedParameter xmi:id="_qkch0Xk6EeSVm5Faw75mfQ" name="pent" type="_qXbZgHk6EeSVm5Faw75mfQ"/>
        <ownedParameter xmi:id="_qkch0nk6EeSVm5Faw75mfQ" name="location">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_qkch03k6EeSVm5Faw75mfQ" value="*"/>
        </ownedParameter>
        <ownedParameter xmi:id="_qkch1Hk6EeSVm5Faw75mfQ" direction="return">
          <name xsi:nil="true"/>
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
        </ownedParameter>
        <language>java</language>
        <body>int[][] shape = pent.getShape();
		for (int row = 0; row &lt; shape.length; row++)
			for (int col = 0; col &lt; shape[row].length; col++) {
				if (row + location[0] + 1 >= grid.length ) return true;
				if (shape[row][col] != 0
						&amp;&amp; grid[location[0] + row + 1][location[1] + col] != 0)
					return true;
			}

		return false;
	</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qkeXAHk6EeSVm5Faw75mfQ" name="checkFloorCollision" specification="_qXqDAHk6EeSVm5Faw75mfQ">
        <ownedParameter xmi:id="_qkeXAXk6EeSVm5Faw75mfQ" name="pent" type="_qXbZgHk6EeSVm5Faw75mfQ"/>
        <ownedParameter xmi:id="_qkeXAnk6EeSVm5Faw75mfQ" name="row">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        </ownedParameter>
        <ownedParameter xmi:id="_qkeXA3k6EeSVm5Faw75mfQ" name="col">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        </ownedParameter>
        <ownedParameter xmi:id="_qkeXBHk6EeSVm5Faw75mfQ" direction="return">
          <name xsi:nil="true"/>
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
        </ownedParameter>
        <language>java</language>
        <body>int[] location = { row, col };
		return checkFloorCollision(pent, location);
	</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qkeXBXk6EeSVm5Faw75mfQ" name="putPentomino" specification="_qXr4MHk6EeSVm5Faw75mfQ">
        <ownedParameter xmi:id="_qkeXBnk6EeSVm5Faw75mfQ" name="pent" type="_qXbZgHk6EeSVm5Faw75mfQ"/>
        <ownedParameter xmi:id="_qkeXB3k6EeSVm5Faw75mfQ" name="location">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_qkeXCHk6EeSVm5Faw75mfQ" value="*"/>
        </ownedParameter>
        <language>java</language>
        <body>int[][] pento = pent.getShape();
		for (int i = 0; i &lt; pento.length; i++)
			for (int j = 0; j &lt; pento[i].length; j++)
				if (pento[i][j] == 1)
					grid[location[0] + i][location[1] + j] = pent.getType();

	</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qke-EHk6EeSVm5Faw75mfQ" name="checkHitCeiling" specification="_qNzjcHk6EeSVm5Faw75mfQ">
        <ownedParameter xmi:id="_qke-EXk6EeSVm5Faw75mfQ" direction="return">
          <name xsi:nil="true"/>
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
        </ownedParameter>
        <language>java</language>
        <body>for (int i = 0; i &lt; grid[0].length; i++)
			if (grid[0][i] != 0)
				return true;
		return false;
	</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qke-Enk6EeSVm5Faw75mfQ" name="checkPlacement" specification="_qXtGUHk6EeSVm5Faw75mfQ">
        <ownedParameter xmi:id="_qke-E3k6EeSVm5Faw75mfQ" name="pent" type="_qXbZgHk6EeSVm5Faw75mfQ"/>
        <ownedParameter xmi:id="_qke-FHk6EeSVm5Faw75mfQ" name="location">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_qke-FXk6EeSVm5Faw75mfQ" value="*"/>
        </ownedParameter>
        <ownedParameter xmi:id="_qke-Fnk6EeSVm5Faw75mfQ" direction="return">
          <name xsi:nil="true"/>
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
        </ownedParameter>
        <language>java</language>
        <body>int[][] shape = pent.getShape();
		
		if(grid.length &lt; location[1] + pent.getWidth() || grid[0].length &lt; location[0] + pent.getHeight()) return false;
		
		for(int row = 0; row &lt; shape.length; row++)
			for(int col = 0; col &lt; shape[row].length; col++)
				if(shape[row][col] != 0 &amp;&amp; grid[row + location[0]][col + location[1]] != 0)
					return false;
		
		return true;
	</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qkflIHk6EeSVm5Faw75mfQ" name="print" specification="_qN0KgHk6EeSVm5Faw75mfQ">
        <language>java</language>
        <body>for(int row = 0; row &lt; grid.length; row ++){
			for(int col = 0; col &lt; grid[row].length; col++)
				if (grid[row][col] == 0) System.out.print(&quot;0&quot;);
				else System.out.print(grid[row][col]);
			System.out.println();
		}
	</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qkflIXk6EeSVm5Faw75mfQ" name="toString" specification="_qN0xkHk6EeSVm5Faw75mfQ">
        <ownedParameter xmi:id="_qkflInk6EeSVm5Faw75mfQ" direction="return">
          <name xsi:nil="true"/>
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </ownedParameter>
        <language>java</language>
        <body>String result = &quot;&quot;;
		
		for(int row = 0; row &lt; grid.length; row ++){
			for(int col = 0; col &lt; grid[row].length; col++)
				if (grid[row][col] == 0) result += &quot;0&quot;;
				else result += grid[row][col];
			result += &quot;\n&quot;;
		}
		
		return result;
	</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qkflI3k6EeSVm5Faw75mfQ" name="getFinalBoard" specification="_qN1YoHk6EeSVm5Faw75mfQ">
        <ownedParameter xmi:id="_qkflJHk6EeSVm5Faw75mfQ" direction="return">
          <name xsi:nil="true"/>
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#char"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_qkflJXk6EeSVm5Faw75mfQ" value="*"/>
        </ownedParameter>
        <language>java</language>
        <body>return grid;
	</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_7GQfkHlAEeSVm5Faw75mfQ" name="getWidth" specification="_7GLAAHlAEeSVm5Faw75mfQ">
        <ownedParameter xmi:id="_7GQfkXlAEeSVm5Faw75mfQ" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        </ownedParameter>
        <language>java</language>
        <body>return grid[0].length;
	</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_7GQfknlAEeSVm5Faw75mfQ" name="getHeight" specification="_7GMOIHlAEeSVm5Faw75mfQ">
        <ownedParameter xmi:id="_7GQfk3lAEeSVm5Faw75mfQ" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        </ownedParameter>
        <language>java</language>
        <body>return grid.length;
	</body>
      </ownedBehavior>
      <ownedOperation xmi:id="_qNv5EHk6EeSVm5Faw75mfQ" name="FinalBoard" method="_qkbTsHk6EeSVm5Faw75mfQ">
        <eAnnotations xmi:id="_qNv5E3k6EeSVm5Faw75mfQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
          <details xmi:id="_qNwgIHk6EeSVm5Faw75mfQ" key="create"/>
        </eAnnotations>
        <ownedComment xmi:id="_qk500Hk6EeSVm5Faw75mfQ">
          <body>Initialize the finalBoard and fill it with zeros.
	 * 
	 * @param height
	 *            the height of the board
	 * @param width
	 *            the width of the board</body>
        </ownedComment>
        <ownedParameter xmi:id="_qNv5EXk6EeSVm5Faw75mfQ" name="width">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        </ownedParameter>
        <ownedParameter xmi:id="_qNv5Enk6EeSVm5Faw75mfQ" name="height">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        </ownedParameter>
        <ownedParameter xmi:id="_qNwgIXk6EeSVm5Faw75mfQ" type="_qNuq8Hk6EeSVm5Faw75mfQ" direction="return"/>
      </ownedOperation>
      <ownedOperation xmi:id="_qNxHMHk6EeSVm5Faw75mfQ" name="removeLine" method="_qkb6wHk6EeSVm5Faw75mfQ">
        <ownedComment xmi:id="_qk500Xk6EeSVm5Faw75mfQ">
          <body>This method will remove a row and drop rows above it down accordingly.
	 * 
	 * @param row
	 *            the full row that has to be removed</body>
        </ownedComment>
        <ownedParameter xmi:id="_qNxHMXk6EeSVm5Faw75mfQ" name="row">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_qNxuQHk6EeSVm5Faw75mfQ" name="checkFullRow" method="_qkb6wnk6EeSVm5Faw75mfQ">
        <ownedComment xmi:id="_qk500nk6EeSVm5Faw75mfQ">
          <body>Checks if a given row is full or not.
	 * 
	 * @param row
	 *            the row to check for fullness
	 * @return boolean false if the row is not full and true if the row is full.</body>
        </ownedComment>
        <ownedParameter xmi:id="_qNxuQXk6EeSVm5Faw75mfQ" name="row">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        </ownedParameter>
        <ownedParameter xmi:id="_qNxuQnk6EeSVm5Faw75mfQ" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_qNzjcHk6EeSVm5Faw75mfQ" name="checkHitCeiling" method="_qke-EHk6EeSVm5Faw75mfQ">
        <ownedComment xmi:id="_qk501Xk6EeSVm5Faw75mfQ">
          <body>Checks if the top of the board has been reached by a pentomino.
	 * 
	 * @return TRUE if the top has been reached. False if the top has not yet
	 *         been reached.</body>
        </ownedComment>
        <ownedParameter xmi:id="_qNzjcXk6EeSVm5Faw75mfQ" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_qN0KgHk6EeSVm5Faw75mfQ" name="print" method="_qkflIHk6EeSVm5Faw75mfQ"/>
      <ownedOperation xmi:id="_qN0xkHk6EeSVm5Faw75mfQ" name="toString" method="_qkflIXk6EeSVm5Faw75mfQ">
        <ownedParameter xmi:id="_qN0xkXk6EeSVm5Faw75mfQ" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_qN1YoHk6EeSVm5Faw75mfQ" name="getFinalBoard" method="_qkflI3k6EeSVm5Faw75mfQ">
        <ownedParameter xmi:id="_qN1YoXk6EeSVm5Faw75mfQ" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#char"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_qN1Yonk6EeSVm5Faw75mfQ" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_qXo04Hk6EeSVm5Faw75mfQ" name="checkFloorCollision" method="_qkch0Hk6EeSVm5Faw75mfQ">
        <ownedComment xmi:id="_qk5003k6EeSVm5Faw75mfQ">
          <body>This method checks if the pentomino that is sliding down collides with
	 * something.
	 * 
	 * @param pent
	 *            Is the pent that is sliding down.
	 * @param location
	 *            is the location of the top left corner of the Pentomino. The
	 *            first number is the row and the second number is the column.
	 * @return boolean True if it collides. False if it doesn't collide.</body>
        </ownedComment>
        <ownedParameter xmi:id="_qXo04Xk6EeSVm5Faw75mfQ" name="pent" type="_qXbZgHk6EeSVm5Faw75mfQ"/>
        <ownedParameter xmi:id="_qXo04nk6EeSVm5Faw75mfQ" name="location">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_qXpb8Hk6EeSVm5Faw75mfQ" value="*"/>
        </ownedParameter>
        <ownedParameter xmi:id="_qXo043k6EeSVm5Faw75mfQ" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_qXqDAHk6EeSVm5Faw75mfQ" name="checkFloorCollision" method="_qkeXAHk6EeSVm5Faw75mfQ">
        <ownedParameter xmi:id="_qXqqEHk6EeSVm5Faw75mfQ" name="pent" type="_qXbZgHk6EeSVm5Faw75mfQ"/>
        <ownedParameter xmi:id="_qXqqEXk6EeSVm5Faw75mfQ" name="row">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        </ownedParameter>
        <ownedParameter xmi:id="_qXqqEnk6EeSVm5Faw75mfQ" name="col">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        </ownedParameter>
        <ownedParameter xmi:id="_qXqqE3k6EeSVm5Faw75mfQ" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_qXr4MHk6EeSVm5Faw75mfQ" name="putPentomino" method="_qkeXBXk6EeSVm5Faw75mfQ">
        <ownedComment xmi:id="_qk501Hk6EeSVm5Faw75mfQ">
          <body>This method places the pentomino on the finalBoard
	 * 
	 * @param pent
	 *            The pentomino that has to be placed.
	 * @param row
	 *            The row of the pentomino that has to be placed.
	 * @param col
	 *            The column of the pentomino that has to be placed.</body>
        </ownedComment>
        <ownedParameter xmi:id="_qXr4MXk6EeSVm5Faw75mfQ" name="pent" type="_qXbZgHk6EeSVm5Faw75mfQ"/>
        <ownedParameter xmi:id="_qXr4Mnk6EeSVm5Faw75mfQ" name="location">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_qXsfQHk6EeSVm5Faw75mfQ" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_qXtGUHk6EeSVm5Faw75mfQ" name="checkPlacement" method="_qke-Enk6EeSVm5Faw75mfQ">
        <ownedParameter xmi:id="_qXtGUXk6EeSVm5Faw75mfQ" name="pent" type="_qXbZgHk6EeSVm5Faw75mfQ"/>
        <ownedParameter xmi:id="_qXtGUnk6EeSVm5Faw75mfQ" name="location">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_qXttYXk6EeSVm5Faw75mfQ" value="*"/>
        </ownedParameter>
        <ownedParameter xmi:id="_qXttYHk6EeSVm5Faw75mfQ" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_7GLAAHlAEeSVm5Faw75mfQ" name="getWidth" method="_7GQfkHlAEeSVm5Faw75mfQ">
        <ownedParameter xmi:id="_7GOqYHlAEeSVm5Faw75mfQ" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_7GMOIHlAEeSVm5Faw75mfQ" name="getHeight" method="_7GQfknlAEeSVm5Faw75mfQ">
        <ownedParameter xmi:id="_7GOqYXlAEeSVm5Faw75mfQ" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_qN5qEHk6EeSVm5Faw75mfQ" name="FinalBoardTest">
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qkhaUHk6EeSVm5Faw75mfQ" name="test" specification="_qN6RIHk6EeSVm5Faw75mfQ">
        <language>java</language>
        <body>FinalBoard b = new FinalBoard(5,15);
		Pentomino i = new Pentomino('i');
		b.putPentomino(i, new int[]{0,0});
		b.putPentomino(i, new int[]{0,1});
		b.putPentomino(i, new int[]{0,2});
		b.putPentomino(i, new int[]{0,3});
		b.putPentomino(i, new int[]{0,4});
		b.print();
		System.out.println(b.checkFullRow(1));
	</body>
      </ownedBehavior>
      <ownedOperation xmi:id="_qN6RIHk6EeSVm5Faw75mfQ" name="test" method="_qkhaUHk6EeSVm5Faw75mfQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_qN8GUHk6EeSVm5Faw75mfQ" name="Game">
      <generalization xmi:id="_qX3eYHk6EeSVm5Faw75mfQ" general="_qV2sMHk6EeSVm5Faw75mfQ"/>
      <ownedAttribute xmi:id="_qjuwIHk6EeSVm5Faw75mfQ" name="board" type="_qNXekXk6EeSVm5Faw75mfQ" isReadOnly="true" association="_qlKTgHk6EeSVm5Faw75mfQ"/>
      <ownedAttribute xmi:id="_qjuwIXk6EeSVm5Faw75mfQ" name="fboard" visibility="private" type="_qNuq8Hk6EeSVm5Faw75mfQ" association="_qlK6kHk6EeSVm5Faw75mfQ"/>
      <ownedAttribute xmi:id="_qjvXMXk6EeSVm5Faw75mfQ" name="pentominoes" visibility="private" type="_qWBrUHk6EeSVm5Faw75mfQ" association="_qlK6k3k6EeSVm5Faw75mfQ"/>
      <ownedAttribute xmi:id="_qjwlUXk6EeSVm5Faw75mfQ" name="score" isReadOnly="true">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_qjxMYHk6EeSVm5Faw75mfQ" name="dropSpeed" isReadOnly="true">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_qjyagHk6EeSVm5Faw75mfQ" name="timer" visibility="private" type="_qWC5cXk6EeSVm5Faw75mfQ" association="_qlLhoXk6EeSVm5Faw75mfQ"/>
      <ownedAttribute xmi:id="_qjzBkXk6EeSVm5Faw75mfQ" name="level" isReadOnly="true">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_qjzooHk6EeSVm5Faw75mfQ" name="currentPent" visibility="private" type="_qXbZgHk6EeSVm5Faw75mfQ" association="_qlMIsXk6EeSVm5Faw75mfQ"/>
      <ownedAttribute xmi:id="_qj0PsHk6EeSVm5Faw75mfQ" name="LEVEL_INCREASE" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
        <defaultValue xmi:type="uml:LiteralString" xmi:id="_qj0PsXk6EeSVm5Faw75mfQ" value="0.8"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_qj02wHk6EeSVm5Faw75mfQ" name="LINE_SCORE" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        <defaultValue xmi:type="uml:LiteralString" xmi:id="_qj02wXk6EeSVm5Faw75mfQ" value="1"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_qj02wnk6EeSVm5Faw75mfQ" name="BONUS_SCORE" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
        <defaultValue xmi:type="uml:LiteralString" xmi:id="_qj1d0Hk6EeSVm5Faw75mfQ" value="1"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_qj1d0Xk6EeSVm5Faw75mfQ" name="LEVEL_INTERVAL" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
        <defaultValue xmi:type="uml:LiteralString" xmi:id="_qj1d0nk6EeSVm5Faw75mfQ" value="40000"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_qj2E4Hk6EeSVm5Faw75mfQ" name="INITIAL_DROP_SPEED" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
        <defaultValue xmi:type="uml:LiteralString" xmi:id="_qj2E4Xk6EeSVm5Faw75mfQ" value="500"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_qj2r8Hk6EeSVm5Faw75mfQ" name="firstMove" visibility="package">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_qj3TAXk6EeSVm5Faw75mfQ" name="newPent" visibility="package">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
      </ownedAttribute>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qkiBYXk6EeSVm5Faw75mfQ" name="Game" specification="_qN_JoHk6EeSVm5Faw75mfQ">
        <ownedParameter xmi:id="_qkiBYnk6EeSVm5Faw75mfQ" type="_qN8GUHk6EeSVm5Faw75mfQ" direction="return"/>
        <language>java</language>
        <body>this(new Board(15, 5), Pentomino.getAllPentominoes(), 0);
	</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qklEsHk6EeSVm5Faw75mfQ" name="Game" specification="_qXxXwHk6EeSVm5Faw75mfQ">
        <ownedParameter xmi:id="_qklEsXk6EeSVm5Faw75mfQ" name="board" type="_qNXekXk6EeSVm5Faw75mfQ"/>
        <ownedParameter xmi:id="_qklEsnk6EeSVm5Faw75mfQ" name="pentominoes" type="_qWBrUHk6EeSVm5Faw75mfQ"/>
        <ownedParameter xmi:id="_qklEs3k6EeSVm5Faw75mfQ" name="level">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        </ownedParameter>
        <ownedParameter xmi:id="_qklEtHk6EeSVm5Faw75mfQ" type="_qN8GUHk6EeSVm5Faw75mfQ" direction="return"/>
        <language>java</language>
        <body>this.board = board;
		this.pentominoes = pentominoes;
		this.score = 0;
		this.dropSpeed = (long) (INITIAL_DROP_SPEED * Math.pow(LEVEL_INCREASE,
				level));
		this.level = level;
		this.fboard = new FinalBoard(board.getWidth(), board.getHeight());
	</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qklrwHk6EeSVm5Faw75mfQ" name="getFinalBoard" specification="_qOAXwHk6EeSVm5Faw75mfQ">
        <ownedParameter xmi:id="_qklrwXk6EeSVm5Faw75mfQ" type="_qNuq8Hk6EeSVm5Faw75mfQ" direction="return"/>
        <language>java</language>
        <body>return fboard;
	</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qkmS0Hk6EeSVm5Faw75mfQ" name="deleteRows" specification="_qXz0AHk6EeSVm5Faw75mfQ">
        <ownedParameter xmi:id="_qkmS0Xk6EeSVm5Faw75mfQ" name="rows" type="_qWBrUHk6EeSVm5Faw75mfQ"/>
        <language>java</language>
        <body>for (int row : rows)
			fboard.removeLine(row);
		countScore(rows.size());
	</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qkmS0nk6EeSVm5Faw75mfQ" name="chooseNextPentomino" specification="_qOA-0Hk6EeSVm5Faw75mfQ">
        <ownedParameter xmi:id="_qkmS03k6EeSVm5Faw75mfQ" type="_qXbZgHk6EeSVm5Faw75mfQ" direction="return"/>
        <language>java</language>
        <body>Random r = new Random();
		return (Pentomino) pentominoes.get(r.nextInt(pentominoes.size()))
				.clone();
	</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qkm54Hk6EeSVm5Faw75mfQ" name="initiatePentomino" specification="_qX23UHk6EeSVm5Faw75mfQ">
        <ownedParameter xmi:id="_qkm54Xk6EeSVm5Faw75mfQ" name="pent" type="_qXbZgHk6EeSVm5Faw75mfQ"/>
        <language>java</language>
        <body>int[] startLocation = { 0, 0 };
		board.putPentomino(pent, startLocation);
		setChanged();
		notifyObservers();
	</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qkm54nk6EeSVm5Faw75mfQ" name="countScore" specification="_qOCM8Hk6EeSVm5Faw75mfQ">
        <ownedParameter xmi:id="_qkm543k6EeSVm5Faw75mfQ" name="amountOfRows">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        </ownedParameter>
        <language>java</language>
        <body>int addScore = (int) (LINE_SCORE * amountOfRows + BONUS_SCORE
				* (amountOfRows - 1));
		score += addScore;
	</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qkng8Hk6EeSVm5Faw75mfQ" name="nextLevel" specification="_qOCM8nk6EeSVm5Faw75mfQ">
        <language>java</language>
        <body>// dropSpeed *= LEVEL_INCREASE;
		level++;
	</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qkng8Xk6EeSVm5Faw75mfQ" name="rotateCurrentPent" specification="_qOC0AHk6EeSVm5Faw75mfQ">
        <language>java</language>
        <body>int outOfBound = Math.min(0,
				5 - (board.getLocation()[1] + currentPent.getHeight()));
		// if (board.getLocation()[1] + currentPent.getHeight() &lt; 5) {
		board.movePentomino(new int[] { 0, outOfBound });
		currentPent.rotate();
		setChanged();
		notifyObservers();
		// }

	</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qkng8nk6EeSVm5Faw75mfQ" name="moveCurrentPentLeft" specification="_qOC0AXk6EeSVm5Faw75mfQ">
        <language>java</language>
        <body>int[] oneLeft = { 0, -1 };
		board.movePentomino(oneLeft);
		setChanged();
		notifyObservers();
	</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qkng83k6EeSVm5Faw75mfQ" name="moveCurrentPentRight" specification="_qODbEHk6EeSVm5Faw75mfQ">
        <language>java</language>
        <body>int[] oneRight = { 0, 1 };
		board.movePentomino(oneRight);
		setChanged();
		notifyObservers();
	</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qkoIAHk6EeSVm5Faw75mfQ" name="moveCurrentPentDown" specification="_qODbEXk6EeSVm5Faw75mfQ">
        <language>java</language>
        <body>final int[] oneDown = { 1, 0 };
		while (!fboard.checkFloorCollision(currentPent, board.getLocation()))
			board.movePentomino(oneDown);
		setChanged();
		notifyObservers();
	</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qkoIAXk6EeSVm5Faw75mfQ" name="start" specification="_qOECIHk6EeSVm5Faw75mfQ">
        <language>java</language>
        <body>/*
		Timer levelTimer = new Timer();

		class LevelUp extends TimerTask {
			public LevelUp() {
				super();
			}

			public void run() {
				nextLevel();
			}
		}

		LevelUp levelUp = new LevelUp();
		levelTimer.scheduleAtFixedRate(levelUp, LEVEL_INTERVAL, LEVEL_INTERVAL);
		*/
		timer = new Timer();
		firstMove = true;
		newPent = true;
		game: while (!this.checkGameOver()) {

			if (newPent) {
				// Initialize pentomino in the top middle of the screen
				this.currentPent = this.chooseNextPentomino();
				initiatePentomino(currentPent);
				newPent = false;
			}

			if (!fboard.checkPlacement(currentPent, board.getLocation())) {
				break game;
			}

			class MoveDown extends TimerTask {
				public MoveDown() {
					super();
				}

				public void run() {
					int[] oneDown = { 1, 0 };
					board.movePentomino(oneDown);

					setChanged();
					notifyObservers();

					if (!fboard.checkFloorCollision(currentPent,
							board.getLocation()))
						Game.this.timer.schedule(new MoveDown(), dropSpeed);
				}
			}


			if (!fboard.checkFloorCollision(currentPent, board.getLocation())
					&amp;&amp; firstMove) {
				timer.schedule(new MoveDown(), dropSpeed);
				firstMove = false;
			}

			if (fboard.checkFloorCollision(currentPent, board.getLocation())) {

				Timer delay = new Timer();
				
				class PutPentomino extends TimerTask {
					public PutPentomino() {
						super();
					}

					public void run() {
						if (fboard.checkFloorCollision(currentPent,
								board.getLocation())){
							fboard.putPentomino(currentPent,
									board.getLocation());
							firstMove = true;
							newPent = true;
							timer.cancel();
							timer.purge();
							timer = new Timer();
						}
					}
				}
				delay.schedule(new PutPentomino(), dropSpeed);
			}
			// Delete rows and count score
			ArrayList&lt;Integer> rowsToRemove = new ArrayList&lt;Integer>();
			for (int row = 0; row &lt; board.getHeight(); row++) {
				if (fboard.checkFullRow(row))
					rowsToRemove.add(row);
			}
			if (!rowsToRemove.isEmpty())
				deleteRows(rowsToRemove);

		}
	</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qkoIAnk6EeSVm5Faw75mfQ" name="checkGameOver" specification="_qOEpMHk6EeSVm5Faw75mfQ">
        <ownedParameter xmi:id="_qkoIA3k6EeSVm5Faw75mfQ" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
        </ownedParameter>
        <language>java</language>
        <body>return fboard.checkHitCeiling();
	</body>
      </ownedBehavior>
      <ownedOperation xmi:id="_qN_JoHk6EeSVm5Faw75mfQ" name="Game" method="_qkiBYXk6EeSVm5Faw75mfQ">
        <eAnnotations xmi:id="_qN_wsHk6EeSVm5Faw75mfQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
          <details xmi:id="_qN_wsXk6EeSVm5Faw75mfQ" key="create"/>
        </eAnnotations>
        <ownedParameter xmi:id="_qN_wsnk6EeSVm5Faw75mfQ" type="_qN8GUHk6EeSVm5Faw75mfQ" direction="return"/>
      </ownedOperation>
      <ownedOperation xmi:id="_qOAXwHk6EeSVm5Faw75mfQ" name="getFinalBoard" method="_qklrwHk6EeSVm5Faw75mfQ">
        <ownedParameter xmi:id="_qWGj0Hk6EeSVm5Faw75mfQ" type="_qNuq8Hk6EeSVm5Faw75mfQ" direction="return"/>
      </ownedOperation>
      <ownedOperation xmi:id="_qOA-0Hk6EeSVm5Faw75mfQ" name="chooseNextPentomino" visibility="private" method="_qkmS0nk6EeSVm5Faw75mfQ">
        <ownedParameter xmi:id="_qX2QQHk6EeSVm5Faw75mfQ" type="_qXbZgHk6EeSVm5Faw75mfQ" direction="return"/>
      </ownedOperation>
      <ownedOperation xmi:id="_qOCM8Hk6EeSVm5Faw75mfQ" name="countScore" visibility="private" method="_qkm54nk6EeSVm5Faw75mfQ">
        <ownedParameter xmi:id="_qOCM8Xk6EeSVm5Faw75mfQ" name="amountOfRows">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_qOCM8nk6EeSVm5Faw75mfQ" name="nextLevel" visibility="private" method="_qkng8Hk6EeSVm5Faw75mfQ"/>
      <ownedOperation xmi:id="_qOC0AHk6EeSVm5Faw75mfQ" name="rotateCurrentPent" method="_qkng8Xk6EeSVm5Faw75mfQ"/>
      <ownedOperation xmi:id="_qOC0AXk6EeSVm5Faw75mfQ" name="moveCurrentPentLeft" method="_qkng8nk6EeSVm5Faw75mfQ"/>
      <ownedOperation xmi:id="_qODbEHk6EeSVm5Faw75mfQ" name="moveCurrentPentRight" method="_qkng83k6EeSVm5Faw75mfQ"/>
      <ownedOperation xmi:id="_qODbEXk6EeSVm5Faw75mfQ" name="moveCurrentPentDown" method="_qkoIAHk6EeSVm5Faw75mfQ"/>
      <ownedOperation xmi:id="_qOECIHk6EeSVm5Faw75mfQ" name="start" method="_qkoIAXk6EeSVm5Faw75mfQ"/>
      <ownedOperation xmi:id="_qOEpMHk6EeSVm5Faw75mfQ" name="checkGameOver" visibility="private" method="_qkoIAnk6EeSVm5Faw75mfQ">
        <ownedParameter xmi:id="_qOEpMXk6EeSVm5Faw75mfQ" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_qXxXwHk6EeSVm5Faw75mfQ" name="Game" method="_qklEsHk6EeSVm5Faw75mfQ">
        <eAnnotations xmi:id="_qXx-0nk6EeSVm5Faw75mfQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
          <details xmi:id="_qXx-03k6EeSVm5Faw75mfQ" key="create"/>
        </eAnnotations>
        <ownedParameter xmi:id="_qXxXwXk6EeSVm5Faw75mfQ" name="board" type="_qNXekXk6EeSVm5Faw75mfQ"/>
        <ownedParameter xmi:id="_qXx-0Hk6EeSVm5Faw75mfQ" name="pentominoes" type="_qWBrUHk6EeSVm5Faw75mfQ"/>
        <ownedParameter xmi:id="_qXx-0Xk6EeSVm5Faw75mfQ" name="level">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        </ownedParameter>
        <ownedParameter xmi:id="_qXx-1Hk6EeSVm5Faw75mfQ" type="_qN8GUHk6EeSVm5Faw75mfQ" direction="return"/>
      </ownedOperation>
      <ownedOperation xmi:id="_qXz0AHk6EeSVm5Faw75mfQ" name="deleteRows" visibility="private" method="_qkmS0Hk6EeSVm5Faw75mfQ">
        <ownedParameter xmi:id="_qXz0AXk6EeSVm5Faw75mfQ" name="rows" type="_qWBrUHk6EeSVm5Faw75mfQ"/>
      </ownedOperation>
      <ownedOperation xmi:id="_qX23UHk6EeSVm5Faw75mfQ" name="initiatePentomino" visibility="private" method="_qkm54Hk6EeSVm5Faw75mfQ">
        <ownedParameter xmi:id="_qX23UXk6EeSVm5Faw75mfQ" name="pent" type="_qXbZgHk6EeSVm5Faw75mfQ"/>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_qOPoUHk6EeSVm5Faw75mfQ" name="GameTest">
      <ownedComment xmi:id="_qk7C8Hk6EeSVm5Faw75mfQ">
        <body>*</body>
      </ownedComment>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qkpWIHk6EeSVm5Faw75mfQ" name="test" specification="_qOQPYHk6EeSVm5Faw75mfQ">
        <language>java</language>
        <body>Game game = new Game();
		game.start();
		System.out.println(game.getScore());
	</body>
      </ownedBehavior>
      <ownedOperation xmi:id="_qOQPYHk6EeSVm5Faw75mfQ" name="test" method="_qkpWIHk6EeSVm5Faw75mfQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_qOSroHk6EeSVm5Faw75mfQ" name="HighScore" isLeaf="true">
      <ownedComment xmi:id="_qk7C8Xk6EeSVm5Faw75mfQ">
        <body>@author Kareem Horstink</body>
      </ownedComment>
      <ownedAttribute xmi:id="_qj5vQHk6EeSVm5Faw75mfQ" name="arrayLines" visibility="package">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_qj5vQXk6EeSVm5Faw75mfQ" value="*"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_qj69YHk6EeSVm5Faw75mfQ" name="FINAL_SCORE" visibility="private" isLeaf="true" type="_qWBrUHk6EeSVm5Faw75mfQ" isReadOnly="true" association="_qlMvwXk6EeSVm5Faw75mfQ">
        <defaultValue xmi:type="uml:LiteralString" xmi:id="_qj7kcXk6EeSVm5Faw75mfQ" value="new ArrayList&lt;String[]>()"/>
      </ownedAttribute>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qkp9MHk6EeSVm5Faw75mfQ" name="HighScore" specification="_qOT5wHk6EeSVm5Faw75mfQ">
        <ownedParameter xmi:id="_qkp9MXk6EeSVm5Faw75mfQ" type="_qOSroHk6EeSVm5Faw75mfQ" direction="return"/>
        <language>java</language>
        <body>loadFromFile();
 </body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qkp9Mnk6EeSVm5Faw75mfQ" name="getSize" specification="_qOUg03k6EeSVm5Faw75mfQ">
        <ownedParameter xmi:id="_qkp9M3k6EeSVm5Faw75mfQ" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        </ownedParameter>
        <language>java</language>
        <body>//sortList();
 	return FINAL_SCORE.size();
 </body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qkqkQHk6EeSVm5Faw75mfQ" name="addScore" specification="_qOVu8Hk6EeSVm5Faw75mfQ">
        <ownedParameter xmi:id="_qkqkQXk6EeSVm5Faw75mfQ" name="name">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </ownedParameter>
        <ownedParameter xmi:id="_qkqkQnk6EeSVm5Faw75mfQ" name="score">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        </ownedParameter>
        <language>java</language>
        <body>//sorts FINAL_SCORE
     //sortList();
     
     //creates a StringBuilder object to convert integer to strings
     StringBuilder sb = new StringBuilder();
     sb.append(score);
     //System.out.println(sb.toString() + &quot; testscore add&quot;);
     //creates a String array with the name and now converted integer
     String[] tmp = {name, sb.toString()};
     //inputs it into the Array List of FINAL_SCORE
     //System.out.println(&quot;lskmdklasmdlksamsadkl&quot;);
     /*for (int i = 0; i &lt; FINAL_SCORE.size(); i++) {
         System.out.println(FINAL_SCORE.get(i)[0]);
         System.out.println(FINAL_SCORE.get(i)[1]);
         
     }*/
     
     FINAL_SCORE.add(tmp);

     //sorts FINAL_SCORE to ensure proper placements
     sortList();
 </body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qkqkQ3k6EeSVm5Faw75mfQ" name="getScore" specification="_qOW9EHk6EeSVm5Faw75mfQ">
        <ownedParameter xmi:id="_qkqkRHk6EeSVm5Faw75mfQ" name="position">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        </ownedParameter>
        <ownedParameter xmi:id="_qkqkRXk6EeSVm5Faw75mfQ" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_qkqkRnk6EeSVm5Faw75mfQ" value="*"/>
        </ownedParameter>
        <language>java</language>
        <body>//Sorts the array
     sortList();
     //returns a string array which contains the name and the score of index location
     return FINAL_SCORE.get(position);
 </body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qkqkR3k6EeSVm5Faw75mfQ" name="sortList" specification="_qOXkIHk6EeSVm5Faw75mfQ">
        <language>java</language>
        <body>String[] name = new String[FINAL_SCORE.size()];
     int[] score = new int[FINAL_SCORE.size()];
     
     
     for (int i = 0; i &lt; FINAL_SCORE.size(); i++) 
     {

         name[i] = FINAL_SCORE.get(i)[0];
         score[i] = Integer.parseInt(FINAL_SCORE.get(i)[1]);
     }

     String tmp1 = &quot;&quot;;
     int tmp2 = 0;
     for (int i = 1; i &lt; FINAL_SCORE.size(); i++) {
         for (int j = 0; j &lt; (FINAL_SCORE.size() - 1); j++) {
             if (score[j]&lt;(score[i])) {

                 tmp1 = name[j];
                 name[j] = name[i];
                 name[i] = tmp1;

                 tmp2 = score[j];
                 score[j] = score[i];
                 score[i] = tmp2;

             }
         }
     }

     FINAL_SCORE.clear();
     
     //System.out.println(FINAL_SCORE.isEmpty());
     for (int i = 0; i &lt; name.length; i++) {
         String[] tmp = {name[i],Integer.toString(score[i])};
         FINAL_SCORE.add(tmp);
     }
 </body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qkrLUHk6EeSVm5Faw75mfQ" name="loadFromFile" specification="_qOYLMHk6EeSVm5Faw75mfQ">
        <language>java</language>
        <body>//sorts Final List
     //sortList();

     //Creates a string array to hold all the strings in the textfile
     arrayLines = new String[0];
     try {
         //need to make this relative to where the jar is located
         //creates a read object
         ReadFile file = new ReadFile(&quot;HighScores.txt&quot;);
         //throws away the pointer
         arrayLines = null;
         //set the pointer to location of the array of strings from the text file
         arrayLines = file.OpenFile();
     } catch (IOException e) {
     	Writer writer = null;

     	try {
     	    writer = new BufferedWriter(new OutputStreamWriter(
     	          new FileOutputStream(&quot;HighScores.txt&quot;), &quot;utf-8&quot;));
     	    writer.write(&quot;&quot;);
     	} catch (IOException ex) {
     	  // report
     	} finally {
     	   try {writer.close();} catch (Exception ex) {}
     	}
         System.out.println(e.getMessage());
     }

     //clears Final Score
     //so index are correct
     //and calls the grabge collectors
     FINAL_SCORE.clear();
     System.gc();
     //System.out.println(arrayLines.length+ &quot; dsadsad&quot;);
     for (int i = 0; i &lt; arrayLines.length; i = i + 2) {
         //creates the string array that is to be added to FINAL_SCORE
         //System.out.println(arrayLines[i]);
         //System.out.println(arrayLines[i+1]);
         String[] tmp = {arrayLines[i], arrayLines[i + 1]};
         FINAL_SCORE.add(tmp);
     }
     sortList();
 </body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qkrLUXk6EeSVm5Faw75mfQ" name="saveToFile" specification="_qOYLMXk6EeSVm5Faw75mfQ">
        <language>java</language>
        <body>//sorts FINAL_SCORE
     System.out.println(&quot;slkmdklsajdklsajd&quot;);
     sortList();
     //creates a writer object
     WriteFile writer = new WriteFile(&quot;HighScores.txt&quot;, true);
     try {
         //it has to first clear the text file hence the false in append
         writer.writeToFile(FINAL_SCORE.get(0)[0], false);
         //then we want append the text file with the rest of the data
         writer.writeToFile(FINAL_SCORE.get(0)[1], true);
         for (int i = 1; i &lt; FINAL_SCORE.size(); i++) {
             //debug code; ignore
             //System.out.println(FINAL_SCORE.get(i)[0]);
             //System.out.println(FINAL_SCORE.get(i)[1]);
             //puts the rest of the data into the text file
             writer.writeToFile(FINAL_SCORE.get(i)[0]);
             writer.writeToFile(FINAL_SCORE.get(i)[1]);
         }

     } catch (IOException e) {
         System.out.println(e.getMessage());
     }
     //sorts FINAL_SCORE
     sortList();
 </body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qkrLUnk6EeSVm5Faw75mfQ" name="scorelength" specification="_qOYyQHk6EeSVm5Faw75mfQ">
        <ownedParameter xmi:id="_qkrLU3k6EeSVm5Faw75mfQ" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        </ownedParameter>
        <language>java</language>
        <body>return FINAL_SCORE.size();
 </body>
      </ownedBehavior>
      <ownedOperation xmi:id="_qOT5wHk6EeSVm5Faw75mfQ" name="HighScore" method="_qkp9MHk6EeSVm5Faw75mfQ">
        <eAnnotations xmi:id="_qOUg0Hk6EeSVm5Faw75mfQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
          <details xmi:id="_qOUg0Xk6EeSVm5Faw75mfQ" key="create"/>
        </eAnnotations>
        <ownedParameter xmi:id="_qOUg0nk6EeSVm5Faw75mfQ" type="_qOSroHk6EeSVm5Faw75mfQ" direction="return"/>
      </ownedOperation>
      <ownedOperation xmi:id="_qOUg03k6EeSVm5Faw75mfQ" name="getSize" method="_qkp9Mnk6EeSVm5Faw75mfQ">
        <ownedParameter xmi:id="_qOVH4Hk6EeSVm5Faw75mfQ" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_qOVu8Hk6EeSVm5Faw75mfQ" name="addScore" method="_qkqkQHk6EeSVm5Faw75mfQ">
        <ownedComment xmi:id="_qk7C8nk6EeSVm5Faw75mfQ">
          <body>Add the intended score with name into the arrayList
     *
     * @param name Name of the person who has gain the score (String)
     * @param score The score of said person (int)</body>
        </ownedComment>
        <ownedParameter xmi:id="_qOVu8Xk6EeSVm5Faw75mfQ" name="name">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </ownedParameter>
        <ownedParameter xmi:id="_qOVu8nk6EeSVm5Faw75mfQ" name="score">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_qOW9EHk6EeSVm5Faw75mfQ" name="getScore" method="_qkqkQ3k6EeSVm5Faw75mfQ">
        <ownedComment xmi:id="_qk7qAHk6EeSVm5Faw75mfQ">
          <body>Gets the score of a particular person
     *
     * @param position Which person to see the score to obtain
     * @return Returns a string which contains both the score and the persons
     * name</body>
        </ownedComment>
        <ownedParameter xmi:id="_qOW9EXk6EeSVm5Faw75mfQ" name="position">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        </ownedParameter>
        <ownedParameter xmi:id="_qOW9Enk6EeSVm5Faw75mfQ" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_qOW9E3k6EeSVm5Faw75mfQ" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_qOXkIHk6EeSVm5Faw75mfQ" name="sortList" visibility="private" method="_qkqkR3k6EeSVm5Faw75mfQ">
        <ownedComment xmi:id="_qk7qAXk6EeSVm5Faw75mfQ">
          <body>Sorts the arrayList (currently buggy)</body>
        </ownedComment>
      </ownedOperation>
      <ownedOperation xmi:id="_qOYLMHk6EeSVm5Faw75mfQ" name="loadFromFile" method="_qkrLUHk6EeSVm5Faw75mfQ">
        <ownedComment xmi:id="_qk7qAnk6EeSVm5Faw75mfQ">
          <body>Loads previous scores into the system. Uses the object ReadFile</body>
        </ownedComment>
      </ownedOperation>
      <ownedOperation xmi:id="_qOYLMXk6EeSVm5Faw75mfQ" name="saveToFile" method="_qkrLUXk6EeSVm5Faw75mfQ">
        <ownedComment xmi:id="_qk7qA3k6EeSVm5Faw75mfQ">
          <body>Save the current scores into a text file to loaded up later. Uses the
     * object WriteFile</body>
        </ownedComment>
      </ownedOperation>
      <ownedOperation xmi:id="_qOYyQHk6EeSVm5Faw75mfQ" name="scorelength" method="_qkrLUnk6EeSVm5Faw75mfQ">
        <ownedParameter xmi:id="_qOYyQXk6EeSVm5Faw75mfQ" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_qOdqwHk6EeSVm5Faw75mfQ" name="ReadFile">
      <ownedComment xmi:id="_qk7qBHk6EeSVm5Faw75mfQ">
        <body>
@author Kareem Horstink</body>
      </ownedComment>
      <ownedAttribute xmi:id="_qj8ykHk6EeSVm5Faw75mfQ" name="path" visibility="private">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
      </ownedAttribute>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qkryYHk6EeSVm5Faw75mfQ" name="ReadFile" specification="_qOe44Hk6EeSVm5Faw75mfQ">
        <ownedParameter xmi:id="_qkryYXk6EeSVm5Faw75mfQ" name="file_path">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </ownedParameter>
        <ownedParameter xmi:id="_qkryYnk6EeSVm5Faw75mfQ" type="_qOdqwHk6EeSVm5Faw75mfQ" direction="return"/>
        <language>java</language>
        <body>path = file_path;
 </body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qksZcHk6EeSVm5Faw75mfQ" name="readLines" specification="_qOff83k6EeSVm5Faw75mfQ">
        <ownedParameter xmi:id="_qksZcXk6EeSVm5Faw75mfQ" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        </ownedParameter>
        <language>java</language>
        <body>//creates a file reader and a buffer reader
     FileReader reader = new FileReader(path);
     BufferedReader textReader = new BufferedReader(reader);

     //initializes the variables that is going to be used in the while loop 
     String aLine;
     int numberOfLines = 0;

     //keeps counting as long as the string is not a null
     while ((aLine = textReader.readLine()) != null) {
         numberOfLines++;
     }

     //closes and flushes part of memory		
     textReader.close();

     //returns the number of lines in the text file
     return numberOfLines;

 </body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qksZcnk6EeSVm5Faw75mfQ" name="OpenFile" specification="_qOgHAXk6EeSVm5Faw75mfQ">
        <ownedParameter xmi:id="_qksZc3k6EeSVm5Faw75mfQ" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_qksZdHk6EeSVm5Faw75mfQ" value="*"/>
        </ownedParameter>
        <language>java</language>
        <body>//creates a file reader and a buffer reader
     FileReader reader = new FileReader(path);
     BufferedReader textReader = new BufferedReader(reader);

     //calls readLines to see the amount of lines in the text file
     int numberOfLines = readLines();
     
     //creates the array with inputted number of items
     String[] textData = new String[numberOfLines];

     //simple loop to read and input the string into the array
     for (int i = 0; i &lt; numberOfLines; i++) {
         textData[i] = textReader.readLine();
         //System.out.println(textData[i]);
     }
     //closes and flushes part of memory
     textReader.close();

     //returns the array
     return textData;
 </body>
      </ownedBehavior>
      <ownedOperation xmi:id="_qOe44Hk6EeSVm5Faw75mfQ" name="ReadFile" method="_qkryYHk6EeSVm5Faw75mfQ">
        <eAnnotations xmi:id="_qOff8Hk6EeSVm5Faw75mfQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
          <details xmi:id="_qOff8Xk6EeSVm5Faw75mfQ" key="create"/>
        </eAnnotations>
        <ownedComment xmi:id="_qk7qBXk6EeSVm5Faw75mfQ">
          <body>Constructor of the object
     * @param file_path String of where text</body>
        </ownedComment>
        <ownedParameter xmi:id="_qOe44Xk6EeSVm5Faw75mfQ" name="file_path">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </ownedParameter>
        <ownedParameter xmi:id="_qOff8nk6EeSVm5Faw75mfQ" type="_qOdqwHk6EeSVm5Faw75mfQ" direction="return"/>
      </ownedOperation>
      <ownedOperation xmi:id="_qOff83k6EeSVm5Faw75mfQ" name="readLines" visibility="private" method="_qksZcHk6EeSVm5Faw75mfQ" raisedException="_qWQ74Xk6EeSVm5Faw75mfQ">
        <ownedParameter xmi:id="_qOgHAHk6EeSVm5Faw75mfQ" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_qOgHAXk6EeSVm5Faw75mfQ" name="OpenFile" method="_qksZcnk6EeSVm5Faw75mfQ" raisedException="_qWQ74Xk6EeSVm5Faw75mfQ">
        <ownedComment xmi:id="_qk8REHk6EeSVm5Faw75mfQ">
          <body>This method returns the text of a text file, based on the constructor 
     * @return returns a array of string 
     * @throws IOException if the doesnt, throws an error</body>
        </ownedComment>
        <ownedParameter xmi:id="_qOguEHk6EeSVm5Faw75mfQ" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_qOguEXk6EeSVm5Faw75mfQ" value="*"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_qOijQHk6EeSVm5Faw75mfQ" name="UI_stan">
      <generalization xmi:id="_qW84YHk6EeSVm5Faw75mfQ" general="_qPatAHk6EeSVm5Faw75mfQ"/>
      <ownedAttribute xmi:id="_qj_14Hk6EeSVm5Faw75mfQ" name="game" visibility="private" isStatic="true" type="_qN8GUHk6EeSVm5Faw75mfQ" association="_qlNW0Xk6EeSVm5Faw75mfQ"/>
      <ownedAttribute xmi:id="_qkAc8Xk6EeSVm5Faw75mfQ" name="width" visibility="package">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        <defaultValue xmi:type="uml:LiteralString" xmi:id="_qkBEAHk6EeSVm5Faw75mfQ" value="5"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_qkBrEHk6EeSVm5Faw75mfQ" name="ex" visibility="private" isStatic="true" type="_qOijQHk6EeSVm5Faw75mfQ" association="_qlOk8Hk6EeSVm5Faw75mfQ"/>
      <ownedAttribute xmi:id="_qkBrEnk6EeSVm5Faw75mfQ" name="panels" visibility="package" type="_qWciEXk6EeSVm5Faw75mfQ" association="_qlPMAHk6EeSVm5Faw75mfQ">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_qkCSIHk6EeSVm5Faw75mfQ" value="*"/>
        <defaultValue xmi:type="uml:LiteralString" xmi:id="_qkCSInk6EeSVm5Faw75mfQ" value="new JPanel[15][width]"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_qkC5MXk6EeSVm5Faw75mfQ" name="score" visibility="package" type="_qWb7AXk6EeSVm5Faw75mfQ" association="_qlPzEHk6EeSVm5Faw75mfQ"/>
      <ownedAttribute xmi:id="_qkDgQHk6EeSVm5Faw75mfQ" name="highScores" visibility="package" isStatic="true" type="_qWb7AXk6EeSVm5Faw75mfQ" association="_qlRoQXk6EeSVm5Faw75mfQ">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_qkDgQXk6EeSVm5Faw75mfQ" value="*"/>
        <defaultValue xmi:type="uml:LiteralString" xmi:id="_qkEHUHk6EeSVm5Faw75mfQ" value="new JLabel[10]"/>
      </ownedAttribute>
      <interfaceRealization xmi:id="_qYGH4Hk6EeSVm5Faw75mfQ" client="_qOijQHk6EeSVm5Faw75mfQ" supplier="_qV36UHk6EeSVm5Faw75mfQ" contract="_qV36UHk6EeSVm5Faw75mfQ"/>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qktAgHk6EeSVm5Faw75mfQ" name="UI_stan" specification="_qOk_gHk6EeSVm5Faw75mfQ">
        <ownedParameter xmi:id="_qktAgXk6EeSVm5Faw75mfQ" type="_qOijQHk6EeSVm5Faw75mfQ" direction="return"/>
        <language>java</language>
        <body>KeyListener listener = new MyKeyListener();
     setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
     addKeyListener(listener);
     setFocusable(true);
     initUI();
 </body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qktAgnk6EeSVm5Faw75mfQ" name="initUI" specification="_qOlmkHk6EeSVm5Faw75mfQ">
        <language>java</language>
        <body>Container contentPane = getContentPane();

     JPanel main = new JPanel();
     main.setLayout(new BoxLayout(main, BoxLayout.Y_AXIS));

     JPanel panel = new JPanel(new GridLayout(0, width));

     if (game != null) {
         for (int row = 0; row &lt; panels.length; row++) {
             for (int col = 0; col &lt; panels[row].length; col++) {
                 panels[row][col] = new JPanel();
             }
         }

         for (int row = 0; row &lt; panels.length; row++) {
             for (int col = 0; col &lt; panels[row].length; col++) {
                 panels[row][col].setBackground(new Color(game
                         .getFinalBoard().getFinalBoard()[row][col] % 255));
             }
         }

         for (int row = 0; row &lt; panels.length; row++) {
             for (int col = 0; col &lt; panels[row].length; col++) {
                 panel.add(panels[row][col]);
             }
         }
     }

     score = new JLabel(&quot;Score: 0&quot;);

     JPanel scorePanel = new JPanel(new GridLayout(0, 1));
     for (int i = 0; i &lt; 10; i++) {
         highScores[i] = new JLabel(i + &quot;. &quot;);
         scorePanel.add(highScores[i]);
     }
     JPanel gameScore = new JPanel(new GridLayout(0, 2));

     main.add(score);
     gameScore.add(panel);
     gameScore.add(scorePanel);
     main.add(gameScore);
     contentPane.add(main);

     setTitle(&quot;Pentris&quot;);
     setSize(400, 600);
     setLocationRelativeTo(null);
     setDefaultCloseOperation(EXIT_ON_CLOSE);
 </body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qktAg3k6EeSVm5Faw75mfQ" name="main" specification="_qOlmkXk6EeSVm5Faw75mfQ">
        <ownedParameter xmi:id="_qktAhHk6EeSVm5Faw75mfQ" name="args">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_qktAhXk6EeSVm5Faw75mfQ" value="*"/>
        </ownedParameter>
        <language>java</language>
        <body>HighScore h = new HighScore();
     game = new Game();
     ex = new UI_stan();
     game.addObserver(ex);
     ex.setVisible(true);
     System.out.println(&quot;size = &quot; + h.getSize());
     for (int i = 0; i &lt; Math.min(10, h.getSize()); i++) {
         highScores[i].setText(h.getScore(i)[0] + h.getScore(i)[1]);
     }
     
     game.start();
     
     
     while (true) {
         h.saveToFile();
         //System.out.println(game.getScore() + &quot; = score&quot;);
         h.addScore(&quot;Me&quot;, game.getScore());
         System.out.println(&quot;size = &quot; + h.getSize());
         for (int i = 0; i &lt; Math.min(10, h.getSize()); i++) {
             highScores[i].setText(h.getScore(i)[0] +&quot; &quot;+ h.getScore(i)[1]);
         }
         game = new Game();
         game.addObserver(ex);
         game.start();
         //System.out.println(&quot;lkdsalkdsalksj&quot;);
         
         ex.repaint();
         
     }
 </body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qktnkHk6EeSVm5Faw75mfQ" name="getColor" specification="_qOnbwHk6EeSVm5Faw75mfQ">
        <ownedParameter xmi:id="_qktnkXk6EeSVm5Faw75mfQ" name="type">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#char"/>
        </ownedParameter>
        <ownedParameter xmi:id="_qktnknk6EeSVm5Faw75mfQ" type="_qWVNUHk6EeSVm5Faw75mfQ" direction="return"/>
        <language>java</language>
        <body>switch (type) {
         default:
             return Color.white;
         case 'f':
             return Color.red;
         case 'p':
             return Color.blue;
         case 'x':
             return Color.green;
         case 'v':
             return Color.gray;
         case 'y':
             return Color.magenta;
         case 'i':
             return Color.orange;
         case 't':
             return Color.pink;
         case 'z':
             return Color.yellow;
         case 'u':
             return Color.black;
         case 'n':
             return Color.darkGray;
         case 'l':
             return Color.lightGray;
         case 'w':
             return Color.cyan;
     }

 </body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qktnk3k6EeSVm5Faw75mfQ" name="update" specification="_qYIkIHk6EeSVm5Faw75mfQ">
        <ownedParameter xmi:id="_qktnlHk6EeSVm5Faw75mfQ" name="obs" type="_qV2sMHk6EeSVm5Faw75mfQ"/>
        <ownedParameter xmi:id="_qktnlXk6EeSVm5Faw75mfQ" name="obj" type="_qXjVUXk6EeSVm5Faw75mfQ"/>
        <language>java</language>
        <body>if (obs == game) {

         char[][] finalBoard = game.getFinalBoard().getFinalBoard();
         char[][] board = game.getBoard().getGrid();

         for (int row = 0; row &lt; panels.length; row++) {
             for (int col = 0; col &lt; panels[row].length; col++) {
                 if (finalBoard[row][col] != 0) {
                     panels[row][col]
                             .setBackground(getColor(finalBoard[row][col]));
                 } else if (board[row][col] != 0) {
                     panels[row][col]
                             .setBackground(getColor(board[row][col]));
                 } else {
                     panels[row][col].setBackground(getColor((char) 0));
                 }

             }
         }
         score.setText(&quot;Score: &quot; + Integer.toString(game.getScore()));
         ex.repaint();
     }
 </body>
      </ownedBehavior>
      <ownedOperation xmi:id="_qOk_gHk6EeSVm5Faw75mfQ" name="UI_stan" method="_qktAgHk6EeSVm5Faw75mfQ">
        <eAnnotations xmi:id="_qOk_gXk6EeSVm5Faw75mfQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
          <details xmi:id="_qOk_gnk6EeSVm5Faw75mfQ" key="create"/>
        </eAnnotations>
        <ownedParameter xmi:id="_qOk_g3k6EeSVm5Faw75mfQ" type="_qOijQHk6EeSVm5Faw75mfQ" direction="return"/>
      </ownedOperation>
      <ownedOperation xmi:id="_qOlmkHk6EeSVm5Faw75mfQ" name="initUI" visibility="private" method="_qktAgnk6EeSVm5Faw75mfQ"/>
      <ownedOperation xmi:id="_qOlmkXk6EeSVm5Faw75mfQ" name="main" isStatic="true" method="_qktAg3k6EeSVm5Faw75mfQ">
        <ownedParameter xmi:id="_qOmNoHk6EeSVm5Faw75mfQ" name="args">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_qOm0sHk6EeSVm5Faw75mfQ" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_qOnbwHk6EeSVm5Faw75mfQ" name="getColor" method="_qktnkHk6EeSVm5Faw75mfQ">
        <ownedParameter xmi:id="_qOnbwXk6EeSVm5Faw75mfQ" name="type">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#char"/>
        </ownedParameter>
        <ownedParameter xmi:id="_qYH9EHk6EeSVm5Faw75mfQ" type="_qWVNUHk6EeSVm5Faw75mfQ" direction="return"/>
      </ownedOperation>
      <ownedOperation xmi:id="_qYIkIHk6EeSVm5Faw75mfQ" name="update" method="_qktnk3k6EeSVm5Faw75mfQ">
        <ownedParameter xmi:id="_qYIkIXk6EeSVm5Faw75mfQ" name="obs" type="_qV2sMHk6EeSVm5Faw75mfQ"/>
        <ownedParameter xmi:id="_qYJLMHk6EeSVm5Faw75mfQ" name="obj" type="_qXjVUXk6EeSVm5Faw75mfQ"/>
      </ownedOperation>
      <nestedClassifier xmi:type="uml:Class" xmi:id="_qOop4Hk6EeSVm5Faw75mfQ" name="MyKeyListener">
        <interfaceRealization xmi:id="_qYKZUHk6EeSVm5Faw75mfQ" client="_qOop4Hk6EeSVm5Faw75mfQ" supplier="_qWaF0Xk6EeSVm5Faw75mfQ" contract="_qWaF0Xk6EeSVm5Faw75mfQ"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qkuOoHk6EeSVm5Faw75mfQ" name="keyPressed" specification="_qYODsHk6EeSVm5Faw75mfQ">
          <ownedParameter xmi:id="_qkuOoXk6EeSVm5Faw75mfQ" name="e" type="_qWXpkXk6EeSVm5Faw75mfQ"/>
          <language>java</language>
          <body>int keyCode = e.getKeyCode();
         switch (keyCode) {
             case KeyEvent.VK_UP:
                 game.rotateCurrentPent();
                 break;
             case KeyEvent.VK_DOWN:
                 game.moveCurrentPentDown();
                 break;
             case KeyEvent.VK_LEFT:
                 game.moveCurrentPentLeft();
                 break;
             case KeyEvent.VK_RIGHT:
                 game.moveCurrentPentRight();
                 break;
         }
     </body>
        </ownedBehavior>
        <ownedOperation xmi:id="_qYLncHk6EeSVm5Faw75mfQ" name="keyTyped">
          <ownedParameter xmi:id="_qYLncXk6EeSVm5Faw75mfQ" name="e" type="_qWXpkXk6EeSVm5Faw75mfQ"/>
        </ownedOperation>
        <ownedOperation xmi:id="_qYODsHk6EeSVm5Faw75mfQ" name="keyPressed" method="_qkuOoHk6EeSVm5Faw75mfQ">
          <ownedParameter xmi:id="_qYODsXk6EeSVm5Faw75mfQ" name="e" type="_qWXpkXk6EeSVm5Faw75mfQ"/>
        </ownedOperation>
        <ownedOperation xmi:id="_qYP44Hk6EeSVm5Faw75mfQ" name="keyReleased">
          <ownedParameter xmi:id="_qYP44Xk6EeSVm5Faw75mfQ" name="e" type="_qWXpkXk6EeSVm5Faw75mfQ"/>
        </ownedOperation>
      </nestedClassifier>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_qO03IHk6EeSVm5Faw75mfQ" name="WriteFile">
      <ownedComment xmi:id="_qk8REXk6EeSVm5Faw75mfQ">
        <body>
@author Kareem Horstink</body>
      </ownedComment>
      <ownedAttribute xmi:id="_qkGjkHk6EeSVm5Faw75mfQ" name="path" visibility="private">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_qkHxsXk6EeSVm5Faw75mfQ" name="append" visibility="private">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
        <defaultValue xmi:type="uml:LiteralString" xmi:id="_qkIYwHk6EeSVm5Faw75mfQ" value="false"/>
      </ownedAttribute>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qkvcwHk6EeSVm5Faw75mfQ" name="WriteFile" specification="_qO5voHk6EeSVm5Faw75mfQ">
        <ownedParameter xmi:id="_qkvcwXk6EeSVm5Faw75mfQ" name="file_path">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </ownedParameter>
        <ownedParameter xmi:id="_qkvcwnk6EeSVm5Faw75mfQ" name="append_value">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
        </ownedParameter>
        <ownedParameter xmi:id="_qkvcw3k6EeSVm5Faw75mfQ" type="_qO03IHk6EeSVm5Faw75mfQ" direction="return"/>
        <language>java</language>
        <body>path = file_path;
		append = append_value;
	</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qkwD0Hk6EeSVm5Faw75mfQ" name="WriteFile" specification="_qPMqkHk6EeSVm5Faw75mfQ">
        <ownedParameter xmi:id="_qkwD0Xk6EeSVm5Faw75mfQ" name="file_path">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </ownedParameter>
        <ownedParameter xmi:id="_qkwD0nk6EeSVm5Faw75mfQ" type="_qO03IHk6EeSVm5Faw75mfQ" direction="return"/>
        <language>java</language>
        <body>path = file_path;
	</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qkwD03k6EeSVm5Faw75mfQ" name="writeToFile" specification="_qPNRoHk6EeSVm5Faw75mfQ">
        <ownedParameter xmi:id="_qkwD1Hk6EeSVm5Faw75mfQ" name="textLine">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </ownedParameter>
        <language>java</language>
        <body>FileWriter writer = new FileWriter( path , append);
		
		//This PrintWriter ensures that it can write something other then bytes
		PrintWriter print_line = new PrintWriter(writer);
		
		//handles the formatting of the text
		print_line.printf(&quot;%s&quot; + &quot;%n&quot;, textLine);
		print_line.close();
	</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qkwq4Hk6EeSVm5Faw75mfQ" name="writeToFile" specification="_qPPt4Hk6EeSVm5Faw75mfQ">
        <ownedParameter xmi:id="_qkwq4Xk6EeSVm5Faw75mfQ" name="textLine">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </ownedParameter>
        <ownedParameter xmi:id="_qkwq4nk6EeSVm5Faw75mfQ" name="append2">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
        </ownedParameter>
        <language>java</language>
        <body>append = append2;
		FileWriter writer = new FileWriter( path , append);
		
		//This PrintWriter ensures that it can write something other then bytes
		PrintWriter print_line = new PrintWriter(writer);
		
		//handles the formatting of the text
		print_line.printf(&quot;%s&quot; + &quot;%n&quot;, textLine);
		print_line.close();
	</body>
      </ownedBehavior>
      <ownedOperation xmi:id="_qO5voHk6EeSVm5Faw75mfQ" name="WriteFile" method="_qkvcwHk6EeSVm5Faw75mfQ">
        <eAnnotations xmi:id="_qPLccXk6EeSVm5Faw75mfQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
          <details xmi:id="_qPLccnk6EeSVm5Faw75mfQ" key="create"/>
        </eAnnotations>
        <ownedComment xmi:id="_qk8REnk6EeSVm5Faw75mfQ">
          <body>Creates the file path when creating the object and see if the user wants to amend
         * or over write over the file
         * @param file_path is the file path of the text file you want to edit
         * @param append_value is a boolean value. True = mean you want to amend. False = means you don't want to amend.</body>
        </ownedComment>
        <ownedParameter xmi:id="_qPK1YHk6EeSVm5Faw75mfQ" name="file_path">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </ownedParameter>
        <ownedParameter xmi:id="_qPLccHk6EeSVm5Faw75mfQ" name="append_value">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
        </ownedParameter>
        <ownedParameter xmi:id="_qPLcc3k6EeSVm5Faw75mfQ" type="_qO03IHk6EeSVm5Faw75mfQ" direction="return"/>
      </ownedOperation>
      <ownedOperation xmi:id="_qPMqkHk6EeSVm5Faw75mfQ" name="WriteFile" method="_qkwD0Hk6EeSVm5Faw75mfQ">
        <eAnnotations xmi:id="_qPMqknk6EeSVm5Faw75mfQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
          <details xmi:id="_qPMqk3k6EeSVm5Faw75mfQ" key="create"/>
        </eAnnotations>
        <ownedComment xmi:id="_qk84IHk6EeSVm5Faw75mfQ">
          <body>creates the file path when creating the object and assume that we want over write the file
         * @param file_path is the file path of text file you want to edit</body>
        </ownedComment>
        <ownedParameter xmi:id="_qPMqkXk6EeSVm5Faw75mfQ" name="file_path">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </ownedParameter>
        <ownedParameter xmi:id="_qPMqlHk6EeSVm5Faw75mfQ" type="_qO03IHk6EeSVm5Faw75mfQ" direction="return"/>
      </ownedOperation>
      <ownedOperation xmi:id="_qPNRoHk6EeSVm5Faw75mfQ" name="writeToFile" method="_qkwD03k6EeSVm5Faw75mfQ" raisedException="_qWQ74Xk6EeSVm5Faw75mfQ">
        <ownedComment xmi:id="_qk84IXk6EeSVm5Faw75mfQ">
          <body>Writes to text file based on the constructor
         * @param textLine what string to write
         * @throws IOException throws an error if the file doesnt exist for example</body>
        </ownedComment>
        <ownedParameter xmi:id="_qPN4sHk6EeSVm5Faw75mfQ" name="textLine">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_qPPt4Hk6EeSVm5Faw75mfQ" name="writeToFile" method="_qkwq4Hk6EeSVm5Faw75mfQ" raisedException="_qWQ74Xk6EeSVm5Faw75mfQ">
        <ownedComment xmi:id="_qk84Ink6EeSVm5Faw75mfQ">
          <body>Writes to text file based on what you have parameter
         * @param textLine what string to write 
         * @param append2 sets whether you would want to amend or not
         * @throws IOException throws an error if the file doesnt exist for example</body>
        </ownedComment>
        <ownedParameter xmi:id="_qPQU8Hk6EeSVm5Faw75mfQ" name="textLine">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </ownedParameter>
        <ownedParameter xmi:id="_qPQ8AHk6EeSVm5Faw75mfQ" name="append2">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_qPTYQHk6EeSVm5Faw75mfQ" name="ViewScoreUI">
      <ownedComment xmi:id="_qk84I3k6EeSVm5Faw75mfQ">
        <body>*
@author Kareem</body>
      </ownedComment>
      <generalization xmi:id="_qPdJQHk6EeSVm5Faw75mfQ" general="_qPatAHk6EeSVm5Faw75mfQ"/>
      <ownedAttribute xmi:id="_qkJm4Hk6EeSVm5Faw75mfQ" name="exitButton" visibility="private" type="_qXJFoHk6EeSVm5Faw75mfQ" association="_qlSPUXk6EeSVm5Faw75mfQ"/>
      <ownedAttribute xmi:id="_qkKN8Xk6EeSVm5Faw75mfQ" name="jPanel1" visibility="private" type="_qWciEXk6EeSVm5Faw75mfQ" association="_qlS2YHk6EeSVm5Faw75mfQ"/>
      <ownedAttribute xmi:id="_qkK1AXk6EeSVm5Faw75mfQ" name="jScrollPane1" visibility="private" type="_qXKTwHk6EeSVm5Faw75mfQ" association="_qlS2Y3k6EeSVm5Faw75mfQ"/>
      <ownedAttribute xmi:id="_qkMqMXk6EeSVm5Faw75mfQ" name="jScrollPane2" visibility="private" type="_qXKTwHk6EeSVm5Faw75mfQ" association="_qlTdcXk6EeSVm5Faw75mfQ"/>
      <ownedAttribute xmi:id="_qkN4UHk6EeSVm5Faw75mfQ" name="nameLabel" visibility="private" type="_qWb7AXk6EeSVm5Faw75mfQ" association="_qlUEgXk6EeSVm5Faw75mfQ"/>
      <ownedAttribute xmi:id="_qkOfYHk6EeSVm5Faw75mfQ" name="nameTextArea" visibility="private" type="_qXMI8Hk6EeSVm5Faw75mfQ" association="_qlUrkXk6EeSVm5Faw75mfQ"/>
      <ownedAttribute xmi:id="_qkPGcXk6EeSVm5Faw75mfQ" name="scoreLabel" visibility="private" type="_qWb7AXk6EeSVm5Faw75mfQ" association="_qlVSoXk6EeSVm5Faw75mfQ"/>
      <ownedAttribute xmi:id="_qkPtgXk6EeSVm5Faw75mfQ" name="scoreTextArea" visibility="private" type="_qXMI8Hk6EeSVm5Faw75mfQ" association="_qlV5sHk6EeSVm5Faw75mfQ"/>
      <ownedAttribute xmi:id="_qkQUkXk6EeSVm5Faw75mfQ" name="score1" visibility="package" type="_qOSroHk6EeSVm5Faw75mfQ" association="_qlV5s3k6EeSVm5Faw75mfQ">
        <defaultValue xmi:type="uml:LiteralString" xmi:id="_qkQUknk6EeSVm5Faw75mfQ" value="new HighScore()"/>
      </ownedAttribute>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qkwq43k6EeSVm5Faw75mfQ" name="ViewScoreUI" specification="_qPUmYHk6EeSVm5Faw75mfQ">
        <ownedParameter xmi:id="_qkwq5Hk6EeSVm5Faw75mfQ" type="_qPTYQHk6EeSVm5Faw75mfQ" direction="return"/>
        <language>java</language>
        <body>initComponents();

     int size = score1.scorelength();
     //System.out.println(size);
     for (int i = 0; i &lt; size; i++) {
         for (int j = 0; j &lt; 2; j++) {
             if (j == 0) {
                 nameTextArea.append(score1.getScore(i)[0] + '\n');
             } else {
                 scoreTextArea.append(score1.getScore(i)[1] + '\n');
             }
         }
     }
 </body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qkxR8Hk6EeSVm5Faw75mfQ" name="initComponents" specification="_qPVNcHk6EeSVm5Faw75mfQ">
        <language>java</language>
        <body>exitButton = new javax.swing.JButton();
     jPanel1 = new javax.swing.JPanel();
     jScrollPane1 = new javax.swing.JScrollPane();
     nameTextArea = new javax.swing.JTextArea();
     jScrollPane2 = new javax.swing.JScrollPane();
     scoreTextArea = new javax.swing.JTextArea();
     nameLabel = new javax.swing.JLabel();
     scoreLabel = new javax.swing.JLabel();

     setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
     setTitle(&quot;HighScore&quot;);
     setResizable(false);

     exitButton.setText(&quot;Exit&quot;);
     exitButton.addActionListener(new java.awt.event.ActionListener() {
         public void actionPerformed(java.awt.event.ActionEvent evt) {
             exitButtonActionPerformed(evt);
         }
     });

     jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

     nameTextArea.setEditable(false);
     nameTextArea.setColumns(20);
     nameTextArea.setRows(5);
     jScrollPane1.setViewportView(nameTextArea);

     scoreTextArea.setEditable(false);
     scoreTextArea.setColumns(20);
     scoreTextArea.setRows(5);
     jScrollPane2.setViewportView(scoreTextArea);

     nameLabel.setLabelFor(nameTextArea);
     nameLabel.setText(&quot;Name&quot;);

     scoreLabel.setLabelFor(scoreTextArea);
     scoreLabel.setText(&quot;Score&quot;);

     javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
     jPanel1.setLayout(jPanel1Layout);
     jPanel1Layout.setHorizontalGroup(
         jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
         .addGroup(jPanel1Layout.createSequentialGroup()
             .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                 .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                 .addComponent(nameLabel))
             .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
             .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                 .addGroup(jPanel1Layout.createSequentialGroup()
                     .addComponent(scoreLabel)
                     .addGap(0, 0, Short.MAX_VALUE))
                 .addComponent(jScrollPane2)))
     );
     jPanel1Layout.setVerticalGroup(
         jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
         .addGroup(jPanel1Layout.createSequentialGroup()
             .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                 .addComponent(nameLabel)
                 .addComponent(scoreLabel))
             .addGap(4, 4, 4)
             .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                 .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 260, Short.MAX_VALUE)
                 .addComponent(jScrollPane1)))
     );

     javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
     getContentPane().setLayout(layout);
     layout.setHorizontalGroup(
         layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
         .addGroup(layout.createSequentialGroup()
             .addContainerGap()
             .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
             .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
             .addComponent(exitButton)
             .addContainerGap())
     );
     layout.setVerticalGroup(
         layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
         .addGroup(layout.createSequentialGroup()
             .addContainerGap()
             .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                 .addGroup(layout.createSequentialGroup()
                     .addComponent(exitButton)
                     .addContainerGap(229, Short.MAX_VALUE))
                 .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
     );

     pack();
 </body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qkxR8Xk6EeSVm5Faw75mfQ" name="exitButtonActionPerformed" specification="_qXIekXk6EeSVm5Faw75mfQ">
        <ownedParameter xmi:id="_qkxR8nk6EeSVm5Faw75mfQ" name="evt" type="_qXH3gHk6EeSVm5Faw75mfQ"/>
        <language>java</language>
        <body>//GEN-FIRST:event_exitButtonActionPerformed
     this.setVisible(false);

     this.dispose();

 </body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qkx5AHk6EeSVm5Faw75mfQ" name="main" specification="_qPWbkHk6EeSVm5Faw75mfQ">
        <ownedParameter xmi:id="_qkx5AXk6EeSVm5Faw75mfQ" name="args">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_qkx5Ank6EeSVm5Faw75mfQ" value="*"/>
        </ownedParameter>
        <language>java</language>
        <body>try {
         for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
             if (&quot;Nimbus&quot;.equals(info.getName())) {
                 javax.swing.UIManager.setLookAndFeel(info.getClassName());
                 break;
             }
         }
     } catch (ClassNotFoundException ex) {
         java.util.logging.Logger.getLogger(ViewScoreUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
     } catch (InstantiationException ex) {
         java.util.logging.Logger.getLogger(ViewScoreUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
     } catch (IllegalAccessException ex) {
         java.util.logging.Logger.getLogger(ViewScoreUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
     } catch (javax.swing.UnsupportedLookAndFeelException ex) {
         java.util.logging.Logger.getLogger(ViewScoreUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
     }
     //&lt;/editor-fold>

     /* Create and display the form */
     java.awt.EventQueue.invokeLater(new Runnable() {
         public void run() {
             new ViewScoreUI().setVisible(true);
         }
     });

 </body>
      </ownedBehavior>
      <ownedOperation xmi:id="_qPUmYHk6EeSVm5Faw75mfQ" name="ViewScoreUI" method="_qkwq43k6EeSVm5Faw75mfQ">
        <eAnnotations xmi:id="_qPUmYXk6EeSVm5Faw75mfQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
          <details xmi:id="_qPUmYnk6EeSVm5Faw75mfQ" key="create"/>
        </eAnnotations>
        <ownedComment xmi:id="_qk84JHk6EeSVm5Faw75mfQ">
          <body>Creates new form ViewScoreUI</body>
        </ownedComment>
        <ownedParameter xmi:id="_qPUmY3k6EeSVm5Faw75mfQ" type="_qPTYQHk6EeSVm5Faw75mfQ" direction="return"/>
      </ownedOperation>
      <ownedOperation xmi:id="_qPVNcHk6EeSVm5Faw75mfQ" name="initComponents" visibility="private" method="_qkxR8Hk6EeSVm5Faw75mfQ"/>
      <ownedOperation xmi:id="_qPWbkHk6EeSVm5Faw75mfQ" name="main" isStatic="true" method="_qkx5AHk6EeSVm5Faw75mfQ">
        <ownedParameter xmi:id="_qPXCoHk6EeSVm5Faw75mfQ" name="args">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_qPYQwXk6EeSVm5Faw75mfQ" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_qXIekXk6EeSVm5Faw75mfQ" name="exitButtonActionPerformed" visibility="private" method="_qkxR8Xk6EeSVm5Faw75mfQ">
        <ownedParameter xmi:id="_qXIeknk6EeSVm5Faw75mfQ" name="evt" type="_qXH3gHk6EeSVm5Faw75mfQ"/>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_qXbZgHk6EeSVm5Faw75mfQ" name="Pentomino">
      <ownedComment xmi:id="_rDtQsHk6EeSVm5Faw75mfQ">
        <body>The Pentomino class creates every possible pentomino.</body>
      </ownedComment>
      <ownedAttribute xmi:id="_rDa80Hk6EeSVm5Faw75mfQ" name="F" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rDa80Xk6EeSVm5Faw75mfQ" value="*"/>
        <defaultValue xmi:type="uml:LiteralString" xmi:id="_rDbj4Xk6EeSVm5Faw75mfQ" value="{{0,1,1},{1,1,0},{0,1,0}}"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_rDbj43k6EeSVm5Faw75mfQ" name="P" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rDbj5Hk6EeSVm5Faw75mfQ" value="*"/>
        <defaultValue xmi:type="uml:LiteralString" xmi:id="_rDcK8Xk6EeSVm5Faw75mfQ" value="{{1,1},{1,1},{1,0}}"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_rDcK83k6EeSVm5Faw75mfQ" name="X" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rDcK9Hk6EeSVm5Faw75mfQ" value="*"/>
        <defaultValue xmi:type="uml:LiteralString" xmi:id="_rDcyAXk6EeSVm5Faw75mfQ" value="{{0,1,0},{1,1,1},{0,1,0}}"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_rDcyA3k6EeSVm5Faw75mfQ" name="V" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rDcyBHk6EeSVm5Faw75mfQ" value="*"/>
        <defaultValue xmi:type="uml:LiteralString" xmi:id="_rDdZEXk6EeSVm5Faw75mfQ" value="{{1,0,0},{1,0,0},{1,1,1}}"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_rDdZE3k6EeSVm5Faw75mfQ" name="W" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rDdZFHk6EeSVm5Faw75mfQ" value="*"/>
        <defaultValue xmi:type="uml:LiteralString" xmi:id="_rDeAIXk6EeSVm5Faw75mfQ" value="{{1,0,0},{1,1,0},{0,1,1}}"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_rDeAI3k6EeSVm5Faw75mfQ" name="Y" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rDeAJHk6EeSVm5Faw75mfQ" value="*"/>
        <defaultValue xmi:type="uml:LiteralString" xmi:id="_rDenMXk6EeSVm5Faw75mfQ" value="{{0,1},{1,1},{0,1},{0,1}}"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_rDenM3k6EeSVm5Faw75mfQ" name="I" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rDenNHk6EeSVm5Faw75mfQ" value="*"/>
        <defaultValue xmi:type="uml:LiteralString" xmi:id="_rDfOQXk6EeSVm5Faw75mfQ" value="{{1},{1},{1},{1},{1}}"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_rDf1UHk6EeSVm5Faw75mfQ" name="T" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rDf1UXk6EeSVm5Faw75mfQ" value="*"/>
        <defaultValue xmi:type="uml:LiteralString" xmi:id="_rDgcYXk6EeSVm5Faw75mfQ" value="{{1,1,1},{0,1,0},{0,1,0}}"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_rDhDcXk6EeSVm5Faw75mfQ" name="Z" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rDhDcnk6EeSVm5Faw75mfQ" value="*"/>
        <defaultValue xmi:type="uml:LiteralString" xmi:id="_rDhDdHk6EeSVm5Faw75mfQ" value="{{1,1,0},{0,1,0},{0,1,1}}"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_rDhqgXk6EeSVm5Faw75mfQ" name="U" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rDhqgnk6EeSVm5Faw75mfQ" value="*"/>
        <defaultValue xmi:type="uml:LiteralString" xmi:id="_rDiRkHk6EeSVm5Faw75mfQ" value="{{1,0,1},{1,1,1}}"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_rDi4oXk6EeSVm5Faw75mfQ" name="N" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rDi4onk6EeSVm5Faw75mfQ" value="*"/>
        <defaultValue xmi:type="uml:LiteralString" xmi:id="_rDi4pHk6EeSVm5Faw75mfQ" value="{{1,1,0,0},{0,1,1,1}}"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_rDjfsXk6EeSVm5Faw75mfQ" name="L" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rDjfsnk6EeSVm5Faw75mfQ" value="*"/>
        <defaultValue xmi:type="uml:LiteralString" xmi:id="_rDjftHk6EeSVm5Faw75mfQ" value="{{0,0,0,1},{1,1,1,1}}"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_rDkGwXk6EeSVm5Faw75mfQ" name="pent" visibility="private">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rDkGwnk6EeSVm5Faw75mfQ" value="*"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_rDkt0Hk6EeSVm5Faw75mfQ" name="type" isReadOnly="true">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#char"/>
      </ownedAttribute>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rDpmUHk6EeSVm5Faw75mfQ" name="getAllPentominoes" specification="_q_VuEHk6EeSVm5Faw75mfQ">
        <ownedParameter xmi:id="_rDqNYHk6EeSVm5Faw75mfQ" type="_qWBrUHk6EeSVm5Faw75mfQ" direction="return">
          <name xsi:nil="true"/>
        </ownedParameter>
        <language>java</language>
        <body>return getAllPentominoes(true);
	</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rDqNYXk6EeSVm5Faw75mfQ" name="getAllPentominoes" specification="_rAI_UHk6EeSVm5Faw75mfQ">
        <ownedParameter xmi:id="_rDqNYnk6EeSVm5Faw75mfQ" name="mirrors">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
        </ownedParameter>
        <ownedParameter xmi:id="_rDqNY3k6EeSVm5Faw75mfQ" type="_qWBrUHk6EeSVm5Faw75mfQ" direction="return">
          <name xsi:nil="true"/>
        </ownedParameter>
        <language>java</language>
        <body>ArrayList&lt;Pentomino> result = new ArrayList&lt;Pentomino>();
		Pentomino[] pentominoes;
		if(mirrors){
			pentominoes = new Pentomino[18];
			pentominoes[0] = new Pentomino('f');
			pentominoes[1] = new Pentomino('f');
			pentominoes[2] = new Pentomino('p');
			pentominoes[3] = new Pentomino('p');
			pentominoes[4] = new Pentomino('x');
			pentominoes[5] = new Pentomino('v');
			pentominoes[6] = new Pentomino('w');
			pentominoes[7] = new Pentomino('y');
			pentominoes[8] = new Pentomino('y');
			pentominoes[9] = new Pentomino('i');
			pentominoes[10] = new Pentomino('t');
			pentominoes[11] = new Pentomino('z');
			pentominoes[12] = new Pentomino('z');
			pentominoes[13] = new Pentomino('u');
			pentominoes[14] = new Pentomino('n');
			pentominoes[15] = new Pentomino('n');
			pentominoes[16] = new Pentomino('l');
			pentominoes[17] = new Pentomino('l');
			
			pentominoes[1].mirror();
			pentominoes[3].mirror();
			pentominoes[12].mirror();
			pentominoes[15].mirror();
			pentominoes[17].mirror();
			
			
		}else{
			pentominoes = new Pentomino[12];
			pentominoes[0] = new Pentomino('f');
			pentominoes[1] = new Pentomino('p');
			pentominoes[2] = new Pentomino('x');
			pentominoes[3] = new Pentomino('v');
			pentominoes[4] = new Pentomino('w');
			pentominoes[5] = new Pentomino('y');
			pentominoes[6] = new Pentomino('i');
			pentominoes[7] = new Pentomino('t');
			pentominoes[8] = new Pentomino('z');
			pentominoes[9] = new Pentomino('u');
			pentominoes[10] = new Pentomino('n');
			pentominoes[11] = new Pentomino('l');
		}
		
		for(Pentomino pent : pentominoes)
			result.add(pent);
		
		return result;
	</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rDqNZHk6EeSVm5Faw75mfQ" name="Pentomino" specification="_rAKNcXk6EeSVm5Faw75mfQ">
        <ownedParameter xmi:id="_rDqNZXk6EeSVm5Faw75mfQ" name="type">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#char"/>
        </ownedParameter>
        <ownedParameter xmi:id="_rDqNZnk6EeSVm5Faw75mfQ" type="_qXbZgHk6EeSVm5Faw75mfQ" direction="return">
          <name xsi:nil="true"/>
        </ownedParameter>
        <language>java</language>
        <body>if(type == 'f') this.pent = F;
		else if(type == 'p') this.pent = P;
		else if(type == 'x') this.pent = X;
		else if(type == 'v') this.pent = V;
		else if(type == 'w') this.pent = W;
		else if(type == 'y') this.pent = Y;
		else if(type == 'i') this.pent = I;
		else if(type == 't') this.pent = T;
		else if(type == 'z') this.pent = Z;
		else if(type == 'u') this.pent = U;
		else if(type == 'n') this.pent = N;
		else if(type == 'l') this.pent = L;
		else System.out.println(&quot;Invalid pentomino type submitted&quot;);
		
		this.type = type;
	</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rDqNZ3k6EeSVm5Faw75mfQ" name="clone" specification="_q_W8MXk6EeSVm5Faw75mfQ">
        <ownedParameter xmi:id="_rDqNaHk6EeSVm5Faw75mfQ" type="_qXjVUXk6EeSVm5Faw75mfQ" direction="return">
          <name xsi:nil="true"/>
        </ownedParameter>
        <language>java</language>
        <body>Object pent = new Pentomino(this.getType());
		return pent;
	</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rDq0cHk6EeSVm5Faw75mfQ" name="equals" specification="_q_XjQHk6EeSVm5Faw75mfQ">
        <ownedParameter xmi:id="_rDq0cXk6EeSVm5Faw75mfQ" name="pent" type="_qXbZgHk6EeSVm5Faw75mfQ"/>
        <ownedParameter xmi:id="_rDq0cnk6EeSVm5Faw75mfQ" direction="return">
          <name xsi:nil="true"/>
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
        </ownedParameter>
        <language>java</language>
        <body>return this.getType() == pent.getType();
	</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rDq0c3k6EeSVm5Faw75mfQ" name="rotate" specification="_q_XjQnk6EeSVm5Faw75mfQ">
        <language>java</language>
        <body>int[][] transpose = new int[pent[0].length][pent.length];
		
		for(int i = 0; i &lt; transpose.length; i++)			
			for(int j = 0; j &lt; transpose[i].length; j++)				
				transpose[i][j] = pent[j][i];
		
		int[][] columnSwitch = new int[pent[0].length][pent.length];
		
		for(int i = 0; i &lt; columnSwitch.length; i++)
			for(int j = 0; j &lt; columnSwitch[i].length; j++)
				columnSwitch[i][j] = transpose[i][pent.length-j-1];
		
		pent = columnSwitch;
	</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rDq0dHk6EeSVm5Faw75mfQ" name="rotate" specification="_rALbkHk6EeSVm5Faw75mfQ">
        <ownedParameter xmi:id="_rDq0dXk6EeSVm5Faw75mfQ" name="times">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        </ownedParameter>
        <language>java</language>
        <body>for ( int i = 0; i &lt; times; i ++ )
			this.rotate();
	</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rDq0dnk6EeSVm5Faw75mfQ" name="mirror" specification="_q_XjQ3k6EeSVm5Faw75mfQ">
        <language>java</language>
        <body>int[][] columnSwitch = new int[pent.length][pent[0].length];
		
		for(int i = 0; i &lt; columnSwitch.length; i++)
			for(int j = 0; j &lt; columnSwitch[i].length; j++)
				columnSwitch[i][j] = pent[i][pent[0].length-j-1];
		
		this.pent = columnSwitch;
	</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rDrbgHk6EeSVm5Faw75mfQ" name="getShape" specification="_q_YKUHk6EeSVm5Faw75mfQ">
        <ownedParameter xmi:id="_rDrbgXk6EeSVm5Faw75mfQ" direction="return">
          <name xsi:nil="true"/>
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rDrbgnk6EeSVm5Faw75mfQ" value="*"/>
        </ownedParameter>
        <language>java</language>
        <body>return pent;
	</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rDrbg3k6EeSVm5Faw75mfQ" name="getAmountOfPermutations" specification="_q_YKVHk6EeSVm5Faw75mfQ">
        <ownedParameter xmi:id="_rDrbhHk6EeSVm5Faw75mfQ" direction="return">
          <name xsi:nil="true"/>
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        </ownedParameter>
        <language>java</language>
        <body>int amount = 1;
		if(type == 'f' || type == 'l' || type == 'p' || type =='n' || type =='y') amount = 8;
		else if(type == 'm' || type == 'z' || type == 't' || type == 'u' || type == 'v') amount = 4;
		else if(type == 'i') amount = 2;
		else if(type == 'x') amount = 1;
		return amount;
	</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rDrbiHk6EeSVm5Faw75mfQ" name="getWidth" specification="_q_YxYnk6EeSVm5Faw75mfQ">
        <ownedParameter xmi:id="_rDrbiXk6EeSVm5Faw75mfQ" direction="return">
          <name xsi:nil="true"/>
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        </ownedParameter>
        <language>java</language>
        <body>return pent[0].length;
	</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rDsCkHk6EeSVm5Faw75mfQ" name="getHeight" specification="_q_YxY3k6EeSVm5Faw75mfQ">
        <ownedParameter xmi:id="_rDsCkXk6EeSVm5Faw75mfQ" direction="return">
          <name xsi:nil="true"/>
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        </ownedParameter>
        <language>java</language>
        <body>return pent.length;
	</body>
      </ownedBehavior>
      <ownedOperation xmi:id="_q_VuEHk6EeSVm5Faw75mfQ" name="getAllPentominoes" isStatic="true" method="_rDpmUHk6EeSVm5Faw75mfQ">
        <ownedParameter xmi:id="_q_VuEXk6EeSVm5Faw75mfQ" type="_qWBrUHk6EeSVm5Faw75mfQ" direction="return"/>
      </ownedOperation>
      <ownedOperation xmi:id="_q_W8MXk6EeSVm5Faw75mfQ" name="clone" method="_rDqNZ3k6EeSVm5Faw75mfQ">
        <ownedParameter xmi:id="_q_W8Mnk6EeSVm5Faw75mfQ" type="_qXjVUXk6EeSVm5Faw75mfQ" direction="return"/>
      </ownedOperation>
      <ownedOperation xmi:id="_q_XjQHk6EeSVm5Faw75mfQ" name="equals" method="_rDq0cHk6EeSVm5Faw75mfQ">
        <ownedParameter xmi:id="_q_XjQXk6EeSVm5Faw75mfQ" name="pent" type="_qXbZgHk6EeSVm5Faw75mfQ"/>
        <ownedParameter xmi:id="_rAK0g3k6EeSVm5Faw75mfQ" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_q_XjQnk6EeSVm5Faw75mfQ" name="rotate" method="_rDq0c3k6EeSVm5Faw75mfQ">
        <ownedComment xmi:id="_rDt3wXk6EeSVm5Faw75mfQ">
          <body>This method rotates the array by first transposing the array then switching 
		the columns of the arrays</body>
        </ownedComment>
      </ownedOperation>
      <ownedOperation xmi:id="_q_XjQ3k6EeSVm5Faw75mfQ" name="mirror" method="_rDq0dnk6EeSVm5Faw75mfQ">
        <ownedComment xmi:id="_rDt3w3k6EeSVm5Faw75mfQ">
          <body>It mirrors the shape of the pentomino.</body>
        </ownedComment>
      </ownedOperation>
      <ownedOperation xmi:id="_q_YKUHk6EeSVm5Faw75mfQ" name="getShape" method="_rDrbgHk6EeSVm5Faw75mfQ">
        <ownedComment xmi:id="_rDt3xHk6EeSVm5Faw75mfQ">
          <body>@return pent  Shape of the pentomino.</body>
        </ownedComment>
        <ownedParameter xmi:id="_q_YKUXk6EeSVm5Faw75mfQ" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_q_YKUnk6EeSVm5Faw75mfQ" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_q_YKVHk6EeSVm5Faw75mfQ" name="getAmountOfPermutations" method="_rDrbg3k6EeSVm5Faw75mfQ">
        <ownedComment xmi:id="_rDt3xXk6EeSVm5Faw75mfQ">
          <body>@return amount the amount of shapes the pentomino can take.</body>
        </ownedComment>
        <ownedParameter xmi:id="_rAMCoHk6EeSVm5Faw75mfQ" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_q_YxYnk6EeSVm5Faw75mfQ" name="getWidth" method="_rDrbiHk6EeSVm5Faw75mfQ">
        <ownedComment xmi:id="_rDt3x3k6EeSVm5Faw75mfQ">
          <body>Getter method which returns the width of a pentomino.

		return width</body>
        </ownedComment>
        <ownedParameter xmi:id="_rAMCoXk6EeSVm5Faw75mfQ" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_q_YxY3k6EeSVm5Faw75mfQ" name="getHeight" method="_rDsCkHk6EeSVm5Faw75mfQ">
        <ownedComment xmi:id="_rDt3yHk6EeSVm5Faw75mfQ">
          <body>Getter method which returns the height of a pentomino.

		@return height</body>
        </ownedComment>
        <ownedParameter xmi:id="_rAMConk6EeSVm5Faw75mfQ" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_rAI_UHk6EeSVm5Faw75mfQ" name="getAllPentominoes" isStatic="true" method="_rDqNYXk6EeSVm5Faw75mfQ">
        <ownedParameter xmi:id="_rAJmYHk6EeSVm5Faw75mfQ" name="mirrors">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
        </ownedParameter>
        <ownedParameter xmi:id="_rAJmYXk6EeSVm5Faw75mfQ" type="_qWBrUHk6EeSVm5Faw75mfQ" direction="return"/>
      </ownedOperation>
      <ownedOperation xmi:id="_rAKNcXk6EeSVm5Faw75mfQ" name="Pentomino" method="_rDqNZHk6EeSVm5Faw75mfQ">
        <eAnnotations xmi:id="_rAK0gXk6EeSVm5Faw75mfQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
          <details xmi:id="_rAK0gnk6EeSVm5Faw75mfQ" key="create"/>
        </eAnnotations>
        <ownedComment xmi:id="_rDt3wHk6EeSVm5Faw75mfQ">
          <body>Creates the object based on what shape the users wants it to be 

		@param type of every possible shape.</body>
        </ownedComment>
        <ownedParameter xmi:id="_rAKNcnk6EeSVm5Faw75mfQ" name="type">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#char"/>
        </ownedParameter>
        <ownedParameter xmi:id="_rAK0gHk6EeSVm5Faw75mfQ" type="_qXbZgHk6EeSVm5Faw75mfQ" direction="return"/>
      </ownedOperation>
      <ownedOperation xmi:id="_rALbkHk6EeSVm5Faw75mfQ" name="rotate" method="_rDq0dHk6EeSVm5Faw75mfQ">
        <ownedComment xmi:id="_rDt3wnk6EeSVm5Faw75mfQ">
          <body>Rotates the pentomino a specified amount of times
	 * @param times</body>
        </ownedComment>
        <ownedParameter xmi:id="_rALbkXk6EeSVm5Faw75mfQ" name="times">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_qlGCEHk6EeSVm5Faw75mfQ" name="" memberEnd="_qlGCEXk6EeSVm5Faw75mfQ _qjSEMHk6EeSVm5Faw75mfQ">
      <ownedEnd xmi:id="_qlGCEXk6EeSVm5Faw75mfQ" name="" type="_qNXekXk6EeSVm5Faw75mfQ" association="_qlGCEHk6EeSVm5Faw75mfQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_qlGpIXk6EeSVm5Faw75mfQ" name="" memberEnd="_qlGpInk6EeSVm5Faw75mfQ _qjopgHk6EeSVm5Faw75mfQ">
      <ownedEnd xmi:id="_qlGpInk6EeSVm5Faw75mfQ" name="" type="_qNmIEHk6EeSVm5Faw75mfQ" association="_qlGpIXk6EeSVm5Faw75mfQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_qlHQMXk6EeSVm5Faw75mfQ" name="" memberEnd="_qlHQMnk6EeSVm5Faw75mfQ _qjp3oHk6EeSVm5Faw75mfQ">
      <ownedEnd xmi:id="_qlHQMnk6EeSVm5Faw75mfQ" name="" type="_qNmIEHk6EeSVm5Faw75mfQ" association="_qlHQMXk6EeSVm5Faw75mfQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_qlH3QXk6EeSVm5Faw75mfQ" name="" memberEnd="_qlH3Qnk6EeSVm5Faw75mfQ _qjqesHk6EeSVm5Faw75mfQ">
      <ownedEnd xmi:id="_qlH3Qnk6EeSVm5Faw75mfQ" name="" type="_qNmIEHk6EeSVm5Faw75mfQ" association="_qlH3QXk6EeSVm5Faw75mfQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_qlIeUXk6EeSVm5Faw75mfQ" name="" memberEnd="_qlIeUnk6EeSVm5Faw75mfQ _qjrFwHk6EeSVm5Faw75mfQ">
      <ownedEnd xmi:id="_qlIeUnk6EeSVm5Faw75mfQ" name="" type="_qNmIEHk6EeSVm5Faw75mfQ" association="_qlIeUXk6EeSVm5Faw75mfQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_qlKTgHk6EeSVm5Faw75mfQ" name="" memberEnd="_qlKTgXk6EeSVm5Faw75mfQ _qjuwIHk6EeSVm5Faw75mfQ">
      <ownedEnd xmi:id="_qlKTgXk6EeSVm5Faw75mfQ" name="" type="_qN8GUHk6EeSVm5Faw75mfQ" association="_qlKTgHk6EeSVm5Faw75mfQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_qlK6kHk6EeSVm5Faw75mfQ" name="" memberEnd="_qlK6kXk6EeSVm5Faw75mfQ _qjuwIXk6EeSVm5Faw75mfQ">
      <ownedEnd xmi:id="_qlK6kXk6EeSVm5Faw75mfQ" name="" type="_qN8GUHk6EeSVm5Faw75mfQ" association="_qlK6kHk6EeSVm5Faw75mfQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_qlK6k3k6EeSVm5Faw75mfQ" name="" memberEnd="_qlK6lHk6EeSVm5Faw75mfQ _qjvXMXk6EeSVm5Faw75mfQ">
      <ownedEnd xmi:id="_qlK6lHk6EeSVm5Faw75mfQ" name="" type="_qN8GUHk6EeSVm5Faw75mfQ" association="_qlK6k3k6EeSVm5Faw75mfQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_qlLhoXk6EeSVm5Faw75mfQ" name="" memberEnd="_qlLhonk6EeSVm5Faw75mfQ _qjyagHk6EeSVm5Faw75mfQ">
      <ownedEnd xmi:id="_qlLhonk6EeSVm5Faw75mfQ" name="" type="_qN8GUHk6EeSVm5Faw75mfQ" association="_qlLhoXk6EeSVm5Faw75mfQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_qlMIsXk6EeSVm5Faw75mfQ" name="" memberEnd="_qlMIsnk6EeSVm5Faw75mfQ _qjzooHk6EeSVm5Faw75mfQ">
      <ownedEnd xmi:id="_qlMIsnk6EeSVm5Faw75mfQ" name="" type="_qN8GUHk6EeSVm5Faw75mfQ" association="_qlMIsXk6EeSVm5Faw75mfQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_qlMvwXk6EeSVm5Faw75mfQ" name="" memberEnd="_qlMvwnk6EeSVm5Faw75mfQ _qj69YHk6EeSVm5Faw75mfQ">
      <ownedEnd xmi:id="_qlMvwnk6EeSVm5Faw75mfQ" name="" type="_qOSroHk6EeSVm5Faw75mfQ" association="_qlMvwXk6EeSVm5Faw75mfQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_qlNW0Xk6EeSVm5Faw75mfQ" name="" memberEnd="_qlNW0nk6EeSVm5Faw75mfQ _qj_14Hk6EeSVm5Faw75mfQ">
      <ownedEnd xmi:id="_qlNW0nk6EeSVm5Faw75mfQ" name="" type="_qOijQHk6EeSVm5Faw75mfQ" association="_qlNW0Xk6EeSVm5Faw75mfQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_qlOk8Hk6EeSVm5Faw75mfQ" name="" memberEnd="_qlOk8Xk6EeSVm5Faw75mfQ _qkBrEHk6EeSVm5Faw75mfQ">
      <ownedEnd xmi:id="_qlOk8Xk6EeSVm5Faw75mfQ" name="" type="_qOijQHk6EeSVm5Faw75mfQ" association="_qlOk8Hk6EeSVm5Faw75mfQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_qlPMAHk6EeSVm5Faw75mfQ" name="" memberEnd="_qlPMAXk6EeSVm5Faw75mfQ _qkBrEnk6EeSVm5Faw75mfQ">
      <ownedEnd xmi:id="_qlPMAXk6EeSVm5Faw75mfQ" name="" type="_qOijQHk6EeSVm5Faw75mfQ" association="_qlPMAHk6EeSVm5Faw75mfQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_qlPzEHk6EeSVm5Faw75mfQ" name="" memberEnd="_qlPzEXk6EeSVm5Faw75mfQ _qkC5MXk6EeSVm5Faw75mfQ">
      <ownedEnd xmi:id="_qlPzEXk6EeSVm5Faw75mfQ" name="" type="_qOijQHk6EeSVm5Faw75mfQ" association="_qlPzEHk6EeSVm5Faw75mfQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_qlRoQXk6EeSVm5Faw75mfQ" name="" memberEnd="_qlRoQnk6EeSVm5Faw75mfQ _qkDgQHk6EeSVm5Faw75mfQ">
      <ownedEnd xmi:id="_qlRoQnk6EeSVm5Faw75mfQ" name="" type="_qOijQHk6EeSVm5Faw75mfQ" association="_qlRoQXk6EeSVm5Faw75mfQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_qlSPUXk6EeSVm5Faw75mfQ" name="" memberEnd="_qlSPUnk6EeSVm5Faw75mfQ _qkJm4Hk6EeSVm5Faw75mfQ">
      <ownedEnd xmi:id="_qlSPUnk6EeSVm5Faw75mfQ" name="" type="_qPTYQHk6EeSVm5Faw75mfQ" association="_qlSPUXk6EeSVm5Faw75mfQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_qlS2YHk6EeSVm5Faw75mfQ" name="" memberEnd="_qlS2YXk6EeSVm5Faw75mfQ _qkKN8Xk6EeSVm5Faw75mfQ">
      <ownedEnd xmi:id="_qlS2YXk6EeSVm5Faw75mfQ" name="" type="_qPTYQHk6EeSVm5Faw75mfQ" association="_qlS2YHk6EeSVm5Faw75mfQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_qlS2Y3k6EeSVm5Faw75mfQ" name="" memberEnd="_qlS2ZHk6EeSVm5Faw75mfQ _qkK1AXk6EeSVm5Faw75mfQ">
      <ownedEnd xmi:id="_qlS2ZHk6EeSVm5Faw75mfQ" name="" type="_qPTYQHk6EeSVm5Faw75mfQ" association="_qlS2Y3k6EeSVm5Faw75mfQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_qlTdcXk6EeSVm5Faw75mfQ" name="" memberEnd="_qlTdcnk6EeSVm5Faw75mfQ _qkMqMXk6EeSVm5Faw75mfQ">
      <ownedEnd xmi:id="_qlTdcnk6EeSVm5Faw75mfQ" name="" type="_qPTYQHk6EeSVm5Faw75mfQ" association="_qlTdcXk6EeSVm5Faw75mfQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_qlUEgXk6EeSVm5Faw75mfQ" name="" memberEnd="_qlUEgnk6EeSVm5Faw75mfQ _qkN4UHk6EeSVm5Faw75mfQ">
      <ownedEnd xmi:id="_qlUEgnk6EeSVm5Faw75mfQ" name="" type="_qPTYQHk6EeSVm5Faw75mfQ" association="_qlUEgXk6EeSVm5Faw75mfQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_qlUrkXk6EeSVm5Faw75mfQ" name="" memberEnd="_qlUrknk6EeSVm5Faw75mfQ _qkOfYHk6EeSVm5Faw75mfQ">
      <ownedEnd xmi:id="_qlUrknk6EeSVm5Faw75mfQ" name="" type="_qPTYQHk6EeSVm5Faw75mfQ" association="_qlUrkXk6EeSVm5Faw75mfQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_qlVSoXk6EeSVm5Faw75mfQ" name="" memberEnd="_qlVSonk6EeSVm5Faw75mfQ _qkPGcXk6EeSVm5Faw75mfQ">
      <ownedEnd xmi:id="_qlVSonk6EeSVm5Faw75mfQ" name="" type="_qPTYQHk6EeSVm5Faw75mfQ" association="_qlVSoXk6EeSVm5Faw75mfQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_qlV5sHk6EeSVm5Faw75mfQ" name="" memberEnd="_qlV5sXk6EeSVm5Faw75mfQ _qkPtgXk6EeSVm5Faw75mfQ">
      <ownedEnd xmi:id="_qlV5sXk6EeSVm5Faw75mfQ" name="" type="_qPTYQHk6EeSVm5Faw75mfQ" association="_qlV5sHk6EeSVm5Faw75mfQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_qlV5s3k6EeSVm5Faw75mfQ" name="" memberEnd="_qlV5tHk6EeSVm5Faw75mfQ _qkQUkXk6EeSVm5Faw75mfQ">
      <ownedEnd xmi:id="_qlV5tHk6EeSVm5Faw75mfQ" name="" type="_qPTYQHk6EeSVm5Faw75mfQ" association="_qlV5s3k6EeSVm5Faw75mfQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_q_rsUHk6EeSVm5Faw75mfQ" name="UI">
      <ownedComment xmi:id="_rDspoHk6EeSVm5Faw75mfQ">
        <body>*
@author Kareem Horstink</body>
      </ownedComment>
      <generalization xmi:id="_q_2rcHk6EeSVm5Faw75mfQ" general="_qPatAHk6EeSVm5Faw75mfQ"/>
      <ownedAttribute xmi:id="_rC0f4Hk6EeSVm5Faw75mfQ" name="testcounter1" visibility="private">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        <defaultValue xmi:type="uml:LiteralString" xmi:id="_rC0f4Xk6EeSVm5Faw75mfQ" value="0"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_rC1G8Xk6EeSVm5Faw75mfQ" name="testcounter2" visibility="private">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        <defaultValue xmi:type="uml:LiteralString" xmi:id="_rC1G8nk6EeSVm5Faw75mfQ" value="0"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_rC1uAXk6EeSVm5Faw75mfQ" name="exitButton" visibility="private" type="_qXJFoHk6EeSVm5Faw75mfQ" association="_rD0lcHk6EeSVm5Faw75mfQ"/>
      <ownedAttribute xmi:id="_rC1uA3k6EeSVm5Faw75mfQ" name="jLabel1" visibility="private" type="_qWb7AXk6EeSVm5Faw75mfQ" association="_rD1zkHk6EeSVm5Faw75mfQ"/>
      <ownedAttribute xmi:id="_rC2VEXk6EeSVm5Faw75mfQ" name="jLabelDebug1" visibility="private" type="_qWb7AXk6EeSVm5Faw75mfQ" association="_rD2aoHk6EeSVm5Faw75mfQ"/>
      <ownedAttribute xmi:id="_rC28IXk6EeSVm5Faw75mfQ" name="jPanel1" visibility="private" type="_qWciEXk6EeSVm5Faw75mfQ" association="_rD3BsHk6EeSVm5Faw75mfQ"/>
      <ownedAttribute xmi:id="_rC3jMXk6EeSVm5Faw75mfQ" name="jPanel10" visibility="private" type="_qWciEXk6EeSVm5Faw75mfQ" association="_rD3owHk6EeSVm5Faw75mfQ"/>
      <ownedAttribute xmi:id="_rC4KQHk6EeSVm5Faw75mfQ" name="jPanel11" visibility="private" type="_qWciEXk6EeSVm5Faw75mfQ" association="_rD4P0Hk6EeSVm5Faw75mfQ"/>
      <ownedAttribute xmi:id="_rC4KQnk6EeSVm5Faw75mfQ" name="jPanel12" visibility="private" type="_qWciEXk6EeSVm5Faw75mfQ" association="_rD424Hk6EeSVm5Faw75mfQ"/>
      <ownedAttribute xmi:id="_rC4xUXk6EeSVm5Faw75mfQ" name="jPanel13" visibility="private" type="_qWciEXk6EeSVm5Faw75mfQ" association="_rD5d8Xk6EeSVm5Faw75mfQ"/>
      <ownedAttribute xmi:id="_rC4xU3k6EeSVm5Faw75mfQ" name="jPanel14" visibility="private" type="_qWciEXk6EeSVm5Faw75mfQ" association="_rD6FAXk6EeSVm5Faw75mfQ"/>
      <ownedAttribute xmi:id="_rC5YYXk6EeSVm5Faw75mfQ" name="jPanel15" visibility="private" type="_qWciEXk6EeSVm5Faw75mfQ" association="_rD6sEXk6EeSVm5Faw75mfQ"/>
      <ownedAttribute xmi:id="_rC5YY3k6EeSVm5Faw75mfQ" name="jPanel16" visibility="private" type="_qWciEXk6EeSVm5Faw75mfQ" association="_rD7TIXk6EeSVm5Faw75mfQ"/>
      <ownedAttribute xmi:id="_rC5_cXk6EeSVm5Faw75mfQ" name="jPanel17" visibility="private" type="_qWciEXk6EeSVm5Faw75mfQ" association="_rD76MXk6EeSVm5Faw75mfQ"/>
      <ownedAttribute xmi:id="_rC6mgHk6EeSVm5Faw75mfQ" name="jPanel18" visibility="private" type="_qWciEXk6EeSVm5Faw75mfQ" association="_rD8hQHk6EeSVm5Faw75mfQ"/>
      <ownedAttribute xmi:id="_rC7NkXk6EeSVm5Faw75mfQ" name="jPanel19" visibility="private" type="_qWciEXk6EeSVm5Faw75mfQ" association="_rD8hQ3k6EeSVm5Faw75mfQ"/>
      <ownedAttribute xmi:id="_rC7Nk3k6EeSVm5Faw75mfQ" name="jPanel2" visibility="private" type="_qWciEXk6EeSVm5Faw75mfQ" association="_rD9IUXk6EeSVm5Faw75mfQ"/>
      <ownedAttribute xmi:id="_rC70oXk6EeSVm5Faw75mfQ" name="jPanel20" visibility="private" type="_qWciEXk6EeSVm5Faw75mfQ" association="_rD9vYHk6EeSVm5Faw75mfQ"/>
      <ownedAttribute xmi:id="_rC70o3k6EeSVm5Faw75mfQ" name="jPanel21" visibility="private" type="_qWciEXk6EeSVm5Faw75mfQ" association="_rD9vY3k6EeSVm5Faw75mfQ"/>
      <ownedAttribute xmi:id="_rC8bsXk6EeSVm5Faw75mfQ" name="jPanel22" visibility="private" type="_qWciEXk6EeSVm5Faw75mfQ" association="_rD-WcXk6EeSVm5Faw75mfQ"/>
      <ownedAttribute xmi:id="_rC8bs3k6EeSVm5Faw75mfQ" name="jPanel23" visibility="private" type="_qWciEXk6EeSVm5Faw75mfQ" association="_rD_kkXk6EeSVm5Faw75mfQ"/>
      <ownedAttribute xmi:id="_rC9CwXk6EeSVm5Faw75mfQ" name="jPanel24" visibility="private" type="_qWciEXk6EeSVm5Faw75mfQ" association="_rEALoHk6EeSVm5Faw75mfQ"/>
      <ownedAttribute xmi:id="_rC9Cw3k6EeSVm5Faw75mfQ" name="jPanel25" visibility="private" type="_qWciEXk6EeSVm5Faw75mfQ" association="_rEALo3k6EeSVm5Faw75mfQ"/>
      <ownedAttribute xmi:id="_rC9p0Hk6EeSVm5Faw75mfQ" name="jPanel26" visibility="private" type="_qWciEXk6EeSVm5Faw75mfQ" association="_rEAysXk6EeSVm5Faw75mfQ"/>
      <ownedAttribute xmi:id="_rC9p0nk6EeSVm5Faw75mfQ" name="jPanel27" visibility="private" type="_qWciEXk6EeSVm5Faw75mfQ" association="_rEAytHk6EeSVm5Faw75mfQ"/>
      <ownedAttribute xmi:id="_rC9p1Hk6EeSVm5Faw75mfQ" name="jPanel28" visibility="private" type="_qWciEXk6EeSVm5Faw75mfQ" association="_rEBZwXk6EeSVm5Faw75mfQ"/>
      <ownedAttribute xmi:id="_rC-Q4Xk6EeSVm5Faw75mfQ" name="jPanel29" visibility="private" type="_qWciEXk6EeSVm5Faw75mfQ" association="_rECA0Xk6EeSVm5Faw75mfQ"/>
      <ownedAttribute xmi:id="_rC-Q43k6EeSVm5Faw75mfQ" name="jPanel3" visibility="private" type="_qWciEXk6EeSVm5Faw75mfQ" association="_rECA1Hk6EeSVm5Faw75mfQ"/>
      <ownedAttribute xmi:id="_rC-38Xk6EeSVm5Faw75mfQ" name="jPanel30" visibility="private" type="_qWciEXk6EeSVm5Faw75mfQ" association="_rECn4Xk6EeSVm5Faw75mfQ"/>
      <ownedAttribute xmi:id="_rC-383k6EeSVm5Faw75mfQ" name="jPanel31" visibility="private" type="_qWciEXk6EeSVm5Faw75mfQ" association="_rEDO8Xk6EeSVm5Faw75mfQ"/>
      <ownedAttribute xmi:id="_rC_fAXk6EeSVm5Faw75mfQ" name="jPanel32" visibility="private" type="_qWciEXk6EeSVm5Faw75mfQ" association="_rED2AXk6EeSVm5Faw75mfQ"/>
      <ownedAttribute xmi:id="_rC_fA3k6EeSVm5Faw75mfQ" name="jPanel33" visibility="private" type="_qWciEXk6EeSVm5Faw75mfQ" association="_rEEdEXk6EeSVm5Faw75mfQ"/>
      <ownedAttribute xmi:id="_rDAGEXk6EeSVm5Faw75mfQ" name="jPanel34" visibility="private" type="_qWciEXk6EeSVm5Faw75mfQ" association="_rEFEIXk6EeSVm5Faw75mfQ"/>
      <ownedAttribute xmi:id="_rDAtIXk6EeSVm5Faw75mfQ" name="jPanel35" visibility="private" type="_qWciEXk6EeSVm5Faw75mfQ" association="_rEFrMXk6EeSVm5Faw75mfQ"/>
      <ownedAttribute xmi:id="_rDBUMHk6EeSVm5Faw75mfQ" name="jPanel36" visibility="private" type="_qWciEXk6EeSVm5Faw75mfQ" association="_rEGSQXk6EeSVm5Faw75mfQ"/>
      <ownedAttribute xmi:id="_rDB7QHk6EeSVm5Faw75mfQ" name="jPanel37" visibility="private" type="_qWciEXk6EeSVm5Faw75mfQ" association="_rEG5UXk6EeSVm5Faw75mfQ"/>
      <ownedAttribute xmi:id="_rDCiUHk6EeSVm5Faw75mfQ" name="jPanel38" visibility="private" type="_qWciEXk6EeSVm5Faw75mfQ" association="_rEHgYXk6EeSVm5Faw75mfQ"/>
      <ownedAttribute xmi:id="_rDDJYHk6EeSVm5Faw75mfQ" name="jPanel39" visibility="private" type="_qWciEXk6EeSVm5Faw75mfQ" association="_rEKjsHk6EeSVm5Faw75mfQ"/>
      <ownedAttribute xmi:id="_rDDwcHk6EeSVm5Faw75mfQ" name="jPanel4" visibility="private" type="_qWciEXk6EeSVm5Faw75mfQ" association="_rELKwXk6EeSVm5Faw75mfQ"/>
      <ownedAttribute xmi:id="_rDEXgHk6EeSVm5Faw75mfQ" name="jPanel40" visibility="private" type="_qWciEXk6EeSVm5Faw75mfQ" association="_rELx0Xk6EeSVm5Faw75mfQ"/>
      <ownedAttribute xmi:id="_rDE-kHk6EeSVm5Faw75mfQ" name="jPanel41" visibility="private" type="_qWciEXk6EeSVm5Faw75mfQ" association="_rEM_8Hk6EeSVm5Faw75mfQ"/>
      <ownedAttribute xmi:id="_rDE-knk6EeSVm5Faw75mfQ" name="jPanel42" visibility="private" type="_qWciEXk6EeSVm5Faw75mfQ" association="_rENnAXk6EeSVm5Faw75mfQ"/>
      <ownedAttribute xmi:id="_rDFloXk6EeSVm5Faw75mfQ" name="jPanel43" visibility="private" type="_qWciEXk6EeSVm5Faw75mfQ" association="_rEOOEXk6EeSVm5Faw75mfQ"/>
      <ownedAttribute xmi:id="_rDGMsHk6EeSVm5Faw75mfQ" name="jPanel44" visibility="private" type="_qWciEXk6EeSVm5Faw75mfQ" association="_rEO1IXk6EeSVm5Faw75mfQ"/>
      <ownedAttribute xmi:id="_rDGMsnk6EeSVm5Faw75mfQ" name="jPanel45" visibility="private" type="_qWciEXk6EeSVm5Faw75mfQ" association="_rEQDQHk6EeSVm5Faw75mfQ"/>
      <ownedAttribute xmi:id="_rDGMtHk6EeSVm5Faw75mfQ" name="jPanel46" visibility="private" type="_qWciEXk6EeSVm5Faw75mfQ" association="_rEQqUXk6EeSVm5Faw75mfQ"/>
      <ownedAttribute xmi:id="_rDGzwXk6EeSVm5Faw75mfQ" name="jPanel47" visibility="private" type="_qWciEXk6EeSVm5Faw75mfQ" association="_rERRYHk6EeSVm5Faw75mfQ"/>
      <ownedAttribute xmi:id="_rDGzw3k6EeSVm5Faw75mfQ" name="jPanel48" visibility="private" type="_qWciEXk6EeSVm5Faw75mfQ" association="_rERRY3k6EeSVm5Faw75mfQ"/>
      <ownedAttribute xmi:id="_rDHa0Xk6EeSVm5Faw75mfQ" name="jPanel49" visibility="private" type="_qWciEXk6EeSVm5Faw75mfQ" association="_rESfgHk6EeSVm5Faw75mfQ"/>
      <ownedAttribute xmi:id="_rDHa03k6EeSVm5Faw75mfQ" name="jPanel5" visibility="private" type="_qWciEXk6EeSVm5Faw75mfQ" association="_rESfg3k6EeSVm5Faw75mfQ"/>
      <ownedAttribute xmi:id="_rDIB4Xk6EeSVm5Faw75mfQ" name="jPanel50" visibility="private" type="_qWciEXk6EeSVm5Faw75mfQ" association="_rETGkXk6EeSVm5Faw75mfQ"/>
      <ownedAttribute xmi:id="_rDIB43k6EeSVm5Faw75mfQ" name="jPanel51" visibility="private" type="_qWciEXk6EeSVm5Faw75mfQ" association="_rEU7wHk6EeSVm5Faw75mfQ"/>
      <ownedAttribute xmi:id="_rDIo8Xk6EeSVm5Faw75mfQ" name="jPanel52" visibility="private" type="_qWciEXk6EeSVm5Faw75mfQ" association="_rEVi0Xk6EeSVm5Faw75mfQ"/>
      <ownedAttribute xmi:id="_rDJQAHk6EeSVm5Faw75mfQ" name="jPanel53" visibility="private" type="_qWciEXk6EeSVm5Faw75mfQ" association="_rEWJ4Xk6EeSVm5Faw75mfQ"/>
      <ownedAttribute xmi:id="_rDJQAnk6EeSVm5Faw75mfQ" name="jPanel54" visibility="private" type="_qWciEXk6EeSVm5Faw75mfQ" association="_rEXYAHk6EeSVm5Faw75mfQ"/>
      <ownedAttribute xmi:id="_rDJ3EHk6EeSVm5Faw75mfQ" name="jPanel55" visibility="private" type="_qWciEXk6EeSVm5Faw75mfQ" association="_rEX_EXk6EeSVm5Faw75mfQ"/>
      <ownedAttribute xmi:id="_rDJ3Enk6EeSVm5Faw75mfQ" name="jPanel56" visibility="private" type="_qWciEXk6EeSVm5Faw75mfQ" association="_rEYmIXk6EeSVm5Faw75mfQ"/>
      <ownedAttribute xmi:id="_rDJ3FHk6EeSVm5Faw75mfQ" name="jPanel57" visibility="private" type="_qWciEXk6EeSVm5Faw75mfQ" association="_rEZ0QHk6EeSVm5Faw75mfQ"/>
      <ownedAttribute xmi:id="_rDKeIXk6EeSVm5Faw75mfQ" name="jPanel58" visibility="private" type="_qWciEXk6EeSVm5Faw75mfQ" association="_rEabUXk6EeSVm5Faw75mfQ"/>
      <ownedAttribute xmi:id="_rDKeI3k6EeSVm5Faw75mfQ" name="jPanel59" visibility="private" type="_qWciEXk6EeSVm5Faw75mfQ" association="_rEbCYXk6EeSVm5Faw75mfQ"/>
      <ownedAttribute xmi:id="_rDLFMXk6EeSVm5Faw75mfQ" name="jPanel6" visibility="private" type="_qWciEXk6EeSVm5Faw75mfQ" association="_rEcQgXk6EeSVm5Faw75mfQ"/>
      <ownedAttribute xmi:id="_rDLsQHk6EeSVm5Faw75mfQ" name="jPanel60" visibility="private" type="_qWciEXk6EeSVm5Faw75mfQ" association="_rEc3kXk6EeSVm5Faw75mfQ"/>
      <ownedAttribute xmi:id="_rDLsQnk6EeSVm5Faw75mfQ" name="jPanel61" visibility="private" type="_qWciEXk6EeSVm5Faw75mfQ" association="_rEdeoXk6EeSVm5Faw75mfQ"/>
      <ownedAttribute xmi:id="_rDMTUXk6EeSVm5Faw75mfQ" name="jPanel62" visibility="private" type="_qWciEXk6EeSVm5Faw75mfQ" association="_rEeswHk6EeSVm5Faw75mfQ"/>
      <ownedAttribute xmi:id="_rDM6YXk6EeSVm5Faw75mfQ" name="jPanel63" visibility="private" type="_qWciEXk6EeSVm5Faw75mfQ" association="_rEfT0Xk6EeSVm5Faw75mfQ"/>
      <ownedAttribute xmi:id="_rDNhcXk6EeSVm5Faw75mfQ" name="jPanel64" visibility="private" type="_qWciEXk6EeSVm5Faw75mfQ" association="_rEf64Xk6EeSVm5Faw75mfQ"/>
      <ownedAttribute xmi:id="_rDNhc3k6EeSVm5Faw75mfQ" name="jPanel65" visibility="private" type="_qWciEXk6EeSVm5Faw75mfQ" association="_rEgh8Xk6EeSVm5Faw75mfQ"/>
      <ownedAttribute xmi:id="_rDOIgHk6EeSVm5Faw75mfQ" name="jPanel66" visibility="private" type="_qWciEXk6EeSVm5Faw75mfQ" association="_rEi-MHk6EeSVm5Faw75mfQ"/>
      <ownedAttribute xmi:id="_rDOIgnk6EeSVm5Faw75mfQ" name="jPanel67" visibility="private" type="_qWciEXk6EeSVm5Faw75mfQ" association="_rEjlQXk6EeSVm5Faw75mfQ"/>
      <ownedAttribute xmi:id="_rDOvkHk6EeSVm5Faw75mfQ" name="jPanel68" visibility="private" type="_qWciEXk6EeSVm5Faw75mfQ" association="_rEkMUXk6EeSVm5Faw75mfQ"/>
      <ownedAttribute xmi:id="_rDOvknk6EeSVm5Faw75mfQ" name="jPanel69" visibility="private" type="_qWciEXk6EeSVm5Faw75mfQ" association="_rEkzYXk6EeSVm5Faw75mfQ"/>
      <ownedAttribute xmi:id="_rDPWoXk6EeSVm5Faw75mfQ" name="jPanel7" visibility="private" type="_qWciEXk6EeSVm5Faw75mfQ" association="_rElacXk6EeSVm5Faw75mfQ"/>
      <ownedAttribute xmi:id="_rDPWo3k6EeSVm5Faw75mfQ" name="jPanel70" visibility="private" type="_qWciEXk6EeSVm5Faw75mfQ" association="_rEmBgXk6EeSVm5Faw75mfQ"/>
      <ownedAttribute xmi:id="_rDP9sXk6EeSVm5Faw75mfQ" name="jPanel71" visibility="private" type="_qWciEXk6EeSVm5Faw75mfQ" association="_rEmokXk6EeSVm5Faw75mfQ"/>
      <ownedAttribute xmi:id="_rDQkwHk6EeSVm5Faw75mfQ" name="jPanel72" visibility="private" type="_qWciEXk6EeSVm5Faw75mfQ" association="_rEodwHk6EeSVm5Faw75mfQ"/>
      <ownedAttribute xmi:id="_rDQkwnk6EeSVm5Faw75mfQ" name="jPanel73" visibility="private" type="_qWciEXk6EeSVm5Faw75mfQ" association="_rEpr4Hk6EeSVm5Faw75mfQ"/>
      <ownedAttribute xmi:id="_rDRL0Xk6EeSVm5Faw75mfQ" name="jPanel74" visibility="private" type="_qWciEXk6EeSVm5Faw75mfQ" association="_rEqS8Xk6EeSVm5Faw75mfQ"/>
      <ownedAttribute xmi:id="_rDRL03k6EeSVm5Faw75mfQ" name="jPanel75" visibility="private" type="_qWciEXk6EeSVm5Faw75mfQ" association="_rErhEHk6EeSVm5Faw75mfQ"/>
      <ownedAttribute xmi:id="_rDRy4Xk6EeSVm5Faw75mfQ" name="jPanel76" visibility="private" type="_qWciEXk6EeSVm5Faw75mfQ" association="_rErhE3k6EeSVm5Faw75mfQ"/>
      <ownedAttribute xmi:id="_rDSZ8Hk6EeSVm5Faw75mfQ" name="jPanel8" visibility="private" type="_qWciEXk6EeSVm5Faw75mfQ" association="_rEsIIXk6EeSVm5Faw75mfQ"/>
      <ownedAttribute xmi:id="_rDSZ8nk6EeSVm5Faw75mfQ" name="jPanel9" visibility="private" type="_qWciEXk6EeSVm5Faw75mfQ" association="_rEtWQHk6EeSVm5Faw75mfQ"/>
      <ownedAttribute xmi:id="_rDTBAHk6EeSVm5Faw75mfQ" name="jTextFieldTest" visibility="private" type="_rCaQMHk6EeSVm5Faw75mfQ" association="_rEt9UHk6EeSVm5Faw75mfQ"/>
      <ownedAttribute xmi:id="_rDU2MHk6EeSVm5Faw75mfQ" name="logoLabel" visibility="private" type="_qWb7AXk6EeSVm5Faw75mfQ" association="_rEt9U3k6EeSVm5Faw75mfQ"/>
      <ownedAttribute xmi:id="_rDU2Mnk6EeSVm5Faw75mfQ" name="muteButton" visibility="private" type="_qXJFoHk6EeSVm5Faw75mfQ" association="_rEukYXk6EeSVm5Faw75mfQ"/>
      <ownedAttribute xmi:id="_rDVdQXk6EeSVm5Faw75mfQ" name="newGameButton" visibility="private" type="_qXJFoHk6EeSVm5Faw75mfQ" association="_rEvLcXk6EeSVm5Faw75mfQ"/>
      <ownedAttribute xmi:id="_rDWEUHk6EeSVm5Faw75mfQ" name="score" visibility="private" type="_qWb7AXk6EeSVm5Faw75mfQ" association="_rEvygXk6EeSVm5Faw75mfQ"/>
      <ownedAttribute xmi:id="_rDWrYXk6EeSVm5Faw75mfQ" name="scoreLabel" visibility="private" type="_qWb7AXk6EeSVm5Faw75mfQ" association="_rEwZkXk6EeSVm5Faw75mfQ"/>
      <ownedAttribute xmi:id="_rDXScXk6EeSVm5Faw75mfQ" name="testButton" visibility="private" type="_qXJFoHk6EeSVm5Faw75mfQ" association="_rExAonk6EeSVm5Faw75mfQ"/>
      <ownedAttribute xmi:id="_rDXSc3k6EeSVm5Faw75mfQ" name="board1" visibility="private" isStatic="true">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#char"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rDXSdHk6EeSVm5Faw75mfQ" value="*"/>
        <defaultValue xmi:type="uml:LiteralString" xmi:id="_rDX5gXk6EeSVm5Faw75mfQ" value="new char[5][15]"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_rDX5g3k6EeSVm5Faw75mfQ" name="game" visibility="package" type="_qN8GUHk6EeSVm5Faw75mfQ" association="_rEyOwHk6EeSVm5Faw75mfQ">
        <defaultValue xmi:type="uml:LiteralString" xmi:id="_rDX5hHk6EeSVm5Faw75mfQ" value="new Game()"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_rDYgkXk6EeSVm5Faw75mfQ" name="DEBUG1" visibility="private" isLeaf="true" isReadOnly="true">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
        <defaultValue xmi:type="uml:LiteralString" xmi:id="_rDYgknk6EeSVm5Faw75mfQ" value="true"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_rDZHoHk6EeSVm5Faw75mfQ" name="mute" visibility="private">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
        <defaultValue xmi:type="uml:LiteralString" xmi:id="_rDZHoXk6EeSVm5Faw75mfQ" value="false"/>
      </ownedAttribute>
      <interfaceRealization xmi:id="_q_uIkHk6EeSVm5Faw75mfQ" client="_q_rsUHk6EeSVm5Faw75mfQ" supplier="_qV36UHk6EeSVm5Faw75mfQ" contract="_qV36UHk6EeSVm5Faw75mfQ"/>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rDlU4Hk6EeSVm5Faw75mfQ" name="update" specification="_q_uIkXk6EeSVm5Faw75mfQ">
        <ownedParameter xmi:id="_rDl78Hk6EeSVm5Faw75mfQ" name="obs" type="_qV2sMHk6EeSVm5Faw75mfQ"/>
        <ownedParameter xmi:id="_rDl78Xk6EeSVm5Faw75mfQ" name="obj" type="_qXjVUXk6EeSVm5Faw75mfQ"/>
        <language>java</language>
        <body>System.out.println(&quot;update&quot;);
		char[][] board = game.getBoard().getGrid();
		char[][] finalBoard = game.getFinalBoard().getFinalBoard();
		for (int row = 0; row &lt; board1[0].length; row++)
			for (int col = 0; col &lt; board1.length; col++)
				if (finalBoard[row][col] != 0)
					board1[col][row] = finalBoard[row][col];
				else if (board[row][col] != 0)
					board1[col][row] = board[row][col];

		refresh();
	</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rDl78nk6EeSVm5Faw75mfQ" name="UI" specification="_q_uvoXk6EeSVm5Faw75mfQ">
        <ownedParameter xmi:id="_rDl783k6EeSVm5Faw75mfQ" type="_q_rsUHk6EeSVm5Faw75mfQ" direction="return"/>
        <language>java</language>
        <body>/**
		 * String songloc = &quot;bip.mp3&quot;; Media hit = new Media(songloc);
		 * MediaPlayer mediaPlayer = new MediaPlayer(hit); mediaPlayer.play();
		 */
		initComponents();
		game.addObserver(this);
	</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rDl79Hk6EeSVm5Faw75mfQ" name="initComponents" specification="_q_vWsnk6EeSVm5Faw75mfQ">
        <language>java</language>
        <body>logoLabel = new javax.swing.JLabel();
		exitButton = new javax.swing.JButton();
		testButton = new javax.swing.JButton();
		muteButton = new javax.swing.JButton();
		jTextFieldTest = new javax.swing.JTextField();
		scoreLabel = new javax.swing.JLabel();
		score = new javax.swing.JLabel();

		/*
		 * What about something like this?:
		 * 
		 * jPanel[][] panels = new jPanel[15][5];
		 * 
		 * for( int row = 0; row &lt; panels.length; row ++ ) for( int col = 0; col
		 * &lt; panels[row].length; col ++) panels[row][col] = new
		 * javax.swing.jPanel();
		 */

		jPanel1 = new javax.swing.JPanel();
		jPanel2 = new javax.swing.JPanel();
		jPanel3 = new javax.swing.JPanel();
		jPanel4 = new javax.swing.JPanel();
		jPanel5 = new javax.swing.JPanel();
		jPanel6 = new javax.swing.JPanel();
		jPanel7 = new javax.swing.JPanel();
		jPanel8 = new javax.swing.JPanel();
		jPanel9 = new javax.swing.JPanel();
		jPanel10 = new javax.swing.JPanel();
		jPanel11 = new javax.swing.JPanel();
		jPanel12 = new javax.swing.JPanel();
		jPanel13 = new javax.swing.JPanel();
		jPanel14 = new javax.swing.JPanel();
		jPanel15 = new javax.swing.JPanel();
		jPanel16 = new javax.swing.JPanel();
		jPanel17 = new javax.swing.JPanel();
		jPanel18 = new javax.swing.JPanel();
		jPanel19 = new javax.swing.JPanel();
		jPanel20 = new javax.swing.JPanel();
		jPanel21 = new javax.swing.JPanel();
		jPanel22 = new javax.swing.JPanel();
		jPanel23 = new javax.swing.JPanel();
		jPanel24 = new javax.swing.JPanel();
		jPanel25 = new javax.swing.JPanel();
		jPanel26 = new javax.swing.JPanel();
		jPanel27 = new javax.swing.JPanel();
		jPanel28 = new javax.swing.JPanel();
		jPanel29 = new javax.swing.JPanel();
		jPanel30 = new javax.swing.JPanel();
		jPanel31 = new javax.swing.JPanel();
		jPanel32 = new javax.swing.JPanel();
		jPanel33 = new javax.swing.JPanel();
		jPanel34 = new javax.swing.JPanel();
		jPanel35 = new javax.swing.JPanel();
		jPanel36 = new javax.swing.JPanel();
		jPanel37 = new javax.swing.JPanel();
		jPanel38 = new javax.swing.JPanel();
		jPanel39 = new javax.swing.JPanel();
		jPanel40 = new javax.swing.JPanel();
		jPanel41 = new javax.swing.JPanel();
		jPanel42 = new javax.swing.JPanel();
		jPanel43 = new javax.swing.JPanel();
		jPanel44 = new javax.swing.JPanel();
		jPanel45 = new javax.swing.JPanel();
		jPanel46 = new javax.swing.JPanel();
		jPanel47 = new javax.swing.JPanel();
		jPanel48 = new javax.swing.JPanel();
		jPanel49 = new javax.swing.JPanel();
		jPanel50 = new javax.swing.JPanel();
		jPanel51 = new javax.swing.JPanel();
		jPanel52 = new javax.swing.JPanel();
		jPanel53 = new javax.swing.JPanel();
		jPanel54 = new javax.swing.JPanel();
		jPanel55 = new javax.swing.JPanel();
		jPanel56 = new javax.swing.JPanel();
		jPanel57 = new javax.swing.JPanel();
		jPanel58 = new javax.swing.JPanel();
		jPanel59 = new javax.swing.JPanel();
		jPanel60 = new javax.swing.JPanel();
		jPanel61 = new javax.swing.JPanel();
		jPanel62 = new javax.swing.JPanel();
		jPanel63 = new javax.swing.JPanel();
		jPanel64 = new javax.swing.JPanel();
		jPanel65 = new javax.swing.JPanel();
		jPanel66 = new javax.swing.JPanel();
		jPanel67 = new javax.swing.JPanel();
		jPanel68 = new javax.swing.JPanel();
		jPanel69 = new javax.swing.JPanel();
		jPanel70 = new javax.swing.JPanel();
		jPanel71 = new javax.swing.JPanel();
		jPanel72 = new javax.swing.JPanel();
		jPanel73 = new javax.swing.JPanel();
		jPanel74 = new javax.swing.JPanel();
		jPanel75 = new javax.swing.JPanel();
		newGameButton = new javax.swing.JButton();
		jLabelDebug1 = new javax.swing.JLabel();
		jPanel76 = new javax.swing.JPanel();
		jLabel1 = new javax.swing.JLabel();

		setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
		setName(&quot;UIframe&quot;); // NOI18N
		addKeyListener(new java.awt.event.KeyAdapter() {
			public void keyPressed(java.awt.event.KeyEvent evt) {
				leftPressed(evt);
			}
		});

		logoLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource(
				&quot;Pentris6.png&quot;))); // NOI18N

		exitButton.setFont(new java.awt.Font(&quot;Tahoma&quot;, 0, 24)); // NOI18N
		exitButton.setText(&quot;Exit&quot;);
		exitButton.setPreferredSize(new java.awt.Dimension(100, 60));
		exitButton.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				exitButtonActionPerformed(evt);
			}
		});

		testButton.setText(&quot;Test&quot;);
		testButton.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				testButtonActionPerformed(evt);
			}
		});

		muteButton.setIcon(new javax.swing.ImageIcon(getClass().getResource(
				&quot;Sound.png&quot;))); // NOI18N
		muteButton.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				muteButtonActionPerformed(evt);
			}
		});

		jTextFieldTest.setText(&quot;enter char here&quot;);
		jTextFieldTest
				.setToolTipText(&quot;it will place first char of the string inputted into board; just to check the colour&quot;);

		scoreLabel.setText(&quot;Score:&quot;);

		score.setText(&quot;0&quot;);

		jPanel1.setBackground(new java.awt.Color(255, 255, 255));
		jPanel1.setFocusable(false);
		jPanel1.setPreferredSize(new java.awt.Dimension(45, 45));

		javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(
				jPanel1);
		jPanel1.setLayout(jPanel1Layout);
		jPanel1Layout.setHorizontalGroup(jPanel1Layout.createParallelGroup(
				javax.swing.GroupLayout.Alignment.LEADING).addGap(0, 45,
				Short.MAX_VALUE));
		jPanel1Layout.setVerticalGroup(jPanel1Layout.createParallelGroup(
				javax.swing.GroupLayout.Alignment.LEADING).addGap(0, 45,
				Short.MAX_VALUE));

		jPanel2.setBackground(new java.awt.Color(255, 255, 255));
		jPanel2.setFocusable(false);
		jPanel2.setPreferredSize(new java.awt.Dimension(45, 45));

		javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(
				jPanel2);
		jPanel2.setLayout(jPanel2Layout);
		jPanel2Layout.setHorizontalGroup(jPanel2Layout.createParallelGroup(
				javax.swing.GroupLayout.Alignment.LEADING).addGap(0, 45,
				Short.MAX_VALUE));
		jPanel2Layout.setVerticalGroup(jPanel2Layout.createParallelGroup(
				javax.swing.GroupLayout.Alignment.LEADING).addGap(0, 45,
				Short.MAX_VALUE));

		jPanel3.setBackground(new java.awt.Color(255, 255, 255));
		jPanel3.setFocusable(false);
		jPanel3.setPreferredSize(new java.awt.Dimension(45, 45));

		javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(
				jPanel3);
		jPanel3.setLayout(jPanel3Layout);
		jPanel3Layout.setHorizontalGroup(jPanel3Layout.createParallelGroup(
				javax.swing.GroupLayout.Alignment.LEADING).addGap(0, 45,
				Short.MAX_VALUE));
		jPanel3Layout.setVerticalGroup(jPanel3Layout.createParallelGroup(
				javax.swing.GroupLayout.Alignment.LEADING).addGap(0, 45,
				Short.MAX_VALUE));

		jPanel4.setBackground(new java.awt.Color(255, 255, 255));
		jPanel4.setFocusable(false);
		jPanel4.setPreferredSize(new java.awt.Dimension(45, 45));

		javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(
				jPanel4);
		jPanel4.setLayout(jPanel4Layout);
		jPanel4Layout.setHorizontalGroup(jPanel4Layout.createParallelGroup(
				javax.swing.GroupLayout.Alignment.LEADING).addGap(0, 45,
				Short.MAX_VALUE));
		jPanel4Layout.setVerticalGroup(jPanel4Layout.createParallelGroup(
				javax.swing.GroupLayout.Alignment.LEADING).addGap(0, 45,
				Short.MAX_VALUE));

		jPanel5.setBackground(new java.awt.Color(255, 255, 255));
		jPanel5.setFocusable(false);
		jPanel5.setPreferredSize(new java.awt.Dimension(45, 45));

		javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(
				jPanel5);
		jPanel5.setLayout(jPanel5Layout);
		jPanel5Layout.setHorizontalGroup(jPanel5Layout.createParallelGroup(
				javax.swing.GroupLayout.Alignment.LEADING).addGap(0, 45,
				Short.MAX_VALUE));
		jPanel5Layout.setVerticalGroup(jPanel5Layout.createParallelGroup(
				javax.swing.GroupLayout.Alignment.LEADING).addGap(0, 45,
				Short.MAX_VALUE));

		jPanel6.setBackground(new java.awt.Color(255, 255, 255));
		jPanel6.setFocusable(false);
		jPanel6.setPreferredSize(new java.awt.Dimension(45, 45));

		javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(
				jPanel6);
		jPanel6.setLayout(jPanel6Layout);
		jPanel6Layout.setHorizontalGroup(jPanel6Layout.createParallelGroup(
				javax.swing.GroupLayout.Alignment.LEADING).addGap(0, 45,
				Short.MAX_VALUE));
		jPanel6Layout.setVerticalGroup(jPanel6Layout.createParallelGroup(
				javax.swing.GroupLayout.Alignment.LEADING).addGap(0, 45,
				Short.MAX_VALUE));

		jPanel7.setBackground(new java.awt.Color(255, 255, 255));
		jPanel7.setFocusable(false);
		jPanel7.setPreferredSize(new java.awt.Dimension(45, 45));

		javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(
				jPanel7);
		jPanel7.setLayout(jPanel7Layout);
		jPanel7Layout.setHorizontalGroup(jPanel7Layout.createParallelGroup(
				javax.swing.GroupLayout.Alignment.LEADING).addGap(0, 45,
				Short.MAX_VALUE));
		jPanel7Layout.setVerticalGroup(jPanel7Layout.createParallelGroup(
				javax.swing.GroupLayout.Alignment.LEADING).addGap(0, 45,
				Short.MAX_VALUE));

		jPanel8.setBackground(new java.awt.Color(255, 255, 255));
		jPanel8.setFocusable(false);
		jPanel8.setPreferredSize(new java.awt.Dimension(45, 45));

		javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(
				jPanel8);
		jPanel8.setLayout(jPanel8Layout);
		jPanel8Layout.setHorizontalGroup(jPanel8Layout.createParallelGroup(
				javax.swing.GroupLayout.Alignment.LEADING).addGap(0, 45,
				Short.MAX_VALUE));
		jPanel8Layout.setVerticalGroup(jPanel8Layout.createParallelGroup(
				javax.swing.GroupLayout.Alignment.LEADING).addGap(0, 45,
				Short.MAX_VALUE));

		jPanel9.setBackground(new java.awt.Color(255, 255, 255));
		jPanel9.setFocusable(false);
		jPanel9.setPreferredSize(new java.awt.Dimension(45, 45));

		javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(
				jPanel9);
		jPanel9.setLayout(jPanel9Layout);
		jPanel9Layout.setHorizontalGroup(jPanel9Layout.createParallelGroup(
				javax.swing.GroupLayout.Alignment.LEADING).addGap(0, 45,
				Short.MAX_VALUE));
		jPanel9Layout.setVerticalGroup(jPanel9Layout.createParallelGroup(
				javax.swing.GroupLayout.Alignment.LEADING).addGap(0, 45,
				Short.MAX_VALUE));

		jPanel10.setBackground(new java.awt.Color(255, 255, 255));
		jPanel10.setFocusable(false);
		jPanel10.setPreferredSize(new java.awt.Dimension(45, 45));

		javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(
				jPanel10);
		jPanel10.setLayout(jPanel10Layout);
		jPanel10Layout.setHorizontalGroup(jPanel10Layout.createParallelGroup(
				javax.swing.GroupLayout.Alignment.LEADING).addGap(0, 45,
				Short.MAX_VALUE));
		jPanel10Layout.setVerticalGroup(jPanel10Layout.createParallelGroup(
				javax.swing.GroupLayout.Alignment.LEADING).addGap(0, 45,
				Short.MAX_VALUE));

		jPanel11.setBackground(new java.awt.Color(255, 255, 255));
		jPanel11.setFocusable(false);
		jPanel11.setPreferredSize(new java.awt.Dimension(45, 45));

		javax.swing.GroupLayout jPanel11Layout = new javax.swing.GroupLayout(
				jPanel11);
		jPanel11.setLayout(jPanel11Layout);
		jPanel11Layout.setHorizontalGroup(jPanel11Layout.createParallelGroup(
				javax.swing.GroupLayout.Alignment.LEADING).addGap(0, 45,
				Short.MAX_VALUE));
		jPanel11Layout.setVerticalGroup(jPanel11Layout.createParallelGroup(
				javax.swing.GroupLayout.Alignment.LEADING).addGap(0, 45,
				Short.MAX_VALUE));

		jPanel12.setBackground(new java.awt.Color(255, 255, 255));
		jPanel12.setFocusable(false);
		jPanel12.setPreferredSize(new java.awt.Dimension(45, 45));

		javax.swing.GroupLayout jPanel12Layout = new javax.swing.GroupLayout(
				jPanel12);
		jPanel12.setLayout(jPanel12Layout);
		jPanel12Layout.setHorizontalGroup(jPanel12Layout.createParallelGroup(
				javax.swing.GroupLayout.Alignment.LEADING).addGap(0, 45,
				Short.MAX_VALUE));
		jPanel12Layout.setVerticalGroup(jPanel12Layout.createParallelGroup(
				javax.swing.GroupLayout.Alignment.LEADING).addGap(0, 45,
				Short.MAX_VALUE));

		jPanel13.setBackground(new java.awt.Color(255, 255, 255));
		jPanel13.setFocusable(false);
		jPanel13.setPreferredSize(new java.awt.Dimension(45, 45));

		javax.swing.GroupLayout jPanel13Layout = new javax.swing.GroupLayout(
				jPanel13);
		jPanel13.setLayout(jPanel13Layout);
		jPanel13Layout.setHorizontalGroup(jPanel13Layout.createParallelGroup(
				javax.swing.GroupLayout.Alignment.LEADING).addGap(0, 45,
				Short.MAX_VALUE));
		jPanel13Layout.setVerticalGroup(jPanel13Layout.createParallelGroup(
				javax.swing.GroupLayout.Alignment.LEADING).addGap(0, 45,
				Short.MAX_VALUE));

		jPanel14.setBackground(new java.awt.Color(255, 255, 255));
		jPanel14.setFocusable(false);
		jPanel14.setPreferredSize(new java.awt.Dimension(45, 45));

		javax.swing.GroupLayout jPanel14Layout = new javax.swing.GroupLayout(
				jPanel14);
		jPanel14.setLayout(jPanel14Layout);
		jPanel14Layout.setHorizontalGroup(jPanel14Layout.createParallelGroup(
				javax.swing.GroupLayout.Alignment.LEADING).addGap(0, 45,
				Short.MAX_VALUE));
		jPanel14Layout.setVerticalGroup(jPanel14Layout.createParallelGroup(
				javax.swing.GroupLayout.Alignment.LEADING).addGap(0, 45,
				Short.MAX_VALUE));

		jPanel15.setBackground(new java.awt.Color(255, 255, 255));
		jPanel15.setFocusable(false);
		jPanel15.setPreferredSize(new java.awt.Dimension(45, 45));

		javax.swing.GroupLayout jPanel15Layout = new javax.swing.GroupLayout(
				jPanel15);
		jPanel15.setLayout(jPanel15Layout);
		jPanel15Layout.setHorizontalGroup(jPanel15Layout.createParallelGroup(
				javax.swing.GroupLayout.Alignment.LEADING).addGap(0, 45,
				Short.MAX_VALUE));
		jPanel15Layout.setVerticalGroup(jPanel15Layout.createParallelGroup(
				javax.swing.GroupLayout.Alignment.LEADING).addGap(0, 45,
				Short.MAX_VALUE));

		jPanel16.setBackground(new java.awt.Color(255, 255, 255));
		jPanel16.setFocusable(false);
		jPanel16.setPreferredSize(new java.awt.Dimension(45, 45));

		javax.swing.GroupLayout jPanel16Layout = new javax.swing.GroupLayout(
				jPanel16);
		jPanel16.setLayout(jPanel16Layout);
		jPanel16Layout.setHorizontalGroup(jPanel16Layout.createParallelGroup(
				javax.swing.GroupLayout.Alignment.LEADING).addGap(0, 45,
				Short.MAX_VALUE));
		jPanel16Layout.setVerticalGroup(jPanel16Layout.createParallelGroup(
				javax.swing.GroupLayout.Alignment.LEADING).addGap(0, 45,
				Short.MAX_VALUE));

		jPanel17.setBackground(new java.awt.Color(255, 255, 255));
		jPanel17.setFocusable(false);
		jPanel17.setPreferredSize(new java.awt.Dimension(45, 45));

		javax.swing.GroupLayout jPanel17Layout = new javax.swing.GroupLayout(
				jPanel17);
		jPanel17.setLayout(jPanel17Layout);
		jPanel17Layout.setHorizontalGroup(jPanel17Layout.createParallelGroup(
				javax.swing.GroupLayout.Alignment.LEADING).addGap(0, 45,
				Short.MAX_VALUE));
		jPanel17Layout.setVerticalGroup(jPanel17Layout.createParallelGroup(
				javax.swing.GroupLayout.Alignment.LEADING).addGap(0, 45,
				Short.MAX_VALUE));

		jPanel18.setBackground(new java.awt.Color(255, 255, 255));
		jPanel18.setFocusable(false);
		jPanel18.setPreferredSize(new java.awt.Dimension(45, 45));

		javax.swing.GroupLayout jPanel18Layout = new javax.swing.GroupLayout(
				jPanel18);
		jPanel18.setLayout(jPanel18Layout);
		jPanel18Layout.setHorizontalGroup(jPanel18Layout.createParallelGroup(
				javax.swing.GroupLayout.Alignment.LEADING).addGap(0, 45,
				Short.MAX_VALUE));
		jPanel18Layout.setVerticalGroup(jPanel18Layout.createParallelGroup(
				javax.swing.GroupLayout.Alignment.LEADING).addGap(0, 45,
				Short.MAX_VALUE));

		jPanel19.setBackground(new java.awt.Color(255, 255, 255));
		jPanel19.setFocusable(false);
		jPanel19.setPreferredSize(new java.awt.Dimension(45, 45));

		javax.swing.GroupLayout jPanel19Layout = new javax.swing.GroupLayout(
				jPanel19);
		jPanel19.setLayout(jPanel19Layout);
		jPanel19Layout.setHorizontalGroup(jPanel19Layout.createParallelGroup(
				javax.swing.GroupLayout.Alignment.LEADING).addGap(0, 45,
				Short.MAX_VALUE));
		jPanel19Layout.setVerticalGroup(jPanel19Layout.createParallelGroup(
				javax.swing.GroupLayout.Alignment.LEADING).addGap(0, 45,
				Short.MAX_VALUE));

		jPanel20.setBackground(new java.awt.Color(255, 255, 255));
		jPanel20.setFocusable(false);
		jPanel20.setPreferredSize(new java.awt.Dimension(45, 45));

		javax.swing.GroupLayout jPanel20Layout = new javax.swing.GroupLayout(
				jPanel20);
		jPanel20.setLayout(jPanel20Layout);
		jPanel20Layout.setHorizontalGroup(jPanel20Layout.createParallelGroup(
				javax.swing.GroupLayout.Alignment.LEADING).addGap(0, 45,
				Short.MAX_VALUE));
		jPanel20Layout.setVerticalGroup(jPanel20Layout.createParallelGroup(
				javax.swing.GroupLayout.Alignment.LEADING).addGap(0, 45,
				Short.MAX_VALUE));

		jPanel21.setBackground(new java.awt.Color(255, 255, 255));
		jPanel21.setFocusable(false);
		jPanel21.setPreferredSize(new java.awt.Dimension(45, 45));

		javax.swing.GroupLayout jPanel21Layout = new javax.swing.GroupLayout(
				jPanel21);
		jPanel21.setLayout(jPanel21Layout);
		jPanel21Layout.setHorizontalGroup(jPanel21Layout.createParallelGroup(
				javax.swing.GroupLayout.Alignment.LEADING).addGap(0, 45,
				Short.MAX_VALUE));
		jPanel21Layout.setVerticalGroup(jPanel21Layout.createParallelGroup(
				javax.swing.GroupLayout.Alignment.LEADING).addGap(0, 45,
				Short.MAX_VALUE));

		jPanel22.setBackground(new java.awt.Color(255, 255, 255));
		jPanel22.setFocusable(false);
		jPanel22.setPreferredSize(new java.awt.Dimension(45, 45));

		javax.swing.GroupLayout jPanel22Layout = new javax.swing.GroupLayout(
				jPanel22);
		jPanel22.setLayout(jPanel22Layout);
		jPanel22Layout.setHorizontalGroup(jPanel22Layout.createParallelGroup(
				javax.swing.GroupLayout.Alignment.LEADING).addGap(0, 45,
				Short.MAX_VALUE));
		jPanel22Layout.setVerticalGroup(jPanel22Layout.createParallelGroup(
				javax.swing.GroupLayout.Alignment.LEADING).addGap(0, 45,
				Short.MAX_VALUE));

		jPanel23.setBackground(new java.awt.Color(255, 255, 255));
		jPanel23.setFocusable(false);
		jPanel23.setPreferredSize(new java.awt.Dimension(45, 45));

		javax.swing.GroupLayout jPanel23Layout = new javax.swing.GroupLayout(
				jPanel23);
		jPanel23.setLayout(jPanel23Layout);
		jPanel23Layout.setHorizontalGroup(jPanel23Layout.createParallelGroup(
				javax.swing.GroupLayout.Alignment.LEADING).addGap(0, 45,
				Short.MAX_VALUE));
		jPanel23Layout.setVerticalGroup(jPanel23Layout.createParallelGroup(
				javax.swing.GroupLayout.Alignment.LEADING).addGap(0, 45,
				Short.MAX_VALUE));

		jPanel24.setBackground(new java.awt.Color(255, 255, 255));
		jPanel24.setFocusable(false);
		jPanel24.setPreferredSize(new java.awt.Dimension(45, 45));

		javax.swing.GroupLayout jPanel24Layout = new javax.swing.GroupLayout(
				jPanel24);
		jPanel24.setLayout(jPanel24Layout);
		jPanel24Layout.setHorizontalGroup(jPanel24Layout.createParallelGroup(
				javax.swing.GroupLayout.Alignment.LEADING).addGap(0, 45,
				Short.MAX_VALUE));
		jPanel24Layout.setVerticalGroup(jPanel24Layout.createParallelGroup(
				javax.swing.GroupLayout.Alignment.LEADING).addGap(0, 45,
				Short.MAX_VALUE));

		jPanel25.setBackground(new java.awt.Color(255, 255, 255));
		jPanel25.setFocusable(false);
		jPanel25.setPreferredSize(new java.awt.Dimension(45, 45));

		javax.swing.GroupLayout jPanel25Layout = new javax.swing.GroupLayout(
				jPanel25);
		jPanel25.setLayout(jPanel25Layout);
		jPanel25Layout.setHorizontalGroup(jPanel25Layout.createParallelGroup(
				javax.swing.GroupLayout.Alignment.LEADING).addGap(0, 45,
				Short.MAX_VALUE));
		jPanel25Layout.setVerticalGroup(jPanel25Layout.createParallelGroup(
				javax.swing.GroupLayout.Alignment.LEADING).addGap(0, 45,
				Short.MAX_VALUE));

		jPanel26.setBackground(new java.awt.Color(255, 255, 255));
		jPanel26.setFocusable(false);
		jPanel26.setPreferredSize(new java.awt.Dimension(45, 45));

		javax.swing.GroupLayout jPanel26Layout = new javax.swing.GroupLayout(
				jPanel26);
		jPanel26.setLayout(jPanel26Layout);
		jPanel26Layout.setHorizontalGroup(jPanel26Layout.createParallelGroup(
				javax.swing.GroupLayout.Alignment.LEADING).addGap(0, 45,
				Short.MAX_VALUE));
		jPanel26Layout.setVerticalGroup(jPanel26Layout.createParallelGroup(
				javax.swing.GroupLayout.Alignment.LEADING).addGap(0, 45,
				Short.MAX_VALUE));

		jPanel27.setBackground(new java.awt.Color(255, 255, 255));
		jPanel27.setFocusable(false);
		jPanel27.setPreferredSize(new java.awt.Dimension(45, 45));

		javax.swing.GroupLayout jPanel27Layout = new javax.swing.GroupLayout(
				jPanel27);
		jPanel27.setLayout(jPanel27Layout);
		jPanel27Layout.setHorizontalGroup(jPanel27Layout.createParallelGroup(
				javax.swing.GroupLayout.Alignment.LEADING).addGap(0, 45,
				Short.MAX_VALUE));
		jPanel27Layout.setVerticalGroup(jPanel27Layout.createParallelGroup(
				javax.swing.GroupLayout.Alignment.LEADING).addGap(0, 45,
				Short.MAX_VALUE));

		jPanel28.setBackground(new java.awt.Color(255, 255, 255));
		jPanel28.setFocusable(false);
		jPanel28.setPreferredSize(new java.awt.Dimension(45, 45));

		javax.swing.GroupLayout jPanel28Layout = new javax.swing.GroupLayout(
				jPanel28);
		jPanel28.setLayout(jPanel28Layout);
		jPanel28Layout.setHorizontalGroup(jPanel28Layout.createParallelGroup(
				javax.swing.GroupLayout.Alignment.LEADING).addGap(0, 45,
				Short.MAX_VALUE));
		jPanel28Layout.setVerticalGroup(jPanel28Layout.createParallelGroup(
				javax.swing.GroupLayout.Alignment.LEADING).addGap(0, 45,
				Short.MAX_VALUE));

		jPanel29.setBackground(new java.awt.Color(255, 255, 255));
		jPanel29.setFocusable(false);
		jPanel29.setPreferredSize(new java.awt.Dimension(45, 45));

		javax.swing.GroupLayout jPanel29Layout = new javax.swing.GroupLayout(
				jPanel29);
		jPanel29.setLayout(jPanel29Layout);
		jPanel29Layout.setHorizontalGroup(jPanel29Layout.createParallelGroup(
				javax.swing.GroupLayout.Alignment.LEADING).addGap(0, 45,
				Short.MAX_VALUE));
		jPanel29Layout.setVerticalGroup(jPanel29Layout.createParallelGroup(
				javax.swing.GroupLayout.Alignment.LEADING).addGap(0, 45,
				Short.MAX_VALUE));

		jPanel30.setBackground(new java.awt.Color(255, 255, 255));
		jPanel30.setFocusable(false);
		jPanel30.setPreferredSize(new java.awt.Dimension(45, 45));

		javax.swing.GroupLayout jPanel30Layout = new javax.swing.GroupLayout(
				jPanel30);
		jPanel30.setLayout(jPanel30Layout);
		jPanel30Layout.setHorizontalGroup(jPanel30Layout.createParallelGroup(
				javax.swing.GroupLayout.Alignment.LEADING).addGap(0, 45,
				Short.MAX_VALUE));
		jPanel30Layout.setVerticalGroup(jPanel30Layout.createParallelGroup(
				javax.swing.GroupLayout.Alignment.LEADING).addGap(0, 45,
				Short.MAX_VALUE));

		jPanel31.setBackground(new java.awt.Color(255, 255, 255));
		jPanel31.setFocusable(false);
		jPanel31.setPreferredSize(new java.awt.Dimension(45, 45));

		javax.swing.GroupLayout jPanel31Layout = new javax.swing.GroupLayout(
				jPanel31);
		jPanel31.setLayout(jPanel31Layout);
		jPanel31Layout.setHorizontalGroup(jPanel31Layout.createParallelGroup(
				javax.swing.GroupLayout.Alignment.LEADING).addGap(0, 45,
				Short.MAX_VALUE));
		jPanel31Layout.setVerticalGroup(jPanel31Layout.createParallelGroup(
				javax.swing.GroupLayout.Alignment.LEADING).addGap(0, 45,
				Short.MAX_VALUE));

		jPanel32.setBackground(new java.awt.Color(255, 255, 255));
		jPanel32.setFocusable(false);
		jPanel32.setPreferredSize(new java.awt.Dimension(45, 45));

		javax.swing.GroupLayout jPanel32Layout = new javax.swing.GroupLayout(
				jPanel32);
		jPanel32.setLayout(jPanel32Layout);
		jPanel32Layout.setHorizontalGroup(jPanel32Layout.createParallelGroup(
				javax.swing.GroupLayout.Alignment.LEADING).addGap(0, 45,
				Short.MAX_VALUE));
		jPanel32Layout.setVerticalGroup(jPanel32Layout.createParallelGroup(
				javax.swing.GroupLayout.Alignment.LEADING).addGap(0, 45,
				Short.MAX_VALUE));

		jPanel33.setBackground(new java.awt.Color(255, 255, 255));
		jPanel33.setFocusable(false);
		jPanel33.setPreferredSize(new java.awt.Dimension(45, 45));

		javax.swing.GroupLayout jPanel33Layout = new javax.swing.GroupLayout(
				jPanel33);
		jPanel33.setLayout(jPanel33Layout);
		jPanel33Layout.setHorizontalGroup(jPanel33Layout.createParallelGroup(
				javax.swing.GroupLayout.Alignment.LEADING).addGap(0, 45,
				Short.MAX_VALUE));
		jPanel33Layout.setVerticalGroup(jPanel33Layout.createParallelGroup(
				javax.swing.GroupLayout.Alignment.LEADING).addGap(0, 45,
				Short.MAX_VALUE));

		jPanel34.setBackground(new java.awt.Color(255, 255, 255));
		jPanel34.setFocusable(false);
		jPanel34.setPreferredSize(new java.awt.Dimension(45, 45));

		javax.swing.GroupLayout jPanel34Layout = new javax.swing.GroupLayout(
				jPanel34);
		jPanel34.setLayout(jPanel34Layout);
		jPanel34Layout.setHorizontalGroup(jPanel34Layout.createParallelGroup(
				javax.swing.GroupLayout.Alignment.LEADING).addGap(0, 45,
				Short.MAX_VALUE));
		jPanel34Layout.setVerticalGroup(jPanel34Layout.createParallelGroup(
				javax.swing.GroupLayout.Alignment.LEADING).addGap(0, 45,
				Short.MAX_VALUE));

		jPanel35.setBackground(new java.awt.Color(255, 255, 255));
		jPanel35.setFocusable(false);
		jPanel35.setPreferredSize(new java.awt.Dimension(45, 45));

		javax.swing.GroupLayout jPanel35Layout = new javax.swing.GroupLayout(
				jPanel35);
		jPanel35.setLayout(jPanel35Layout);
		jPanel35Layout.setHorizontalGroup(jPanel35Layout.createParallelGroup(
				javax.swing.GroupLayout.Alignment.LEADING).addGap(0, 45,
				Short.MAX_VALUE));
		jPanel35Layout.setVerticalGroup(jPanel35Layout.createParallelGroup(
				javax.swing.GroupLayout.Alignment.LEADING).addGap(0, 45,
				Short.MAX_VALUE));

		jPanel36.setBackground(new java.awt.Color(255, 255, 255));
		jPanel36.setFocusable(false);
		jPanel36.setPreferredSize(new java.awt.Dimension(45, 45));

		javax.swing.GroupLayout jPanel36Layout = new javax.swing.GroupLayout(
				jPanel36);
		jPanel36.setLayout(jPanel36Layout);
		jPanel36Layout.setHorizontalGroup(jPanel36Layout.createParallelGroup(
				javax.swing.GroupLayout.Alignment.LEADING).addGap(0, 45,
				Short.MAX_VALUE));
		jPanel36Layout.setVerticalGroup(jPanel36Layout.createParallelGroup(
				javax.swing.GroupLayout.Alignment.LEADING).addGap(0, 45,
				Short.MAX_VALUE));

		jPanel37.setBackground(new java.awt.Color(255, 255, 255));
		jPanel37.setFocusable(false);
		jPanel37.setPreferredSize(new java.awt.Dimension(45, 45));

		javax.swing.GroupLayout jPanel37Layout = new javax.swing.GroupLayout(
				jPanel37);
		jPanel37.setLayout(jPanel37Layout);
		jPanel37Layout.setHorizontalGroup(jPanel37Layout.createParallelGroup(
				javax.swing.GroupLayout.Alignment.LEADING).addGap(0, 45,
				Short.MAX_VALUE));
		jPanel37Layout.setVerticalGroup(jPanel37Layout.createParallelGroup(
				javax.swing.GroupLayout.Alignment.LEADING).addGap(0, 45,
				Short.MAX_VALUE));

		jPanel38.setBackground(new java.awt.Color(255, 255, 255));
		jPanel38.setFocusable(false);
		jPanel38.setPreferredSize(new java.awt.Dimension(45, 45));

		javax.swing.GroupLayout jPanel38Layout = new javax.swing.GroupLayout(
				jPanel38);
		jPanel38.setLayout(jPanel38Layout);
		jPanel38Layout.setHorizontalGroup(jPanel38Layout.createParallelGroup(
				javax.swing.GroupLayout.Alignment.LEADING).addGap(0, 45,
				Short.MAX_VALUE));
		jPanel38Layout.setVerticalGroup(jPanel38Layout.createParallelGroup(
				javax.swing.GroupLayout.Alignment.LEADING).addGap(0, 45,
				Short.MAX_VALUE));

		jPanel39.setBackground(new java.awt.Color(255, 255, 255));
		jPanel39.setFocusable(false);
		jPanel39.setPreferredSize(new java.awt.Dimension(45, 45));

		javax.swing.GroupLayout jPanel39Layout = new javax.swing.GroupLayout(
				jPanel39);
		jPanel39.setLayout(jPanel39Layout);
		jPanel39Layout.setHorizontalGroup(jPanel39Layout.createParallelGroup(
				javax.swing.GroupLayout.Alignment.LEADING).addGap(0, 45,
				Short.MAX_VALUE));
		jPanel39Layout.setVerticalGroup(jPanel39Layout.createParallelGroup(
				javax.swing.GroupLayout.Alignment.LEADING).addGap(0, 45,
				Short.MAX_VALUE));

		jPanel40.setBackground(new java.awt.Color(255, 255, 255));
		jPanel40.setFocusable(false);
		jPanel40.setPreferredSize(new java.awt.Dimension(45, 45));

		javax.swing.GroupLayout jPanel40Layout = new javax.swing.GroupLayout(
				jPanel40);
		jPanel40.setLayout(jPanel40Layout);
		jPanel40Layout.setHorizontalGroup(jPanel40Layout.createParallelGroup(
				javax.swing.GroupLayout.Alignment.LEADING).addGap(0, 45,
				Short.MAX_VALUE));
		jPanel40Layout.setVerticalGroup(jPanel40Layout.createParallelGroup(
				javax.swing.GroupLayout.Alignment.LEADING).addGap(0, 45,
				Short.MAX_VALUE));

		jPanel41.setBackground(new java.awt.Color(255, 255, 255));
		jPanel41.setFocusable(false);
		jPanel41.setPreferredSize(new java.awt.Dimension(45, 45));

		javax.swing.GroupLayout jPanel41Layout = new javax.swing.GroupLayout(
				jPanel41);
		jPanel41.setLayout(jPanel41Layout);
		jPanel41Layout.setHorizontalGroup(jPanel41Layout.createParallelGroup(
				javax.swing.GroupLayout.Alignment.LEADING).addGap(0, 45,
				Short.MAX_VALUE));
		jPanel41Layout.setVerticalGroup(jPanel41Layout.createParallelGroup(
				javax.swing.GroupLayout.Alignment.LEADING).addGap(0, 45,
				Short.MAX_VALUE));

		jPanel42.setBackground(new java.awt.Color(255, 255, 255));
		jPanel42.setFocusable(false);
		jPanel42.setPreferredSize(new java.awt.Dimension(45, 45));

		javax.swing.GroupLayout jPanel42Layout = new javax.swing.GroupLayout(
				jPanel42);
		jPanel42.setLayout(jPanel42Layout);
		jPanel42Layout.setHorizontalGroup(jPanel42Layout.createParallelGroup(
				javax.swing.GroupLayout.Alignment.LEADING).addGap(0, 45,
				Short.MAX_VALUE));
		jPanel42Layout.setVerticalGroup(jPanel42Layout.createParallelGroup(
				javax.swing.GroupLayout.Alignment.LEADING).addGap(0, 45,
				Short.MAX_VALUE));

		jPanel43.setBackground(new java.awt.Color(255, 255, 255));
		jPanel43.setFocusable(false);
		jPanel43.setPreferredSize(new java.awt.Dimension(45, 45));

		javax.swing.GroupLayout jPanel43Layout = new javax.swing.GroupLayout(
				jPanel43);
		jPanel43.setLayout(jPanel43Layout);
		jPanel43Layout.setHorizontalGroup(jPanel43Layout.createParallelGroup(
				javax.swing.GroupLayout.Alignment.LEADING).addGap(0, 45,
				Short.MAX_VALUE));
		jPanel43Layout.setVerticalGroup(jPanel43Layout.createParallelGroup(
				javax.swing.GroupLayout.Alignment.LEADING).addGap(0, 45,
				Short.MAX_VALUE));

		jPanel44.setBackground(new java.awt.Color(255, 255, 255));
		jPanel44.setFocusable(false);
		jPanel44.setPreferredSize(new java.awt.Dimension(45, 45));

		javax.swing.GroupLayout jPanel44Layout = new javax.swing.GroupLayout(
				jPanel44);
		jPanel44.setLayout(jPanel44Layout);
		jPanel44Layout.setHorizontalGroup(jPanel44Layout.createParallelGroup(
				javax.swing.GroupLayout.Alignment.LEADING).addGap(0, 45,
				Short.MAX_VALUE));
		jPanel44Layout.setVerticalGroup(jPanel44Layout.createParallelGroup(
				javax.swing.GroupLayout.Alignment.LEADING).addGap(0, 45,
				Short.MAX_VALUE));

		jPanel45.setBackground(new java.awt.Color(255, 255, 255));
		jPanel45.setFocusable(false);
		jPanel45.setPreferredSize(new java.awt.Dimension(45, 45));

		javax.swing.GroupLayout jPanel45Layout = new javax.swing.GroupLayout(
				jPanel45);
		jPanel45.setLayout(jPanel45Layout);
		jPanel45Layout.setHorizontalGroup(jPanel45Layout.createParallelGroup(
				javax.swing.GroupLayout.Alignment.LEADING).addGap(0, 45,
				Short.MAX_VALUE));
		jPanel45Layout.setVerticalGroup(jPanel45Layout.createParallelGroup(
				javax.swing.GroupLayout.Alignment.LEADING).addGap(0, 45,
				Short.MAX_VALUE));

		jPanel46.setBackground(new java.awt.Color(255, 255, 255));
		jPanel46.setFocusable(false);
		jPanel46.setPreferredSize(new java.awt.Dimension(45, 45));

		javax.swing.GroupLayout jPanel46Layout = new javax.swing.GroupLayout(
				jPanel46);
		jPanel46.setLayout(jPanel46Layout);
		jPanel46Layout.setHorizontalGroup(jPanel46Layout.createParallelGroup(
				javax.swing.GroupLayout.Alignment.LEADING).addGap(0, 45,
				Short.MAX_VALUE));
		jPanel46Layout.setVerticalGroup(jPanel46Layout.createParallelGroup(
				javax.swing.GroupLayout.Alignment.LEADING).addGap(0, 45,
				Short.MAX_VALUE));

		jPanel47.setBackground(new java.awt.Color(255, 255, 255));
		jPanel47.setFocusable(false);
		jPanel47.setPreferredSize(new java.awt.Dimension(45, 45));

		javax.swing.GroupLayout jPanel47Layout = new javax.swing.GroupLayout(
				jPanel47);
		jPanel47.setLayout(jPanel47Layout);
		jPanel47Layout.setHorizontalGroup(jPanel47Layout.createParallelGroup(
				javax.swing.GroupLayout.Alignment.LEADING).addGap(0, 45,
				Short.MAX_VALUE));
		jPanel47Layout.setVerticalGroup(jPanel47Layout.createParallelGroup(
				javax.swing.GroupLayout.Alignment.LEADING).addGap(0, 45,
				Short.MAX_VALUE));

		jPanel48.setBackground(new java.awt.Color(255, 255, 255));
		jPanel48.setFocusable(false);
		jPanel48.setPreferredSize(new java.awt.Dimension(45, 45));

		javax.swing.GroupLayout jPanel48Layout = new javax.swing.GroupLayout(
				jPanel48);
		jPanel48.setLayout(jPanel48Layout);
		jPanel48Layout.setHorizontalGroup(jPanel48Layout.createParallelGroup(
				javax.swing.GroupLayout.Alignment.LEADING).addGap(0, 45,
				Short.MAX_VALUE));
		jPanel48Layout.setVerticalGroup(jPanel48Layout.createParallelGroup(
				javax.swing.GroupLayout.Alignment.LEADING).addGap(0, 45,
				Short.MAX_VALUE));

		jPanel49.setBackground(new java.awt.Color(255, 255, 255));
		jPanel49.setFocusable(false);
		jPanel49.setPreferredSize(new java.awt.Dimension(45, 45));

		javax.swing.GroupLayout jPanel49Layout = new javax.swing.GroupLayout(
				jPanel49);
		jPanel49.setLayout(jPanel49Layout);
		jPanel49Layout.setHorizontalGroup(jPanel49Layout.createParallelGroup(
				javax.swing.GroupLayout.Alignment.LEADING).addGap(0, 45,
				Short.MAX_VALUE));
		jPanel49Layout.setVerticalGroup(jPanel49Layout.createParallelGroup(
				javax.swing.GroupLayout.Alignment.LEADING).addGap(0, 45,
				Short.MAX_VALUE));

		jPanel50.setBackground(new java.awt.Color(255, 255, 255));
		jPanel50.setFocusable(false);
		jPanel50.setPreferredSize(new java.awt.Dimension(45, 45));

		javax.swing.GroupLayout jPanel50Layout = new javax.swing.GroupLayout(
				jPanel50);
		jPanel50.setLayout(jPanel50Layout);
		jPanel50Layout.setHorizontalGroup(jPanel50Layout.createParallelGroup(
				javax.swing.GroupLayout.Alignment.LEADING).addGap(0, 45,
				Short.MAX_VALUE));
		jPanel50Layout.setVerticalGroup(jPanel50Layout.createParallelGroup(
				javax.swing.GroupLayout.Alignment.LEADING).addGap(0, 45,
				Short.MAX_VALUE));

		jPanel51.setBackground(new java.awt.Color(255, 255, 255));
		jPanel51.setFocusable(false);
		jPanel51.setPreferredSize(new java.awt.Dimension(45, 45));

		javax.swing.GroupLayout jPanel51Layout = new javax.swing.GroupLayout(
				jPanel51);
		jPanel51.setLayout(jPanel51Layout);
		jPanel51Layout.setHorizontalGroup(jPanel51Layout.createParallelGroup(
				javax.swing.GroupLayout.Alignment.LEADING).addGap(0, 45,
				Short.MAX_VALUE));
		jPanel51Layout.setVerticalGroup(jPanel51Layout.createParallelGroup(
				javax.swing.GroupLayout.Alignment.LEADING).addGap(0, 45,
				Short.MAX_VALUE));

		jPanel52.setBackground(new java.awt.Color(255, 255, 255));
		jPanel52.setFocusable(false);
		jPanel52.setPreferredSize(new java.awt.Dimension(45, 45));

		javax.swing.GroupLayout jPanel52Layout = new javax.swing.GroupLayout(
				jPanel52);
		jPanel52.setLayout(jPanel52Layout);
		jPanel52Layout.setHorizontalGroup(jPanel52Layout.createParallelGroup(
				javax.swing.GroupLayout.Alignment.LEADING).addGap(0, 45,
				Short.MAX_VALUE));
		jPanel52Layout.setVerticalGroup(jPanel52Layout.createParallelGroup(
				javax.swing.GroupLayout.Alignment.LEADING).addGap(0, 45,
				Short.MAX_VALUE));

		jPanel53.setBackground(new java.awt.Color(255, 255, 255));
		jPanel53.setFocusable(false);
		jPanel53.setPreferredSize(new java.awt.Dimension(45, 45));

		javax.swing.GroupLayout jPanel53Layout = new javax.swing.GroupLayout(
				jPanel53);
		jPanel53.setLayout(jPanel53Layout);
		jPanel53Layout.setHorizontalGroup(jPanel53Layout.createParallelGroup(
				javax.swing.GroupLayout.Alignment.LEADING).addGap(0, 45,
				Short.MAX_VALUE));
		jPanel53Layout.setVerticalGroup(jPanel53Layout.createParallelGroup(
				javax.swing.GroupLayout.Alignment.LEADING).addGap(0, 45,
				Short.MAX_VALUE));

		jPanel54.setBackground(new java.awt.Color(255, 255, 255));
		jPanel54.setFocusable(false);
		jPanel54.setPreferredSize(new java.awt.Dimension(45, 45));

		javax.swing.GroupLayout jPanel54Layout = new javax.swing.GroupLayout(
				jPanel54);
		jPanel54.setLayout(jPanel54Layout);
		jPanel54Layout.setHorizontalGroup(jPanel54Layout.createParallelGroup(
				javax.swing.GroupLayout.Alignment.LEADING).addGap(0, 45,
				Short.MAX_VALUE));
		jPanel54Layout.setVerticalGroup(jPanel54Layout.createParallelGroup(
				javax.swing.GroupLayout.Alignment.LEADING).addGap(0, 45,
				Short.MAX_VALUE));

		jPanel55.setBackground(new java.awt.Color(255, 255, 255));
		jPanel55.setFocusable(false);
		jPanel55.setPreferredSize(new java.awt.Dimension(45, 45));

		javax.swing.GroupLayout jPanel55Layout = new javax.swing.GroupLayout(
				jPanel55);
		jPanel55.setLayout(jPanel55Layout);
		jPanel55Layout.setHorizontalGroup(jPanel55Layout.createParallelGroup(
				javax.swing.GroupLayout.Alignment.LEADING).addGap(0, 45,
				Short.MAX_VALUE));
		jPanel55Layout.setVerticalGroup(jPanel55Layout.createParallelGroup(
				javax.swing.GroupLayout.Alignment.LEADING).addGap(0, 45,
				Short.MAX_VALUE));

		jPanel56.setBackground(new java.awt.Color(255, 255, 255));
		jPanel56.setFocusable(false);
		jPanel56.setPreferredSize(new java.awt.Dimension(45, 45));

		javax.swing.GroupLayout jPanel56Layout = new javax.swing.GroupLayout(
				jPanel56);
		jPanel56.setLayout(jPanel56Layout);
		jPanel56Layout.setHorizontalGroup(jPanel56Layout.createParallelGroup(
				javax.swing.GroupLayout.Alignment.LEADING).addGap(0, 45,
				Short.MAX_VALUE));
		jPanel56Layout.setVerticalGroup(jPanel56Layout.createParallelGroup(
				javax.swing.GroupLayout.Alignment.LEADING).addGap(0, 45,
				Short.MAX_VALUE));

		jPanel57.setBackground(new java.awt.Color(255, 255, 255));
		jPanel57.setFocusable(false);
		jPanel57.setPreferredSize(new java.awt.Dimension(45, 45));

		javax.swing.GroupLayout jPanel57Layout = new javax.swing.GroupLayout(
				jPanel57);
		jPanel57.setLayout(jPanel57Layout);
		jPanel57Layout.setHorizontalGroup(jPanel57Layout.createParallelGroup(
				javax.swing.GroupLayout.Alignment.LEADING).addGap(0, 45,
				Short.MAX_VALUE));
		jPanel57Layout.setVerticalGroup(jPanel57Layout.createParallelGroup(
				javax.swing.GroupLayout.Alignment.LEADING).addGap(0, 45,
				Short.MAX_VALUE));

		jPanel58.setBackground(new java.awt.Color(255, 255, 255));
		jPanel58.setFocusable(false);
		jPanel58.setPreferredSize(new java.awt.Dimension(45, 45));

		javax.swing.GroupLayout jPanel58Layout = new javax.swing.GroupLayout(
				jPanel58);
		jPanel58.setLayout(jPanel58Layout);
		jPanel58Layout.setHorizontalGroup(jPanel58Layout.createParallelGroup(
				javax.swing.GroupLayout.Alignment.LEADING).addGap(0, 45,
				Short.MAX_VALUE));
		jPanel58Layout.setVerticalGroup(jPanel58Layout.createParallelGroup(
				javax.swing.GroupLayout.Alignment.LEADING).addGap(0, 45,
				Short.MAX_VALUE));

		jPanel59.setBackground(new java.awt.Color(255, 255, 255));
		jPanel59.setFocusable(false);
		jPanel59.setPreferredSize(new java.awt.Dimension(45, 45));

		javax.swing.GroupLayout jPanel59Layout = new javax.swing.GroupLayout(
				jPanel59);
		jPanel59.setLayout(jPanel59Layout);
		jPanel59Layout.setHorizontalGroup(jPanel59Layout.createParallelGroup(
				javax.swing.GroupLayout.Alignment.LEADING).addGap(0, 45,
				Short.MAX_VALUE));
		jPanel59Layout.setVerticalGroup(jPanel59Layout.createParallelGroup(
				javax.swing.GroupLayout.Alignment.LEADING).addGap(0, 45,
				Short.MAX_VALUE));

		jPanel60.setBackground(new java.awt.Color(255, 255, 255));
		jPanel60.setFocusable(false);
		jPanel60.setPreferredSize(new java.awt.Dimension(45, 45));

		javax.swing.GroupLayout jPanel60Layout = new javax.swing.GroupLayout(
				jPanel60);
		jPanel60.setLayout(jPanel60Layout);
		jPanel60Layout.setHorizontalGroup(jPanel60Layout.createParallelGroup(
				javax.swing.GroupLayout.Alignment.LEADING).addGap(0, 45,
				Short.MAX_VALUE));
		jPanel60Layout.setVerticalGroup(jPanel60Layout.createParallelGroup(
				javax.swing.GroupLayout.Alignment.LEADING).addGap(0, 45,
				Short.MAX_VALUE));

		jPanel61.setBackground(new java.awt.Color(255, 255, 255));
		jPanel61.setFocusable(false);
		jPanel61.setPreferredSize(new java.awt.Dimension(45, 45));

		javax.swing.GroupLayout jPanel61Layout = new javax.swing.GroupLayout(
				jPanel61);
		jPanel61.setLayout(jPanel61Layout);
		jPanel61Layout.setHorizontalGroup(jPanel61Layout.createParallelGroup(
				javax.swing.GroupLayout.Alignment.LEADING).addGap(0, 45,
				Short.MAX_VALUE));
		jPanel61Layout.setVerticalGroup(jPanel61Layout.createParallelGroup(
				javax.swing.GroupLayout.Alignment.LEADING).addGap(0, 45,
				Short.MAX_VALUE));

		jPanel62.setBackground(new java.awt.Color(255, 255, 255));
		jPanel62.setFocusable(false);
		jPanel62.setPreferredSize(new java.awt.Dimension(45, 45));

		javax.swing.GroupLayout jPanel62Layout = new javax.swing.GroupLayout(
				jPanel62);
		jPanel62.setLayout(jPanel62Layout);
		jPanel62Layout.setHorizontalGroup(jPanel62Layout.createParallelGroup(
				javax.swing.GroupLayout.Alignment.LEADING).addGap(0, 45,
				Short.MAX_VALUE));
		jPanel62Layout.setVerticalGroup(jPanel62Layout.createParallelGroup(
				javax.swing.GroupLayout.Alignment.LEADING).addGap(0, 45,
				Short.MAX_VALUE));

		jPanel63.setBackground(new java.awt.Color(255, 255, 255));
		jPanel63.setFocusable(false);
		jPanel63.setPreferredSize(new java.awt.Dimension(45, 45));

		javax.swing.GroupLayout jPanel63Layout = new javax.swing.GroupLayout(
				jPanel63);
		jPanel63.setLayout(jPanel63Layout);
		jPanel63Layout.setHorizontalGroup(jPanel63Layout.createParallelGroup(
				javax.swing.GroupLayout.Alignment.LEADING).addGap(0, 45,
				Short.MAX_VALUE));
		jPanel63Layout.setVerticalGroup(jPanel63Layout.createParallelGroup(
				javax.swing.GroupLayout.Alignment.LEADING).addGap(0, 45,
				Short.MAX_VALUE));

		jPanel64.setBackground(new java.awt.Color(255, 255, 255));
		jPanel64.setFocusable(false);
		jPanel64.setPreferredSize(new java.awt.Dimension(45, 45));

		javax.swing.GroupLayout jPanel64Layout = new javax.swing.GroupLayout(
				jPanel64);
		jPanel64.setLayout(jPanel64Layout);
		jPanel64Layout.setHorizontalGroup(jPanel64Layout.createParallelGroup(
				javax.swing.GroupLayout.Alignment.LEADING).addGap(0, 45,
				Short.MAX_VALUE));
		jPanel64Layout.setVerticalGroup(jPanel64Layout.createParallelGroup(
				javax.swing.GroupLayout.Alignment.LEADING).addGap(0, 45,
				Short.MAX_VALUE));

		jPanel65.setBackground(new java.awt.Color(255, 255, 255));
		jPanel65.setFocusable(false);
		jPanel65.setPreferredSize(new java.awt.Dimension(45, 45));

		javax.swing.GroupLayout jPanel65Layout = new javax.swing.GroupLayout(
				jPanel65);
		jPanel65.setLayout(jPanel65Layout);
		jPanel65Layout.setHorizontalGroup(jPanel65Layout.createParallelGroup(
				javax.swing.GroupLayout.Alignment.LEADING).addGap(0, 45,
				Short.MAX_VALUE));
		jPanel65Layout.setVerticalGroup(jPanel65Layout.createParallelGroup(
				javax.swing.GroupLayout.Alignment.LEADING).addGap(0, 45,
				Short.MAX_VALUE));

		jPanel66.setBackground(new java.awt.Color(255, 255, 255));
		jPanel66.setFocusable(false);
		jPanel66.setPreferredSize(new java.awt.Dimension(45, 45));

		javax.swing.GroupLayout jPanel66Layout = new javax.swing.GroupLayout(
				jPanel66);
		jPanel66.setLayout(jPanel66Layout);
		jPanel66Layout.setHorizontalGroup(jPanel66Layout.createParallelGroup(
				javax.swing.GroupLayout.Alignment.LEADING).addGap(0, 45,
				Short.MAX_VALUE));
		jPanel66Layout.setVerticalGroup(jPanel66Layout.createParallelGroup(
				javax.swing.GroupLayout.Alignment.LEADING).addGap(0, 45,
				Short.MAX_VALUE));

		jPanel67.setBackground(new java.awt.Color(255, 255, 255));
		jPanel67.setFocusable(false);
		jPanel67.setPreferredSize(new java.awt.Dimension(45, 45));

		javax.swing.GroupLayout jPanel67Layout = new javax.swing.GroupLayout(
				jPanel67);
		jPanel67.setLayout(jPanel67Layout);
		jPanel67Layout.setHorizontalGroup(jPanel67Layout.createParallelGroup(
				javax.swing.GroupLayout.Alignment.LEADING).addGap(0, 45,
				Short.MAX_VALUE));
		jPanel67Layout.setVerticalGroup(jPanel67Layout.createParallelGroup(
				javax.swing.GroupLayout.Alignment.LEADING).addGap(0, 45,
				Short.MAX_VALUE));

		jPanel68.setBackground(new java.awt.Color(255, 255, 255));
		jPanel68.setFocusable(false);
		jPanel68.setPreferredSize(new java.awt.Dimension(45, 45));

		javax.swing.GroupLayout jPanel68Layout = new javax.swing.GroupLayout(
				jPanel68);
		jPanel68.setLayout(jPanel68Layout);
		jPanel68Layout.setHorizontalGroup(jPanel68Layout.createParallelGroup(
				javax.swing.GroupLayout.Alignment.LEADING).addGap(0, 45,
				Short.MAX_VALUE));
		jPanel68Layout.setVerticalGroup(jPanel68Layout.createParallelGroup(
				javax.swing.GroupLayout.Alignment.LEADING).addGap(0, 45,
				Short.MAX_VALUE));

		jPanel69.setBackground(new java.awt.Color(255, 255, 255));
		jPanel69.setFocusable(false);
		jPanel69.setPreferredSize(new java.awt.Dimension(45, 45));

		javax.swing.GroupLayout jPanel69Layout = new javax.swing.GroupLayout(
				jPanel69);
		jPanel69.setLayout(jPanel69Layout);
		jPanel69Layout.setHorizontalGroup(jPanel69Layout.createParallelGroup(
				javax.swing.GroupLayout.Alignment.LEADING).addGap(0, 45,
				Short.MAX_VALUE));
		jPanel69Layout.setVerticalGroup(jPanel69Layout.createParallelGroup(
				javax.swing.GroupLayout.Alignment.LEADING).addGap(0, 45,
				Short.MAX_VALUE));

		jPanel70.setBackground(new java.awt.Color(255, 255, 255));
		jPanel70.setFocusable(false);
		jPanel70.setPreferredSize(new java.awt.Dimension(45, 45));

		javax.swing.GroupLayout jPanel70Layout = new javax.swing.GroupLayout(
				jPanel70);
		jPanel70.setLayout(jPanel70Layout);
		jPanel70Layout.setHorizontalGroup(jPanel70Layout.createParallelGroup(
				javax.swing.GroupLayout.Alignment.LEADING).addGap(0, 45,
				Short.MAX_VALUE));
		jPanel70Layout.setVerticalGroup(jPanel70Layout.createParallelGroup(
				javax.swing.GroupLayout.Alignment.LEADING).addGap(0, 45,
				Short.MAX_VALUE));

		jPanel71.setBackground(new java.awt.Color(255, 255, 255));
		jPanel71.setFocusable(false);
		jPanel71.setPreferredSize(new java.awt.Dimension(45, 45));

		javax.swing.GroupLayout jPanel71Layout = new javax.swing.GroupLayout(
				jPanel71);
		jPanel71.setLayout(jPanel71Layout);
		jPanel71Layout.setHorizontalGroup(jPanel71Layout.createParallelGroup(
				javax.swing.GroupLayout.Alignment.LEADING).addGap(0, 45,
				Short.MAX_VALUE));
		jPanel71Layout.setVerticalGroup(jPanel71Layout.createParallelGroup(
				javax.swing.GroupLayout.Alignment.LEADING).addGap(0, 45,
				Short.MAX_VALUE));

		jPanel72.setBackground(new java.awt.Color(255, 255, 255));
		jPanel72.setFocusable(false);
		jPanel72.setPreferredSize(new java.awt.Dimension(45, 45));

		javax.swing.GroupLayout jPanel72Layout = new javax.swing.GroupLayout(
				jPanel72);
		jPanel72.setLayout(jPanel72Layout);
		jPanel72Layout.setHorizontalGroup(jPanel72Layout.createParallelGroup(
				javax.swing.GroupLayout.Alignment.LEADING).addGap(0, 45,
				Short.MAX_VALUE));
		jPanel72Layout.setVerticalGroup(jPanel72Layout.createParallelGroup(
				javax.swing.GroupLayout.Alignment.LEADING).addGap(0, 45,
				Short.MAX_VALUE));

		jPanel73.setBackground(new java.awt.Color(255, 255, 255));
		jPanel73.setFocusable(false);
		jPanel73.setPreferredSize(new java.awt.Dimension(45, 45));

		javax.swing.GroupLayout jPanel73Layout = new javax.swing.GroupLayout(
				jPanel73);
		jPanel73.setLayout(jPanel73Layout);
		jPanel73Layout.setHorizontalGroup(jPanel73Layout.createParallelGroup(
				javax.swing.GroupLayout.Alignment.LEADING).addGap(0, 45,
				Short.MAX_VALUE));
		jPanel73Layout.setVerticalGroup(jPanel73Layout.createParallelGroup(
				javax.swing.GroupLayout.Alignment.LEADING).addGap(0, 45,
				Short.MAX_VALUE));

		jPanel74.setBackground(new java.awt.Color(255, 255, 255));
		jPanel74.setFocusable(false);
		jPanel74.setPreferredSize(new java.awt.Dimension(45, 45));

		javax.swing.GroupLayout jPanel74Layout = new javax.swing.GroupLayout(
				jPanel74);
		jPanel74.setLayout(jPanel74Layout);
		jPanel74Layout.setHorizontalGroup(jPanel74Layout.createParallelGroup(
				javax.swing.GroupLayout.Alignment.LEADING).addGap(0, 45,
				Short.MAX_VALUE));
		jPanel74Layout.setVerticalGroup(jPanel74Layout.createParallelGroup(
				javax.swing.GroupLayout.Alignment.LEADING).addGap(0, 45,
				Short.MAX_VALUE));

		jPanel75.setBackground(new java.awt.Color(255, 255, 255));
		jPanel75.setFocusable(false);
		jPanel75.setPreferredSize(new java.awt.Dimension(45, 45));

		javax.swing.GroupLayout jPanel75Layout = new javax.swing.GroupLayout(
				jPanel75);
		jPanel75.setLayout(jPanel75Layout);
		jPanel75Layout.setHorizontalGroup(jPanel75Layout.createParallelGroup(
				javax.swing.GroupLayout.Alignment.LEADING).addGap(0, 45,
				Short.MAX_VALUE));
		jPanel75Layout.setVerticalGroup(jPanel75Layout.createParallelGroup(
				javax.swing.GroupLayout.Alignment.LEADING).addGap(0, 45,
				Short.MAX_VALUE));

		newGameButton.setText(&quot;New Game&quot;);
		newGameButton.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				newGameButtonActionPerformed(evt);
			}
		});

		jLabelDebug1.setText(&quot;Read tool tip&quot;);

		jPanel76.setBorder(javax.swing.BorderFactory
				.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

		javax.swing.GroupLayout jPanel76Layout = new javax.swing.GroupLayout(
				jPanel76);
		jPanel76.setLayout(jPanel76Layout);
		jPanel76Layout.setHorizontalGroup(jPanel76Layout.createParallelGroup(
				javax.swing.GroupLayout.Alignment.LEADING).addGap(0, 171,
				Short.MAX_VALUE));
		jPanel76Layout.setVerticalGroup(jPanel76Layout.createParallelGroup(
				javax.swing.GroupLayout.Alignment.LEADING).addGap(0, 172,
				Short.MAX_VALUE));

		jLabel1.setText(&quot;Next Pentomino&quot;);

		javax.swing.GroupLayout layout = new javax.swing.GroupLayout(
				getContentPane());
		getContentPane().setLayout(layout);
		layout.setHorizontalGroup(layout
				.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(
						layout.createSequentialGroup()
								.addGroup(
										layout.createParallelGroup(
												javax.swing.GroupLayout.Alignment.LEADING)
												.addGroup(
														layout.createSequentialGroup()
																.addGap(57, 57,
																		57)
																.addComponent(
																		muteButton)
																.addGap(49, 49,
																		49)
																.addComponent(
																		logoLabel))
												.addGroup(
														layout.createSequentialGroup()
																.addGap(149,
																		149,
																		149)
																.addGroup(
																		layout.createParallelGroup(
																				javax.swing.GroupLayout.Alignment.LEADING)
																				.addGroup(
																						layout.createParallelGroup(
																								javax.swing.GroupLayout.Alignment.TRAILING)
																								.addGroup(
																										layout.createSequentialGroup()
																												.addComponent(
																														jPanel62,
																														javax.swing.GroupLayout.PREFERRED_SIZE,
																														javax.swing.GroupLayout.DEFAULT_SIZE,
																														javax.swing.GroupLayout.PREFERRED_SIZE)
																												.addPreferredGap(
																														javax.swing.LayoutStyle.ComponentPlacement.RELATED)
																												.addComponent(
																														jPanel63,
																														javax.swing.GroupLayout.PREFERRED_SIZE,
																														javax.swing.GroupLayout.DEFAULT_SIZE,
																														javax.swing.GroupLayout.PREFERRED_SIZE)
																												.addPreferredGap(
																														javax.swing.LayoutStyle.ComponentPlacement.RELATED)
																												.addComponent(
																														jPanel59,
																														javax.swing.GroupLayout.PREFERRED_SIZE,
																														javax.swing.GroupLayout.DEFAULT_SIZE,
																														javax.swing.GroupLayout.PREFERRED_SIZE)
																												.addPreferredGap(
																														javax.swing.LayoutStyle.ComponentPlacement.RELATED)
																												.addComponent(
																														jPanel60,
																														javax.swing.GroupLayout.PREFERRED_SIZE,
																														javax.swing.GroupLayout.DEFAULT_SIZE,
																														javax.swing.GroupLayout.PREFERRED_SIZE)
																												.addPreferredGap(
																														javax.swing.LayoutStyle.ComponentPlacement.RELATED)
																												.addComponent(
																														jPanel61,
																														javax.swing.GroupLayout.PREFERRED_SIZE,
																														javax.swing.GroupLayout.DEFAULT_SIZE,
																														javax.swing.GroupLayout.PREFERRED_SIZE))
																								.addGroup(
																										layout.createParallelGroup(
																												javax.swing.GroupLayout.Alignment.LEADING)
																												.addGroup(
																														layout.createSequentialGroup()
																																.addComponent(
																																		jPanel54,
																																		javax.swing.GroupLayout.PREFERRED_SIZE,
																																		javax.swing.GroupLayout.DEFAULT_SIZE,
																																		javax.swing.GroupLayout.PREFERRED_SIZE)
																																.addPreferredGap(
																																		javax.swing.LayoutStyle.ComponentPlacement.RELATED)
																																.addComponent(
																																		jPanel55,
																																		javax.swing.GroupLayout.PREFERRED_SIZE,
																																		javax.swing.GroupLayout.DEFAULT_SIZE,
																																		javax.swing.GroupLayout.PREFERRED_SIZE)
																																.addPreferredGap(
																																		javax.swing.LayoutStyle.ComponentPlacement.RELATED)
																																.addComponent(
																																		jPanel56,
																																		javax.swing.GroupLayout.PREFERRED_SIZE,
																																		javax.swing.GroupLayout.DEFAULT_SIZE,
																																		javax.swing.GroupLayout.PREFERRED_SIZE)
																																.addPreferredGap(
																																		javax.swing.LayoutStyle.ComponentPlacement.RELATED)
																																.addComponent(
																																		jPanel57,
																																		javax.swing.GroupLayout.PREFERRED_SIZE,
																																		javax.swing.GroupLayout.DEFAULT_SIZE,
																																		javax.swing.GroupLayout.PREFERRED_SIZE)
																																.addPreferredGap(
																																		javax.swing.LayoutStyle.ComponentPlacement.RELATED)
																																.addComponent(
																																		jPanel58,
																																		javax.swing.GroupLayout.PREFERRED_SIZE,
																																		javax.swing.GroupLayout.DEFAULT_SIZE,
																																		javax.swing.GroupLayout.PREFERRED_SIZE))
																												.addGroup(
																														layout.createParallelGroup(
																																javax.swing.GroupLayout.Alignment.TRAILING)
																																.addGroup(
																																		layout.createSequentialGroup()
																																				.addComponent(
																																						jPanel74,
																																						javax.swing.GroupLayout.PREFERRED_SIZE,
																																						javax.swing.GroupLayout.DEFAULT_SIZE,
																																						javax.swing.GroupLayout.PREFERRED_SIZE)
																																				.addPreferredGap(
																																						javax.swing.LayoutStyle.ComponentPlacement.RELATED)
																																				.addComponent(
																																						jPanel75,
																																						javax.swing.GroupLayout.PREFERRED_SIZE,
																																						javax.swing.GroupLayout.DEFAULT_SIZE,
																																						javax.swing.GroupLayout.PREFERRED_SIZE)
																																				.addPreferredGap(
																																						javax.swing.LayoutStyle.ComponentPlacement.RELATED)
																																				.addComponent(
																																						jPanel51,
																																						javax.swing.GroupLayout.PREFERRED_SIZE,
																																						javax.swing.GroupLayout.DEFAULT_SIZE,
																																						javax.swing.GroupLayout.PREFERRED_SIZE)
																																				.addPreferredGap(
																																						javax.swing.LayoutStyle.ComponentPlacement.RELATED)
																																				.addComponent(
																																						jPanel52,
																																						javax.swing.GroupLayout.PREFERRED_SIZE,
																																						javax.swing.GroupLayout.DEFAULT_SIZE,
																																						javax.swing.GroupLayout.PREFERRED_SIZE)
																																				.addPreferredGap(
																																						javax.swing.LayoutStyle.ComponentPlacement.RELATED)
																																				.addComponent(
																																						jPanel53,
																																						javax.swing.GroupLayout.PREFERRED_SIZE,
																																						javax.swing.GroupLayout.DEFAULT_SIZE,
																																						javax.swing.GroupLayout.PREFERRED_SIZE))
																																.addGroup(
																																		layout.createSequentialGroup()
																																				.addComponent(
																																						jPanel66,
																																						javax.swing.GroupLayout.PREFERRED_SIZE,
																																						javax.swing.GroupLayout.DEFAULT_SIZE,
																																						javax.swing.GroupLayout.PREFERRED_SIZE)
																																				.addPreferredGap(
																																						javax.swing.LayoutStyle.ComponentPlacement.RELATED)
																																				.addComponent(
																																						jPanel67,
																																						javax.swing.GroupLayout.PREFERRED_SIZE,
																																						javax.swing.GroupLayout.DEFAULT_SIZE,
																																						javax.swing.GroupLayout.PREFERRED_SIZE)
																																				.addPreferredGap(
																																						javax.swing.LayoutStyle.ComponentPlacement.RELATED)
																																				.addComponent(
																																						jPanel70,
																																						javax.swing.GroupLayout.PREFERRED_SIZE,
																																						javax.swing.GroupLayout.DEFAULT_SIZE,
																																						javax.swing.GroupLayout.PREFERRED_SIZE)
																																				.addPreferredGap(
																																						javax.swing.LayoutStyle.ComponentPlacement.RELATED)
																																				.addComponent(
																																						jPanel72,
																																						javax.swing.GroupLayout.PREFERRED_SIZE,
																																						javax.swing.GroupLayout.DEFAULT_SIZE,
																																						javax.swing.GroupLayout.PREFERRED_SIZE)
																																				.addPreferredGap(
																																						javax.swing.LayoutStyle.ComponentPlacement.RELATED)
																																				.addComponent(
																																						jPanel73,
																																						javax.swing.GroupLayout.PREFERRED_SIZE,
																																						javax.swing.GroupLayout.DEFAULT_SIZE,
																																						javax.swing.GroupLayout.PREFERRED_SIZE))))
																								.addGroup(
																										layout.createSequentialGroup()
																												.addGroup(
																														layout.createParallelGroup(
																																javax.swing.GroupLayout.Alignment.TRAILING,
																																false)
																																.addGroup(
																																		layout.createSequentialGroup()
																																				.addComponent(
																																						scoreLabel)
																																				.addPreferredGap(
																																						javax.swing.LayoutStyle.ComponentPlacement.RELATED,
																																						javax.swing.GroupLayout.DEFAULT_SIZE,
																																						Short.MAX_VALUE)
																																				.addComponent(
																																						score))
																																.addGroup(
																																		layout.createSequentialGroup()
																																				.addComponent(
																																						jPanel69,
																																						javax.swing.GroupLayout.PREFERRED_SIZE,
																																						javax.swing.GroupLayout.DEFAULT_SIZE,
																																						javax.swing.GroupLayout.PREFERRED_SIZE)
																																				.addPreferredGap(
																																						javax.swing.LayoutStyle.ComponentPlacement.RELATED)
																																				.addComponent(
																																						jPanel71,
																																						javax.swing.GroupLayout.PREFERRED_SIZE,
																																						javax.swing.GroupLayout.DEFAULT_SIZE,
																																						javax.swing.GroupLayout.PREFERRED_SIZE)))
																												.addPreferredGap(
																														javax.swing.LayoutStyle.ComponentPlacement.RELATED)
																												.addComponent(
																														jPanel64,
																														javax.swing.GroupLayout.PREFERRED_SIZE,
																														javax.swing.GroupLayout.DEFAULT_SIZE,
																														javax.swing.GroupLayout.PREFERRED_SIZE)
																												.addPreferredGap(
																														javax.swing.LayoutStyle.ComponentPlacement.RELATED)
																												.addComponent(
																														jPanel65,
																														javax.swing.GroupLayout.PREFERRED_SIZE,
																														javax.swing.GroupLayout.DEFAULT_SIZE,
																														javax.swing.GroupLayout.PREFERRED_SIZE)
																												.addPreferredGap(
																														javax.swing.LayoutStyle.ComponentPlacement.RELATED)
																												.addComponent(
																														jPanel68,
																														javax.swing.GroupLayout.PREFERRED_SIZE,
																														javax.swing.GroupLayout.DEFAULT_SIZE,
																														javax.swing.GroupLayout.PREFERRED_SIZE)))
																				.addGroup(
																						layout.createParallelGroup(
																								javax.swing.GroupLayout.Alignment.TRAILING)
																								.addGroup(
																										layout.createSequentialGroup()
																												.addComponent(
																														jPanel19,
																														javax.swing.GroupLayout.PREFERRED_SIZE,
																														javax.swing.GroupLayout.DEFAULT_SIZE,
																														javax.swing.GroupLayout.PREFERRED_SIZE)
																												.addPreferredGap(
																														javax.swing.LayoutStyle.ComponentPlacement.RELATED)
																												.addComponent(
																														jPanel20,
																														javax.swing.GroupLayout.PREFERRED_SIZE,
																														javax.swing.GroupLayout.DEFAULT_SIZE,
																														javax.swing.GroupLayout.PREFERRED_SIZE)
																												.addPreferredGap(
																														javax.swing.LayoutStyle.ComponentPlacement.RELATED)
																												.addComponent(
																														jPanel16,
																														javax.swing.GroupLayout.PREFERRED_SIZE,
																														javax.swing.GroupLayout.DEFAULT_SIZE,
																														javax.swing.GroupLayout.PREFERRED_SIZE)
																												.addPreferredGap(
																														javax.swing.LayoutStyle.ComponentPlacement.RELATED)
																												.addComponent(
																														jPanel17,
																														javax.swing.GroupLayout.PREFERRED_SIZE,
																														javax.swing.GroupLayout.DEFAULT_SIZE,
																														javax.swing.GroupLayout.PREFERRED_SIZE)
																												.addPreferredGap(
																														javax.swing.LayoutStyle.ComponentPlacement.RELATED)
																												.addComponent(
																														jPanel18,
																														javax.swing.GroupLayout.PREFERRED_SIZE,
																														javax.swing.GroupLayout.DEFAULT_SIZE,
																														javax.swing.GroupLayout.PREFERRED_SIZE))
																								.addGroup(
																										layout.createParallelGroup(
																												javax.swing.GroupLayout.Alignment.LEADING)
																												.addGroup(
																														layout.createSequentialGroup()
																																.addComponent(
																																		jPanel11,
																																		javax.swing.GroupLayout.PREFERRED_SIZE,
																																		javax.swing.GroupLayout.DEFAULT_SIZE,
																																		javax.swing.GroupLayout.PREFERRED_SIZE)
																																.addPreferredGap(
																																		javax.swing.LayoutStyle.ComponentPlacement.RELATED)
																																.addComponent(
																																		jPanel12,
																																		javax.swing.GroupLayout.PREFERRED_SIZE,
																																		javax.swing.GroupLayout.DEFAULT_SIZE,
																																		javax.swing.GroupLayout.PREFERRED_SIZE)
																																.addPreferredGap(
																																		javax.swing.LayoutStyle.ComponentPlacement.RELATED)
																																.addComponent(
																																		jPanel13,
																																		javax.swing.GroupLayout.PREFERRED_SIZE,
																																		javax.swing.GroupLayout.DEFAULT_SIZE,
																																		javax.swing.GroupLayout.PREFERRED_SIZE)
																																.addPreferredGap(
																																		javax.swing.LayoutStyle.ComponentPlacement.RELATED)
																																.addComponent(
																																		jPanel14,
																																		javax.swing.GroupLayout.PREFERRED_SIZE,
																																		javax.swing.GroupLayout.DEFAULT_SIZE,
																																		javax.swing.GroupLayout.PREFERRED_SIZE)
																																.addPreferredGap(
																																		javax.swing.LayoutStyle.ComponentPlacement.RELATED)
																																.addComponent(
																																		jPanel15,
																																		javax.swing.GroupLayout.PREFERRED_SIZE,
																																		javax.swing.GroupLayout.DEFAULT_SIZE,
																																		javax.swing.GroupLayout.PREFERRED_SIZE))
																												.addGroup(
																														layout.createParallelGroup(
																																javax.swing.GroupLayout.Alignment.TRAILING)
																																.addGroup(
																																		layout.createSequentialGroup()
																																				.addComponent(
																																						jPanel6,
																																						javax.swing.GroupLayout.PREFERRED_SIZE,
																																						javax.swing.GroupLayout.DEFAULT_SIZE,
																																						javax.swing.GroupLayout.PREFERRED_SIZE)
																																				.addPreferredGap(
																																						javax.swing.LayoutStyle.ComponentPlacement.RELATED)
																																				.addComponent(
																																						jPanel7,
																																						javax.swing.GroupLayout.PREFERRED_SIZE,
																																						javax.swing.GroupLayout.DEFAULT_SIZE,
																																						javax.swing.GroupLayout.PREFERRED_SIZE)
																																				.addPreferredGap(
																																						javax.swing.LayoutStyle.ComponentPlacement.RELATED)
																																				.addComponent(
																																						jPanel8,
																																						javax.swing.GroupLayout.PREFERRED_SIZE,
																																						javax.swing.GroupLayout.DEFAULT_SIZE,
																																						javax.swing.GroupLayout.PREFERRED_SIZE)
																																				.addPreferredGap(
																																						javax.swing.LayoutStyle.ComponentPlacement.RELATED)
																																				.addComponent(
																																						jPanel9,
																																						javax.swing.GroupLayout.PREFERRED_SIZE,
																																						javax.swing.GroupLayout.DEFAULT_SIZE,
																																						javax.swing.GroupLayout.PREFERRED_SIZE)
																																				.addPreferredGap(
																																						javax.swing.LayoutStyle.ComponentPlacement.RELATED)
																																				.addComponent(
																																						jPanel10,
																																						javax.swing.GroupLayout.PREFERRED_SIZE,
																																						javax.swing.GroupLayout.DEFAULT_SIZE,
																																						javax.swing.GroupLayout.PREFERRED_SIZE))
																																.addGroup(
																																		layout.createSequentialGroup()
																																				.addComponent(
																																						jPanel1,
																																						javax.swing.GroupLayout.PREFERRED_SIZE,
																																						javax.swing.GroupLayout.DEFAULT_SIZE,
																																						javax.swing.GroupLayout.PREFERRED_SIZE)
																																				.addPreferredGap(
																																						javax.swing.LayoutStyle.ComponentPlacement.RELATED)
																																				.addComponent(
																																						jPanel2,
																																						javax.swing.GroupLayout.PREFERRED_SIZE,
																																						javax.swing.GroupLayout.DEFAULT_SIZE,
																																						javax.swing.GroupLayout.PREFERRED_SIZE)
																																				.addPreferredGap(
																																						javax.swing.LayoutStyle.ComponentPlacement.RELATED)
																																				.addComponent(
																																						jPanel3,
																																						javax.swing.GroupLayout.PREFERRED_SIZE,
																																						javax.swing.GroupLayout.DEFAULT_SIZE,
																																						javax.swing.GroupLayout.PREFERRED_SIZE)
																																				.addPreferredGap(
																																						javax.swing.LayoutStyle.ComponentPlacement.RELATED)
																																				.addComponent(
																																						jPanel4,
																																						javax.swing.GroupLayout.PREFERRED_SIZE,
																																						javax.swing.GroupLayout.DEFAULT_SIZE,
																																						javax.swing.GroupLayout.PREFERRED_SIZE)
																																				.addPreferredGap(
																																						javax.swing.LayoutStyle.ComponentPlacement.RELATED)
																																				.addComponent(
																																						jPanel5,
																																						javax.swing.GroupLayout.PREFERRED_SIZE,
																																						javax.swing.GroupLayout.DEFAULT_SIZE,
																																						javax.swing.GroupLayout.PREFERRED_SIZE))))
																								.addGroup(
																										layout.createSequentialGroup()
																												.addComponent(
																														jPanel24,
																														javax.swing.GroupLayout.PREFERRED_SIZE,
																														javax.swing.GroupLayout.DEFAULT_SIZE,
																														javax.swing.GroupLayout.PREFERRED_SIZE)
																												.addPreferredGap(
																														javax.swing.LayoutStyle.ComponentPlacement.RELATED)
																												.addComponent(
																														jPanel25,
																														javax.swing.GroupLayout.PREFERRED_SIZE,
																														javax.swing.GroupLayout.DEFAULT_SIZE,
																														javax.swing.GroupLayout.PREFERRED_SIZE)
																												.addPreferredGap(
																														javax.swing.LayoutStyle.ComponentPlacement.RELATED)
																												.addComponent(
																														jPanel21,
																														javax.swing.GroupLayout.PREFERRED_SIZE,
																														javax.swing.GroupLayout.DEFAULT_SIZE,
																														javax.swing.GroupLayout.PREFERRED_SIZE)
																												.addPreferredGap(
																														javax.swing.LayoutStyle.ComponentPlacement.RELATED)
																												.addComponent(
																														jPanel22,
																														javax.swing.GroupLayout.PREFERRED_SIZE,
																														javax.swing.GroupLayout.DEFAULT_SIZE,
																														javax.swing.GroupLayout.PREFERRED_SIZE)
																												.addPreferredGap(
																														javax.swing.LayoutStyle.ComponentPlacement.RELATED)
																												.addComponent(
																														jPanel23,
																														javax.swing.GroupLayout.PREFERRED_SIZE,
																														javax.swing.GroupLayout.DEFAULT_SIZE,
																														javax.swing.GroupLayout.PREFERRED_SIZE))
																								.addGroup(
																										layout.createSequentialGroup()
																												.addComponent(
																														jPanel45,
																														javax.swing.GroupLayout.PREFERRED_SIZE,
																														javax.swing.GroupLayout.DEFAULT_SIZE,
																														javax.swing.GroupLayout.PREFERRED_SIZE)
																												.addPreferredGap(
																														javax.swing.LayoutStyle.ComponentPlacement.RELATED)
																												.addComponent(
																														jPanel46,
																														javax.swing.GroupLayout.PREFERRED_SIZE,
																														javax.swing.GroupLayout.DEFAULT_SIZE,
																														javax.swing.GroupLayout.PREFERRED_SIZE)
																												.addPreferredGap(
																														javax.swing.LayoutStyle.ComponentPlacement.RELATED)
																												.addComponent(
																														jPanel42,
																														javax.swing.GroupLayout.PREFERRED_SIZE,
																														javax.swing.GroupLayout.DEFAULT_SIZE,
																														javax.swing.GroupLayout.PREFERRED_SIZE)
																												.addPreferredGap(
																														javax.swing.LayoutStyle.ComponentPlacement.RELATED)
																												.addComponent(
																														jPanel43,
																														javax.swing.GroupLayout.PREFERRED_SIZE,
																														javax.swing.GroupLayout.DEFAULT_SIZE,
																														javax.swing.GroupLayout.PREFERRED_SIZE)
																												.addPreferredGap(
																														javax.swing.LayoutStyle.ComponentPlacement.RELATED)
																												.addComponent(
																														jPanel44,
																														javax.swing.GroupLayout.PREFERRED_SIZE,
																														javax.swing.GroupLayout.DEFAULT_SIZE,
																														javax.swing.GroupLayout.PREFERRED_SIZE))
																								.addGroup(
																										layout.createParallelGroup(
																												javax.swing.GroupLayout.Alignment.LEADING)
																												.addGroup(
																														layout.createSequentialGroup()
																																.addComponent(
																																		jPanel37,
																																		javax.swing.GroupLayout.PREFERRED_SIZE,
																																		javax.swing.GroupLayout.DEFAULT_SIZE,
																																		javax.swing.GroupLayout.PREFERRED_SIZE)
																																.addPreferredGap(
																																		javax.swing.LayoutStyle.ComponentPlacement.RELATED)
																																.addComponent(
																																		jPanel38,
																																		javax.swing.GroupLayout.PREFERRED_SIZE,
																																		javax.swing.GroupLayout.DEFAULT_SIZE,
																																		javax.swing.GroupLayout.PREFERRED_SIZE)
																																.addPreferredGap(
																																		javax.swing.LayoutStyle.ComponentPlacement.RELATED)
																																.addComponent(
																																		jPanel39,
																																		javax.swing.GroupLayout.PREFERRED_SIZE,
																																		javax.swing.GroupLayout.DEFAULT_SIZE,
																																		javax.swing.GroupLayout.PREFERRED_SIZE)
																																.addPreferredGap(
																																		javax.swing.LayoutStyle.ComponentPlacement.RELATED)
																																.addComponent(
																																		jPanel40,
																																		javax.swing.GroupLayout.PREFERRED_SIZE,
																																		javax.swing.GroupLayout.DEFAULT_SIZE,
																																		javax.swing.GroupLayout.PREFERRED_SIZE)
																																.addPreferredGap(
																																		javax.swing.LayoutStyle.ComponentPlacement.RELATED)
																																.addComponent(
																																		jPanel41,
																																		javax.swing.GroupLayout.PREFERRED_SIZE,
																																		javax.swing.GroupLayout.DEFAULT_SIZE,
																																		javax.swing.GroupLayout.PREFERRED_SIZE))
																												.addGroup(
																														layout.createParallelGroup(
																																javax.swing.GroupLayout.Alignment.TRAILING)
																																.addGroup(
																																		layout.createSequentialGroup()
																																				.addComponent(
																																						jPanel32,
																																						javax.swing.GroupLayout.PREFERRED_SIZE,
																																						javax.swing.GroupLayout.DEFAULT_SIZE,
																																						javax.swing.GroupLayout.PREFERRED_SIZE)
																																				.addPreferredGap(
																																						javax.swing.LayoutStyle.ComponentPlacement.RELATED)
																																				.addComponent(
																																						jPanel33,
																																						javax.swing.GroupLayout.PREFERRED_SIZE,
																																						javax.swing.GroupLayout.DEFAULT_SIZE,
																																						javax.swing.GroupLayout.PREFERRED_SIZE)
																																				.addPreferredGap(
																																						javax.swing.LayoutStyle.ComponentPlacement.RELATED)
																																				.addComponent(
																																						jPanel34,
																																						javax.swing.GroupLayout.PREFERRED_SIZE,
																																						javax.swing.GroupLayout.DEFAULT_SIZE,
																																						javax.swing.GroupLayout.PREFERRED_SIZE)
																																				.addPreferredGap(
																																						javax.swing.LayoutStyle.ComponentPlacement.RELATED)
																																				.addComponent(
																																						jPanel35,
																																						javax.swing.GroupLayout.PREFERRED_SIZE,
																																						javax.swing.GroupLayout.DEFAULT_SIZE,
																																						javax.swing.GroupLayout.PREFERRED_SIZE)
																																				.addPreferredGap(
																																						javax.swing.LayoutStyle.ComponentPlacement.RELATED)
																																				.addComponent(
																																						jPanel36,
																																						javax.swing.GroupLayout.PREFERRED_SIZE,
																																						javax.swing.GroupLayout.DEFAULT_SIZE,
																																						javax.swing.GroupLayout.PREFERRED_SIZE))
																																.addGroup(
																																		layout.createSequentialGroup()
																																				.addComponent(
																																						jPanel49,
																																						javax.swing.GroupLayout.PREFERRED_SIZE,
																																						javax.swing.GroupLayout.DEFAULT_SIZE,
																																						javax.swing.GroupLayout.PREFERRED_SIZE)
																																				.addPreferredGap(
																																						javax.swing.LayoutStyle.ComponentPlacement.RELATED)
																																				.addComponent(
																																						jPanel50,
																																						javax.swing.GroupLayout.PREFERRED_SIZE,
																																						javax.swing.GroupLayout.DEFAULT_SIZE,
																																						javax.swing.GroupLayout.PREFERRED_SIZE)
																																				.addPreferredGap(
																																						javax.swing.LayoutStyle.ComponentPlacement.RELATED)
																																				.addComponent(
																																						jPanel28,
																																						javax.swing.GroupLayout.PREFERRED_SIZE,
																																						javax.swing.GroupLayout.DEFAULT_SIZE,
																																						javax.swing.GroupLayout.PREFERRED_SIZE)
																																				.addPreferredGap(
																																						javax.swing.LayoutStyle.ComponentPlacement.RELATED)
																																				.addComponent(
																																						jPanel30,
																																						javax.swing.GroupLayout.PREFERRED_SIZE,
																																						javax.swing.GroupLayout.DEFAULT_SIZE,
																																						javax.swing.GroupLayout.PREFERRED_SIZE)
																																				.addPreferredGap(
																																						javax.swing.LayoutStyle.ComponentPlacement.RELATED)
																																				.addComponent(
																																						jPanel31,
																																						javax.swing.GroupLayout.PREFERRED_SIZE,
																																						javax.swing.GroupLayout.DEFAULT_SIZE,
																																						javax.swing.GroupLayout.PREFERRED_SIZE))))
																								.addGroup(
																										layout.createSequentialGroup()
																												.addComponent(
																														jPanel27,
																														javax.swing.GroupLayout.PREFERRED_SIZE,
																														javax.swing.GroupLayout.DEFAULT_SIZE,
																														javax.swing.GroupLayout.PREFERRED_SIZE)
																												.addPreferredGap(
																														javax.swing.LayoutStyle.ComponentPlacement.RELATED)
																												.addComponent(
																														jPanel29,
																														javax.swing.GroupLayout.PREFERRED_SIZE,
																														javax.swing.GroupLayout.DEFAULT_SIZE,
																														javax.swing.GroupLayout.PREFERRED_SIZE)
																												.addPreferredGap(
																														javax.swing.LayoutStyle.ComponentPlacement.RELATED)
																												.addComponent(
																														jPanel47,
																														javax.swing.GroupLayout.PREFERRED_SIZE,
																														javax.swing.GroupLayout.DEFAULT_SIZE,
																														javax.swing.GroupLayout.PREFERRED_SIZE)
																												.addPreferredGap(
																														javax.swing.LayoutStyle.ComponentPlacement.RELATED)
																												.addComponent(
																														jPanel48,
																														javax.swing.GroupLayout.PREFERRED_SIZE,
																														javax.swing.GroupLayout.DEFAULT_SIZE,
																														javax.swing.GroupLayout.PREFERRED_SIZE)
																												.addPreferredGap(
																														javax.swing.LayoutStyle.ComponentPlacement.RELATED)
																												.addComponent(
																														jPanel26,
																														javax.swing.GroupLayout.PREFERRED_SIZE,
																														javax.swing.GroupLayout.DEFAULT_SIZE,
																														javax.swing.GroupLayout.PREFERRED_SIZE))))))
								.addGroup(
										layout.createParallelGroup(
												javax.swing.GroupLayout.Alignment.LEADING)
												.addGroup(
														layout.createSequentialGroup()
																.addGap(19, 19,
																		19)
																.addGroup(
																		layout.createParallelGroup(
																				javax.swing.GroupLayout.Alignment.LEADING)
																				.addGroup(
																						javax.swing.GroupLayout.Alignment.TRAILING,
																						layout.createSequentialGroup()
																								.addComponent(
																										exitButton,
																										javax.swing.GroupLayout.PREFERRED_SIZE,
																										javax.swing.GroupLayout.DEFAULT_SIZE,
																										javax.swing.GroupLayout.PREFERRED_SIZE)
																								.addContainerGap())
																				.addGroup(
																						javax.swing.GroupLayout.Alignment.TRAILING,
																						layout.createSequentialGroup()
																								.addGroup(
																										layout.createParallelGroup(
																												javax.swing.GroupLayout.Alignment.LEADING)
																												.addComponent(
																														jLabelDebug1)
																												.addGroup(
																														layout.createParallelGroup(
																																javax.swing.GroupLayout.Alignment.TRAILING)
																																.addComponent(
																																		jTextFieldTest,
																																		javax.swing.GroupLayout.PREFERRED_SIZE,
																																		javax.swing.GroupLayout.DEFAULT_SIZE,
																																		javax.swing.GroupLayout.PREFERRED_SIZE)
																																.addComponent(
																																		testButton)
																																.addComponent(
																																		jPanel76,
																																		javax.swing.GroupLayout.Alignment.LEADING,
																																		javax.swing.GroupLayout.DEFAULT_SIZE,
																																		javax.swing.GroupLayout.DEFAULT_SIZE,
																																		Short.MAX_VALUE)))
																								.addGap(27,
																										27,
																										27))
																				.addGroup(
																						javax.swing.GroupLayout.Alignment.TRAILING,
																						layout.createSequentialGroup()
																								.addComponent(
																										newGameButton)
																								.addGap(65,
																										65,
																										65))))
												.addGroup(
														layout.createSequentialGroup()
																.addGap(18, 18,
																		18)
																.addComponent(
																		jLabel1)
																.addGap(0,
																		0,
																		Short.MAX_VALUE)))));
		layout.setVerticalGroup(layout
				.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(
						layout.createSequentialGroup()
								.addGroup(
										layout.createParallelGroup(
												javax.swing.GroupLayout.Alignment.LEADING)
												.addGroup(
														layout.createSequentialGroup()
																.addGap(46, 46,
																		46)
																.addComponent(
																		muteButton))
												.addGroup(
														layout.createSequentialGroup()
																.addContainerGap()
																.addGroup(
																		layout.createParallelGroup(
																				javax.swing.GroupLayout.Alignment.LEADING)
																				.addComponent(
																						logoLabel)
																				.addGroup(
																						layout.createSequentialGroup()
																								.addComponent(
																										exitButton,
																										javax.swing.GroupLayout.PREFERRED_SIZE,
																										javax.swing.GroupLayout.DEFAULT_SIZE,
																										javax.swing.GroupLayout.PREFERRED_SIZE)
																								.addPreferredGap(
																										javax.swing.LayoutStyle.ComponentPlacement.RELATED)
																								.addComponent(
																										jLabel1)
																								.addPreferredGap(
																										javax.swing.LayoutStyle.ComponentPlacement.RELATED)
																								.addComponent(
																										jPanel76,
																										javax.swing.GroupLayout.PREFERRED_SIZE,
																										javax.swing.GroupLayout.DEFAULT_SIZE,
																										javax.swing.GroupLayout.PREFERRED_SIZE)))))
								.addPreferredGap(
										javax.swing.LayoutStyle.ComponentPlacement.UNRELATED,
										javax.swing.GroupLayout.DEFAULT_SIZE,
										Short.MAX_VALUE)
								.addGroup(
										layout.createParallelGroup(
												javax.swing.GroupLayout.Alignment.BASELINE)
												.addComponent(scoreLabel)
												.addComponent(score))
								.addPreferredGap(
										javax.swing.LayoutStyle.ComponentPlacement.RELATED)
								.addGroup(
										layout.createParallelGroup(
												javax.swing.GroupLayout.Alignment.LEADING)
												.addComponent(
														jPanel64,
														javax.swing.GroupLayout.PREFERRED_SIZE,
														javax.swing.GroupLayout.DEFAULT_SIZE,
														javax.swing.GroupLayout.PREFERRED_SIZE)
												.addComponent(
														jPanel71,
														javax.swing.GroupLayout.PREFERRED_SIZE,
														javax.swing.GroupLayout.DEFAULT_SIZE,
														javax.swing.GroupLayout.PREFERRED_SIZE)
												.addComponent(
														jPanel69,
														javax.swing.GroupLayout.PREFERRED_SIZE,
														javax.swing.GroupLayout.DEFAULT_SIZE,
														javax.swing.GroupLayout.PREFERRED_SIZE)
												.addComponent(
														jPanel65,
														javax.swing.GroupLayout.PREFERRED_SIZE,
														javax.swing.GroupLayout.DEFAULT_SIZE,
														javax.swing.GroupLayout.PREFERRED_SIZE)
												.addComponent(
														jPanel68,
														javax.swing.GroupLayout.PREFERRED_SIZE,
														javax.swing.GroupLayout.DEFAULT_SIZE,
														javax.swing.GroupLayout.PREFERRED_SIZE))
								.addPreferredGap(
										javax.swing.LayoutStyle.ComponentPlacement.RELATED)
								.addGroup(
										layout.createParallelGroup(
												javax.swing.GroupLayout.Alignment.LEADING)
												.addComponent(
														jPanel59,
														javax.swing.GroupLayout.PREFERRED_SIZE,
														javax.swing.GroupLayout.DEFAULT_SIZE,
														javax.swing.GroupLayout.PREFERRED_SIZE)
												.addComponent(
														jPanel63,
														javax.swing.GroupLayout.PREFERRED_SIZE,
														javax.swing.GroupLayout.DEFAULT_SIZE,
														javax.swing.GroupLayout.PREFERRED_SIZE)
												.addComponent(
														jPanel62,
														javax.swing.GroupLayout.PREFERRED_SIZE,
														javax.swing.GroupLayout.DEFAULT_SIZE,
														javax.swing.GroupLayout.PREFERRED_SIZE)
												.addComponent(
														jPanel60,
														javax.swing.GroupLayout.PREFERRED_SIZE,
														javax.swing.GroupLayout.DEFAULT_SIZE,
														javax.swing.GroupLayout.PREFERRED_SIZE)
												.addComponent(
														jPanel61,
														javax.swing.GroupLayout.PREFERRED_SIZE,
														javax.swing.GroupLayout.DEFAULT_SIZE,
														javax.swing.GroupLayout.PREFERRED_SIZE))
								.addPreferredGap(
										javax.swing.LayoutStyle.ComponentPlacement.RELATED)
								.addGroup(
										layout.createParallelGroup(
												javax.swing.GroupLayout.Alignment.LEADING)
												.addComponent(
														jPanel56,
														javax.swing.GroupLayout.PREFERRED_SIZE,
														javax.swing.GroupLayout.DEFAULT_SIZE,
														javax.swing.GroupLayout.PREFERRED_SIZE)
												.addComponent(
														jPanel55,
														javax.swing.GroupLayout.PREFERRED_SIZE,
														javax.swing.GroupLayout.DEFAULT_SIZE,
														javax.swing.GroupLayout.PREFERRED_SIZE)
												.addComponent(
														jPanel54,
														javax.swing.GroupLayout.PREFERRED_SIZE,
														javax.swing.GroupLayout.DEFAULT_SIZE,
														javax.swing.GroupLayout.PREFERRED_SIZE)
												.addComponent(
														jPanel57,
														javax.swing.GroupLayout.PREFERRED_SIZE,
														javax.swing.GroupLayout.DEFAULT_SIZE,
														javax.swing.GroupLayout.PREFERRED_SIZE)
												.addComponent(
														jPanel58,
														javax.swing.GroupLayout.PREFERRED_SIZE,
														javax.swing.GroupLayout.DEFAULT_SIZE,
														javax.swing.GroupLayout.PREFERRED_SIZE)
												.addComponent(newGameButton))
								.addPreferredGap(
										javax.swing.LayoutStyle.ComponentPlacement.RELATED)
								.addGroup(
										layout.createParallelGroup(
												javax.swing.GroupLayout.Alignment.LEADING)
												.addComponent(
														jPanel51,
														javax.swing.GroupLayout.PREFERRED_SIZE,
														javax.swing.GroupLayout.DEFAULT_SIZE,
														javax.swing.GroupLayout.PREFERRED_SIZE)
												.addComponent(
														jPanel75,
														javax.swing.GroupLayout.PREFERRED_SIZE,
														javax.swing.GroupLayout.DEFAULT_SIZE,
														javax.swing.GroupLayout.PREFERRED_SIZE)
												.addComponent(
														jPanel74,
														javax.swing.GroupLayout.PREFERRED_SIZE,
														javax.swing.GroupLayout.DEFAULT_SIZE,
														javax.swing.GroupLayout.PREFERRED_SIZE)
												.addComponent(
														jPanel52,
														javax.swing.GroupLayout.PREFERRED_SIZE,
														javax.swing.GroupLayout.DEFAULT_SIZE,
														javax.swing.GroupLayout.PREFERRED_SIZE)
												.addComponent(
														jPanel53,
														javax.swing.GroupLayout.PREFERRED_SIZE,
														javax.swing.GroupLayout.DEFAULT_SIZE,
														javax.swing.GroupLayout.PREFERRED_SIZE))
								.addPreferredGap(
										javax.swing.LayoutStyle.ComponentPlacement.RELATED)
								.addGroup(
										layout.createParallelGroup(
												javax.swing.GroupLayout.Alignment.LEADING)
												.addComponent(
														jPanel70,
														javax.swing.GroupLayout.PREFERRED_SIZE,
														javax.swing.GroupLayout.DEFAULT_SIZE,
														javax.swing.GroupLayout.PREFERRED_SIZE)
												.addComponent(
														jPanel67,
														javax.swing.GroupLayout.PREFERRED_SIZE,
														javax.swing.GroupLayout.DEFAULT_SIZE,
														javax.swing.GroupLayout.PREFERRED_SIZE)
												.addComponent(
														jPanel66,
														javax.swing.GroupLayout.PREFERRED_SIZE,
														javax.swing.GroupLayout.DEFAULT_SIZE,
														javax.swing.GroupLayout.PREFERRED_SIZE)
												.addComponent(
														jPanel72,
														javax.swing.GroupLayout.PREFERRED_SIZE,
														javax.swing.GroupLayout.DEFAULT_SIZE,
														javax.swing.GroupLayout.PREFERRED_SIZE)
												.addComponent(
														jPanel73,
														javax.swing.GroupLayout.PREFERRED_SIZE,
														javax.swing.GroupLayout.DEFAULT_SIZE,
														javax.swing.GroupLayout.PREFERRED_SIZE))
								.addPreferredGap(
										javax.swing.LayoutStyle.ComponentPlacement.RELATED)
								.addGroup(
										layout.createParallelGroup(
												javax.swing.GroupLayout.Alignment.LEADING)
												.addComponent(
														jPanel47,
														javax.swing.GroupLayout.PREFERRED_SIZE,
														javax.swing.GroupLayout.DEFAULT_SIZE,
														javax.swing.GroupLayout.PREFERRED_SIZE)
												.addComponent(
														jPanel29,
														javax.swing.GroupLayout.PREFERRED_SIZE,
														javax.swing.GroupLayout.DEFAULT_SIZE,
														javax.swing.GroupLayout.PREFERRED_SIZE)
												.addComponent(
														jPanel27,
														javax.swing.GroupLayout.PREFERRED_SIZE,
														javax.swing.GroupLayout.DEFAULT_SIZE,
														javax.swing.GroupLayout.PREFERRED_SIZE)
												.addComponent(
														jPanel48,
														javax.swing.GroupLayout.PREFERRED_SIZE,
														javax.swing.GroupLayout.DEFAULT_SIZE,
														javax.swing.GroupLayout.PREFERRED_SIZE)
												.addComponent(
														jPanel26,
														javax.swing.GroupLayout.PREFERRED_SIZE,
														javax.swing.GroupLayout.DEFAULT_SIZE,
														javax.swing.GroupLayout.PREFERRED_SIZE))
								.addPreferredGap(
										javax.swing.LayoutStyle.ComponentPlacement.RELATED)
								.addGroup(
										layout.createParallelGroup(
												javax.swing.GroupLayout.Alignment.LEADING)
												.addComponent(
														jPanel42,
														javax.swing.GroupLayout.PREFERRED_SIZE,
														javax.swing.GroupLayout.DEFAULT_SIZE,
														javax.swing.GroupLayout.PREFERRED_SIZE)
												.addComponent(
														jPanel46,
														javax.swing.GroupLayout.PREFERRED_SIZE,
														javax.swing.GroupLayout.DEFAULT_SIZE,
														javax.swing.GroupLayout.PREFERRED_SIZE)
												.addComponent(
														jPanel45,
														javax.swing.GroupLayout.PREFERRED_SIZE,
														javax.swing.GroupLayout.DEFAULT_SIZE,
														javax.swing.GroupLayout.PREFERRED_SIZE)
												.addComponent(
														jPanel43,
														javax.swing.GroupLayout.PREFERRED_SIZE,
														javax.swing.GroupLayout.DEFAULT_SIZE,
														javax.swing.GroupLayout.PREFERRED_SIZE)
												.addComponent(
														jPanel44,
														javax.swing.GroupLayout.PREFERRED_SIZE,
														javax.swing.GroupLayout.DEFAULT_SIZE,
														javax.swing.GroupLayout.PREFERRED_SIZE))
								.addPreferredGap(
										javax.swing.LayoutStyle.ComponentPlacement.RELATED)
								.addGroup(
										layout.createParallelGroup(
												javax.swing.GroupLayout.Alignment.LEADING)
												.addComponent(
														jPanel39,
														javax.swing.GroupLayout.PREFERRED_SIZE,
														javax.swing.GroupLayout.DEFAULT_SIZE,
														javax.swing.GroupLayout.PREFERRED_SIZE)
												.addComponent(
														jPanel38,
														javax.swing.GroupLayout.PREFERRED_SIZE,
														javax.swing.GroupLayout.DEFAULT_SIZE,
														javax.swing.GroupLayout.PREFERRED_SIZE)
												.addComponent(
														jPanel37,
														javax.swing.GroupLayout.PREFERRED_SIZE,
														javax.swing.GroupLayout.DEFAULT_SIZE,
														javax.swing.GroupLayout.PREFERRED_SIZE)
												.addComponent(
														jPanel40,
														javax.swing.GroupLayout.PREFERRED_SIZE,
														javax.swing.GroupLayout.DEFAULT_SIZE,
														javax.swing.GroupLayout.PREFERRED_SIZE)
												.addComponent(
														jPanel41,
														javax.swing.GroupLayout.PREFERRED_SIZE,
														javax.swing.GroupLayout.DEFAULT_SIZE,
														javax.swing.GroupLayout.PREFERRED_SIZE))
								.addPreferredGap(
										javax.swing.LayoutStyle.ComponentPlacement.RELATED)
								.addGroup(
										layout.createParallelGroup(
												javax.swing.GroupLayout.Alignment.LEADING)
												.addComponent(
														jPanel34,
														javax.swing.GroupLayout.PREFERRED_SIZE,
														javax.swing.GroupLayout.DEFAULT_SIZE,
														javax.swing.GroupLayout.PREFERRED_SIZE)
												.addComponent(
														jPanel33,
														javax.swing.GroupLayout.PREFERRED_SIZE,
														javax.swing.GroupLayout.DEFAULT_SIZE,
														javax.swing.GroupLayout.PREFERRED_SIZE)
												.addComponent(
														jPanel32,
														javax.swing.GroupLayout.PREFERRED_SIZE,
														javax.swing.GroupLayout.DEFAULT_SIZE,
														javax.swing.GroupLayout.PREFERRED_SIZE)
												.addComponent(
														jPanel35,
														javax.swing.GroupLayout.PREFERRED_SIZE,
														javax.swing.GroupLayout.DEFAULT_SIZE,
														javax.swing.GroupLayout.PREFERRED_SIZE)
												.addComponent(
														jPanel36,
														javax.swing.GroupLayout.PREFERRED_SIZE,
														javax.swing.GroupLayout.DEFAULT_SIZE,
														javax.swing.GroupLayout.PREFERRED_SIZE))
								.addPreferredGap(
										javax.swing.LayoutStyle.ComponentPlacement.RELATED)
								.addGroup(
										layout.createParallelGroup(
												javax.swing.GroupLayout.Alignment.LEADING)
												.addComponent(
														jPanel28,
														javax.swing.GroupLayout.PREFERRED_SIZE,
														javax.swing.GroupLayout.DEFAULT_SIZE,
														javax.swing.GroupLayout.PREFERRED_SIZE)
												.addComponent(
														jPanel50,
														javax.swing.GroupLayout.PREFERRED_SIZE,
														javax.swing.GroupLayout.DEFAULT_SIZE,
														javax.swing.GroupLayout.PREFERRED_SIZE)
												.addComponent(
														jPanel49,
														javax.swing.GroupLayout.PREFERRED_SIZE,
														javax.swing.GroupLayout.DEFAULT_SIZE,
														javax.swing.GroupLayout.PREFERRED_SIZE)
												.addComponent(
														jPanel30,
														javax.swing.GroupLayout.PREFERRED_SIZE,
														javax.swing.GroupLayout.DEFAULT_SIZE,
														javax.swing.GroupLayout.PREFERRED_SIZE)
												.addComponent(
														jPanel31,
														javax.swing.GroupLayout.PREFERRED_SIZE,
														javax.swing.GroupLayout.DEFAULT_SIZE,
														javax.swing.GroupLayout.PREFERRED_SIZE))
								.addPreferredGap(
										javax.swing.LayoutStyle.ComponentPlacement.RELATED)
								.addGroup(
										layout.createParallelGroup(
												javax.swing.GroupLayout.Alignment.LEADING)
												.addGroup(
														javax.swing.GroupLayout.Alignment.TRAILING,
														layout.createSequentialGroup()
																.addComponent(
																		jLabelDebug1)
																.addPreferredGap(
																		javax.swing.LayoutStyle.ComponentPlacement.RELATED)
																.addComponent(
																		jTextFieldTest,
																		javax.swing.GroupLayout.PREFERRED_SIZE,
																		javax.swing.GroupLayout.DEFAULT_SIZE,
																		javax.swing.GroupLayout.PREFERRED_SIZE)
																.addGap(34, 34,
																		34)
																.addComponent(
																		testButton)
																.addGap(42, 42,
																		42))
												.addGroup(
														javax.swing.GroupLayout.Alignment.TRAILING,
														layout.createSequentialGroup()
																.addGroup(
																		layout.createParallelGroup(
																				javax.swing.GroupLayout.Alignment.LEADING)
																				.addComponent(
																						jPanel21,
																						javax.swing.GroupLayout.PREFERRED_SIZE,
																						javax.swing.GroupLayout.DEFAULT_SIZE,
																						javax.swing.GroupLayout.PREFERRED_SIZE)
																				.addComponent(
																						jPanel25,
																						javax.swing.GroupLayout.PREFERRED_SIZE,
																						javax.swing.GroupLayout.DEFAULT_SIZE,
																						javax.swing.GroupLayout.PREFERRED_SIZE)
																				.addComponent(
																						jPanel24,
																						javax.swing.GroupLayout.PREFERRED_SIZE,
																						javax.swing.GroupLayout.DEFAULT_SIZE,
																						javax.swing.GroupLayout.PREFERRED_SIZE)
																				.addComponent(
																						jPanel22,
																						javax.swing.GroupLayout.PREFERRED_SIZE,
																						javax.swing.GroupLayout.DEFAULT_SIZE,
																						javax.swing.GroupLayout.PREFERRED_SIZE)
																				.addComponent(
																						jPanel23,
																						javax.swing.GroupLayout.PREFERRED_SIZE,
																						javax.swing.GroupLayout.DEFAULT_SIZE,
																						javax.swing.GroupLayout.PREFERRED_SIZE))
																.addPreferredGap(
																		javax.swing.LayoutStyle.ComponentPlacement.RELATED)
																.addGroup(
																		layout.createParallelGroup(
																				javax.swing.GroupLayout.Alignment.LEADING)
																				.addComponent(
																						jPanel16,
																						javax.swing.GroupLayout.PREFERRED_SIZE,
																						javax.swing.GroupLayout.DEFAULT_SIZE,
																						javax.swing.GroupLayout.PREFERRED_SIZE)
																				.addComponent(
																						jPanel20,
																						javax.swing.GroupLayout.PREFERRED_SIZE,
																						javax.swing.GroupLayout.DEFAULT_SIZE,
																						javax.swing.GroupLayout.PREFERRED_SIZE)
																				.addComponent(
																						jPanel19,
																						javax.swing.GroupLayout.PREFERRED_SIZE,
																						javax.swing.GroupLayout.DEFAULT_SIZE,
																						javax.swing.GroupLayout.PREFERRED_SIZE)
																				.addComponent(
																						jPanel17,
																						javax.swing.GroupLayout.PREFERRED_SIZE,
																						javax.swing.GroupLayout.DEFAULT_SIZE,
																						javax.swing.GroupLayout.PREFERRED_SIZE)
																				.addComponent(
																						jPanel18,
																						javax.swing.GroupLayout.PREFERRED_SIZE,
																						javax.swing.GroupLayout.DEFAULT_SIZE,
																						javax.swing.GroupLayout.PREFERRED_SIZE))
																.addPreferredGap(
																		javax.swing.LayoutStyle.ComponentPlacement.RELATED)
																.addGroup(
																		layout.createParallelGroup(
																				javax.swing.GroupLayout.Alignment.LEADING)
																				.addComponent(
																						jPanel13,
																						javax.swing.GroupLayout.PREFERRED_SIZE,
																						javax.swing.GroupLayout.DEFAULT_SIZE,
																						javax.swing.GroupLayout.PREFERRED_SIZE)
																				.addComponent(
																						jPanel12,
																						javax.swing.GroupLayout.PREFERRED_SIZE,
																						javax.swing.GroupLayout.DEFAULT_SIZE,
																						javax.swing.GroupLayout.PREFERRED_SIZE)
																				.addComponent(
																						jPanel11,
																						javax.swing.GroupLayout.PREFERRED_SIZE,
																						javax.swing.GroupLayout.DEFAULT_SIZE,
																						javax.swing.GroupLayout.PREFERRED_SIZE)
																				.addComponent(
																						jPanel14,
																						javax.swing.GroupLayout.PREFERRED_SIZE,
																						javax.swing.GroupLayout.DEFAULT_SIZE,
																						javax.swing.GroupLayout.PREFERRED_SIZE)
																				.addComponent(
																						jPanel15,
																						javax.swing.GroupLayout.PREFERRED_SIZE,
																						javax.swing.GroupLayout.DEFAULT_SIZE,
																						javax.swing.GroupLayout.PREFERRED_SIZE))
																.addPreferredGap(
																		javax.swing.LayoutStyle.ComponentPlacement.RELATED)
																.addGroup(
																		layout.createParallelGroup(
																				javax.swing.GroupLayout.Alignment.LEADING)
																				.addComponent(
																						jPanel8,
																						javax.swing.GroupLayout.PREFERRED_SIZE,
																						javax.swing.GroupLayout.DEFAULT_SIZE,
																						javax.swing.GroupLayout.PREFERRED_SIZE)
																				.addComponent(
																						jPanel7,
																						javax.swing.GroupLayout.PREFERRED_SIZE,
																						javax.swing.GroupLayout.DEFAULT_SIZE,
																						javax.swing.GroupLayout.PREFERRED_SIZE)
																				.addComponent(
																						jPanel6,
																						javax.swing.GroupLayout.PREFERRED_SIZE,
																						javax.swing.GroupLayout.DEFAULT_SIZE,
																						javax.swing.GroupLayout.PREFERRED_SIZE)
																				.addComponent(
																						jPanel9,
																						javax.swing.GroupLayout.PREFERRED_SIZE,
																						javax.swing.GroupLayout.DEFAULT_SIZE,
																						javax.swing.GroupLayout.PREFERRED_SIZE)
																				.addComponent(
																						jPanel10,
																						javax.swing.GroupLayout.PREFERRED_SIZE,
																						javax.swing.GroupLayout.DEFAULT_SIZE,
																						javax.swing.GroupLayout.PREFERRED_SIZE))
																.addPreferredGap(
																		javax.swing.LayoutStyle.ComponentPlacement.RELATED)
																.addGroup(
																		layout.createParallelGroup(
																				javax.swing.GroupLayout.Alignment.LEADING)
																				.addComponent(
																						jPanel3,
																						javax.swing.GroupLayout.PREFERRED_SIZE,
																						javax.swing.GroupLayout.DEFAULT_SIZE,
																						javax.swing.GroupLayout.PREFERRED_SIZE)
																				.addComponent(
																						jPanel2,
																						javax.swing.GroupLayout.PREFERRED_SIZE,
																						javax.swing.GroupLayout.DEFAULT_SIZE,
																						javax.swing.GroupLayout.PREFERRED_SIZE)
																				.addComponent(
																						jPanel1,
																						javax.swing.GroupLayout.PREFERRED_SIZE,
																						javax.swing.GroupLayout.DEFAULT_SIZE,
																						javax.swing.GroupLayout.PREFERRED_SIZE)
																				.addComponent(
																						jPanel4,
																						javax.swing.GroupLayout.PREFERRED_SIZE,
																						javax.swing.GroupLayout.DEFAULT_SIZE,
																						javax.swing.GroupLayout.PREFERRED_SIZE)
																				.addComponent(
																						jPanel5,
																						javax.swing.GroupLayout.PREFERRED_SIZE,
																						javax.swing.GroupLayout.DEFAULT_SIZE,
																						javax.swing.GroupLayout.PREFERRED_SIZE))
																.addGap(8, 8, 8)))));

		pack();
	</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rDmjAHk6EeSVm5Faw75mfQ" name="exitButtonActionPerformed" specification="_q_v9w3k6EeSVm5Faw75mfQ">
        <ownedParameter xmi:id="_rDnKEHk6EeSVm5Faw75mfQ" name="evt" type="_qXH3gHk6EeSVm5Faw75mfQ"/>
        <language>java</language>
        <body>// GEN-FIRST:event_exitButtonActionPerformed
		System.exit(0);
	</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rDnKEXk6EeSVm5Faw75mfQ" name="testButtonActionPerformed" specification="_q_wk0Xk6EeSVm5Faw75mfQ">
        <ownedParameter xmi:id="_rDnKEnk6EeSVm5Faw75mfQ" name="evt" type="_qXH3gHk6EeSVm5Faw75mfQ"/>
        <language>java</language>
        <body>// GEN-FIRST:event_testButtonActionPerformed
		board1[testcounter1][testcounter2] = jTextFieldTest.getText().charAt(0);
		testcounter1++;
		if (testcounter1 == 5) {
			testcounter1 = 0;
			testcounter2++;
		}
		if (testcounter2 == 15) {
			testcounter1 = 0;
			testcounter2 = 0;
		}

		refresh();
	</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rDnKE3k6EeSVm5Faw75mfQ" name="leftPressed" specification="_q_xL4Hk6EeSVm5Faw75mfQ">
        <ownedParameter xmi:id="_rDnKFHk6EeSVm5Faw75mfQ" name="evt" type="_qWXpkXk6EeSVm5Faw75mfQ"/>
        <language>java</language>
        <body>// GEN-FIRST:event_leftPressed
		System.out.println(&quot;help&quot;);
	</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rDnKFXk6EeSVm5Faw75mfQ" name="refresh" specification="_q_yaAHk6EeSVm5Faw75mfQ">
        <language>java</language>
        <body>printboard();
		if (!DEBUG1) {
			StringBuilder builder = new StringBuilder();
			builder.insert(0, game.getScore());
			score.setText(builder.toString());
		}
	</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rDnxIHk6EeSVm5Faw75mfQ" name="newGameButtonActionPerformed" specification="_q_yaAXk6EeSVm5Faw75mfQ">
        <ownedParameter xmi:id="_rDnxIXk6EeSVm5Faw75mfQ" name="evt" type="_qXH3gHk6EeSVm5Faw75mfQ"/>
        <language>java</language>
        <body>// GEN-FIRST:event_newGameButtonActionPerformed
		game.start();
		System.out.println(game.getScore());
		StringBuilder builder = new StringBuilder();
		builder.insert(0, game.getScore());
		score.setText(builder.toString());
	</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rDnxInk6EeSVm5Faw75mfQ" name="muteButtonActionPerformed" specification="_q_zBEHk6EeSVm5Faw75mfQ">
        <ownedParameter xmi:id="_rDnxI3k6EeSVm5Faw75mfQ" name="evt" type="_qXH3gHk6EeSVm5Faw75mfQ"/>
        <language>java</language>
        <body>// GEN-FIRST:event_muteButtonActionPerformed
		mute = !mute;
		System.out.println(mute);
	</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rDnxJHk6EeSVm5Faw75mfQ" name="printboard" specification="_q_zBEnk6EeSVm5Faw75mfQ">
        <language>java</language>
        <body>// Makes it red

		// Makes it red
		if (board1[0][0] == 'f') {
			jPanel1.setBackground(Color.red);
		}
		if (board1[1][0] == 'f') {
			jPanel2.setBackground(Color.red);
		}
		if (board1[2][0] == 'f') {
			jPanel3.setBackground(Color.red);
		}
		if (board1[3][0] == 'f') {
			jPanel4.setBackground(Color.red);
		}
		if (board1[4][0] == 'f') {
			jPanel5.setBackground(Color.red);
		}
		if (board1[0][1] == 'f') {
			jPanel6.setBackground(Color.red);
		}
		if (board1[1][1] == 'f') {
			jPanel7.setBackground(Color.red);
		}
		if (board1[2][1] == 'f') {
			jPanel8.setBackground(Color.red);
		}
		if (board1[3][1] == 'f') {
			jPanel9.setBackground(Color.red);
		}
		if (board1[4][1] == 'f') {
			jPanel10.setBackground(Color.red);
		}
		if (board1[0][2] == 'f') {
			jPanel11.setBackground(Color.red);
		}
		if (board1[1][2] == 'f') {
			jPanel12.setBackground(Color.red);
		}
		if (board1[2][2] == 'f') {
			jPanel13.setBackground(Color.red);
		}
		if (board1[3][2] == 'f') {
			jPanel14.setBackground(Color.red);
		}
		if (board1[4][2] == 'f') {
			jPanel15.setBackground(Color.red);
		}
		if (board1[0][3] == 'f') {
			jPanel16.setBackground(Color.red);
		}
		if (board1[1][3] == 'f') {
			jPanel17.setBackground(Color.red);
		}
		if (board1[2][3] == 'f') {
			jPanel18.setBackground(Color.red);
		}
		if (board1[3][3] == 'f') {
			jPanel19.setBackground(Color.red);
		}
		if (board1[4][3] == 'f') {
			jPanel20.setBackground(Color.red);
		}
		if (board1[0][4] == 'f') {
			jPanel21.setBackground(Color.red);
		}
		if (board1[1][4] == 'f') {
			jPanel22.setBackground(Color.red);
		}
		if (board1[2][4] == 'f') {
			jPanel23.setBackground(Color.red);
		}
		if (board1[3][4] == 'f') {
			jPanel24.setBackground(Color.red);
		}
		if (board1[4][4] == 'f') {
			jPanel25.setBackground(Color.red);
		}

		if (board1[0][5] == 'f') {
			jPanel26.setBackground(Color.red);
		}
		if (board1[1][5] == 'f') {
			jPanel27.setBackground(Color.red);
		}
		if (board1[2][5] == 'f') {
			jPanel28.setBackground(Color.red);
		}
		if (board1[3][5] == 'f') {
			jPanel29.setBackground(Color.red);
		}
		if (board1[4][5] == 'f') {
			jPanel30.setBackground(Color.red);
		}
		if (board1[0][6] == 'f') {
			jPanel31.setBackground(Color.red);
		}
		if (board1[1][6] == 'f') {
			jPanel32.setBackground(Color.red);
		}
		if (board1[2][6] == 'f') {
			jPanel33.setBackground(Color.red);
		}
		if (board1[3][6] == 'f') {
			jPanel34.setBackground(Color.red);
		}
		if (board1[4][6] == 'f') {
			jPanel35.setBackground(Color.red);
		}
		if (board1[0][7] == 'f') {
			jPanel36.setBackground(Color.red);
		}
		if (board1[1][7] == 'f') {
			jPanel37.setBackground(Color.red);
		}
		if (board1[2][7] == 'f') {
			jPanel38.setBackground(Color.red);
		}
		if (board1[3][7] == 'f') {
			jPanel39.setBackground(Color.red);
		}
		if (board1[4][7] == 'f') {
			jPanel40.setBackground(Color.red);
		}
		if (board1[0][8] == 'f') {
			jPanel41.setBackground(Color.red);
		}
		if (board1[1][8] == 'f') {
			jPanel42.setBackground(Color.red);
		}
		if (board1[2][8] == 'f') {
			jPanel43.setBackground(Color.red);
		}
		if (board1[3][8] == 'f') {
			jPanel44.setBackground(Color.red);
		}
		if (board1[4][8] == 'f') {
			jPanel45.setBackground(Color.red);
		}
		if (board1[0][9] == 'f') {
			jPanel46.setBackground(Color.red);
		}
		if (board1[1][9] == 'f') {
			jPanel47.setBackground(Color.red);
		}
		if (board1[2][9] == 'f') {
			jPanel48.setBackground(Color.red);
		}
		if (board1[3][9] == 'f') {
			jPanel49.setBackground(Color.red);
		}
		if (board1[4][9] == 'f') {
			jPanel50.setBackground(Color.red);
		}

		if (board1[0][10] == 'f') {
			jPanel51.setBackground(Color.red);
		}
		if (board1[1][10] == 'f') {
			jPanel52.setBackground(Color.red);
		}
		if (board1[2][10] == 'f') {
			jPanel53.setBackground(Color.red);
		}
		if (board1[3][10] == 'f') {
			jPanel54.setBackground(Color.red);
		}
		if (board1[4][10] == 'f') {
			jPanel55.setBackground(Color.red);
		}
		if (board1[0][11] == 'f') {
			jPanel56.setBackground(Color.red);
		}
		if (board1[1][11] == 'f') {
			jPanel57.setBackground(Color.red);
		}
		if (board1[2][11] == 'f') {
			jPanel58.setBackground(Color.red);
		}
		if (board1[3][11] == 'f') {
			jPanel59.setBackground(Color.red);
		}
		if (board1[4][11] == 'f') {
			jPanel60.setBackground(Color.red);
		}
		if (board1[0][12] == 'f') {
			jPanel61.setBackground(Color.red);
		}
		if (board1[1][12] == 'f') {
			jPanel62.setBackground(Color.red);
		}
		if (board1[2][12] == 'f') {
			jPanel63.setBackground(Color.red);
		}
		if (board1[3][12] == 'f') {
			jPanel64.setBackground(Color.red);
		}
		if (board1[4][12] == 'f') {
			jPanel65.setBackground(Color.red);
		}
		if (board1[0][13] == 'f') {
			jPanel66.setBackground(Color.red);
		}
		if (board1[1][13] == 'f') {
			jPanel67.setBackground(Color.red);
		}
		if (board1[2][13] == 'f') {
			jPanel68.setBackground(Color.red);
		}
		if (board1[3][13] == 'f') {
			jPanel69.setBackground(Color.red);
		}
		if (board1[4][13] == 'f') {
			jPanel70.setBackground(Color.red);
		}
		if (board1[0][14] == 'f') {
			jPanel71.setBackground(Color.red);
		}
		if (board1[1][14] == 'f') {
			jPanel72.setBackground(Color.red);
		}
		if (board1[2][14] == 'f') {
			jPanel73.setBackground(Color.red);
		}
		if (board1[3][14] == 'f') {
			jPanel74.setBackground(Color.red);
		}
		if (board1[4][14] == 'f') {
			jPanel75.setBackground(Color.red);
		}

		// --------------------------------------------------------
		// Makes it white
		if (board1[0][0] == 0) {
			jPanel1.setBackground(Color.white);
		}
		if (board1[1][0] == 0) {
			jPanel2.setBackground(Color.white);
		}
		if (board1[2][0] == 0) {
			jPanel3.setBackground(Color.white);
		}
		if (board1[3][0] == 0) {
			jPanel4.setBackground(Color.white);
		}
		if (board1[4][0] == 0) {
			jPanel5.setBackground(Color.white);
		}
		if (board1[0][1] == 0) {
			jPanel6.setBackground(Color.white);
		}
		if (board1[1][1] == 0) {
			jPanel7.setBackground(Color.white);
		}
		if (board1[2][1] == 0) {
			jPanel8.setBackground(Color.white);
		}
		if (board1[3][1] == 0) {
			jPanel9.setBackground(Color.white);
		}
		if (board1[4][1] == 0) {
			jPanel10.setBackground(Color.white);
		}
		if (board1[0][2] == 0) {
			jPanel11.setBackground(Color.white);
		}
		if (board1[1][2] == 0) {
			jPanel12.setBackground(Color.white);
		}
		if (board1[2][2] == 0) {
			jPanel13.setBackground(Color.white);
		}
		if (board1[3][2] == 0) {
			jPanel14.setBackground(Color.white);
		}
		if (board1[4][2] == 0) {
			jPanel15.setBackground(Color.white);
		}
		if (board1[0][3] == 0) {
			jPanel16.setBackground(Color.white);
		}
		if (board1[1][3] == 0) {
			jPanel17.setBackground(Color.white);
		}
		if (board1[2][3] == 0) {
			jPanel18.setBackground(Color.white);
		}
		if (board1[3][3] == 0) {
			jPanel19.setBackground(Color.white);
		}
		if (board1[4][3] == 0) {
			jPanel20.setBackground(Color.white);
		}
		if (board1[0][4] == 0) {
			jPanel21.setBackground(Color.white);
		}
		if (board1[1][4] == 0) {
			jPanel22.setBackground(Color.white);
		}
		if (board1[2][4] == 0) {
			jPanel23.setBackground(Color.white);
		}
		if (board1[3][4] == 0) {
			jPanel24.setBackground(Color.white);
		}
		if (board1[4][4] == 0) {
			jPanel25.setBackground(Color.white);
		}

		if (board1[0][5] == 0) {
			jPanel26.setBackground(Color.white);
		}
		if (board1[1][5] == 0) {
			jPanel27.setBackground(Color.white);
		}
		if (board1[2][5] == 0) {
			jPanel28.setBackground(Color.white);
		}
		if (board1[3][5] == 0) {
			jPanel29.setBackground(Color.white);
		}
		if (board1[4][5] == 0) {
			jPanel30.setBackground(Color.white);
		}
		if (board1[0][6] == 0) {
			jPanel31.setBackground(Color.white);
		}
		if (board1[1][6] == 0) {
			jPanel32.setBackground(Color.white);
		}
		if (board1[2][6] == 0) {
			jPanel33.setBackground(Color.white);
		}
		if (board1[3][6] == 0) {
			jPanel34.setBackground(Color.white);
		}
		if (board1[4][6] == 0) {
			jPanel35.setBackground(Color.white);
		}
		if (board1[0][7] == 0) {
			jPanel36.setBackground(Color.white);
		}
		if (board1[1][7] == 0) {
			jPanel37.setBackground(Color.white);
		}
		if (board1[2][7] == 0) {
			jPanel38.setBackground(Color.white);
		}
		if (board1[3][7] == 0) {
			jPanel39.setBackground(Color.white);
		}
		if (board1[4][7] == 0) {
			jPanel40.setBackground(Color.white);
		}
		if (board1[0][8] == 0) {
			jPanel41.setBackground(Color.white);
		}
		if (board1[1][8] == 0) {
			jPanel42.setBackground(Color.white);
		}
		if (board1[2][8] == 0) {
			jPanel43.setBackground(Color.white);
		}
		if (board1[3][8] == 0) {
			jPanel44.setBackground(Color.white);
		}
		if (board1[4][8] == 0) {
			jPanel45.setBackground(Color.white);
		}
		if (board1[0][9] == 0) {
			jPanel46.setBackground(Color.white);
		}
		if (board1[1][9] == 0) {
			jPanel47.setBackground(Color.white);
		}
		if (board1[2][9] == 0) {
			jPanel48.setBackground(Color.white);
		}
		if (board1[3][9] == 0) {
			jPanel49.setBackground(Color.white);
		}
		if (board1[4][9] == 0) {
			jPanel50.setBackground(Color.white);
		}

		if (board1[0][10] == 0) {
			jPanel51.setBackground(Color.white);
		}
		if (board1[1][10] == 0) {
			jPanel52.setBackground(Color.white);
		}
		if (board1[2][10] == 0) {
			jPanel53.setBackground(Color.white);
		}
		if (board1[3][10] == 0) {
			jPanel54.setBackground(Color.white);
		}
		if (board1[4][10] == 0) {
			jPanel55.setBackground(Color.white);
		}
		if (board1[0][11] == 0) {
			jPanel56.setBackground(Color.white);
		}
		if (board1[1][11] == 0) {
			jPanel57.setBackground(Color.white);
		}
		if (board1[2][11] == 0) {
			jPanel58.setBackground(Color.white);
		}
		if (board1[3][11] == 0) {
			jPanel59.setBackground(Color.white);
		}
		if (board1[4][11] == 0) {
			jPanel60.setBackground(Color.white);
		}
		if (board1[0][12] == 0) {
			jPanel61.setBackground(Color.white);
		}
		if (board1[1][12] == 0) {
			jPanel62.setBackground(Color.white);
		}
		if (board1[2][12] == 0) {
			jPanel63.setBackground(Color.white);
		}
		if (board1[3][12] == 0) {
			jPanel64.setBackground(Color.white);
		}
		if (board1[4][12] == 0) {
			jPanel65.setBackground(Color.white);
		}
		if (board1[0][13] == 0) {
			jPanel66.setBackground(Color.white);
		}
		if (board1[1][13] == 0) {
			jPanel67.setBackground(Color.white);
		}
		if (board1[2][13] == 0) {
			jPanel68.setBackground(Color.white);
		}
		if (board1[3][13] == 0) {
			jPanel69.setBackground(Color.white);
		}
		if (board1[4][13] == 0) {
			jPanel70.setBackground(Color.white);
		}
		if (board1[0][14] == 0) {
			jPanel71.setBackground(Color.white);
		}
		if (board1[1][14] == 0) {
			jPanel72.setBackground(Color.white);
		}
		if (board1[2][14] == 0) {
			jPanel73.setBackground(Color.white);
		}
		if (board1[3][14] == 0) {
			jPanel74.setBackground(Color.white);
		}
		if (board1[4][14] == 0) {
			jPanel75.setBackground(Color.white);
		}
		// -----------------------------------------------------
		// makes it blue
		if (board1[0][0] == 'p') {
			jPanel1.setBackground(Color.blue);
		}
		if (board1[1][0] == 'p') {
			jPanel2.setBackground(Color.blue);
		}
		if (board1[2][0] == 'p') {
			jPanel3.setBackground(Color.blue);
		}
		if (board1[3][0] == 'p') {
			jPanel4.setBackground(Color.blue);
		}
		if (board1[4][0] == 'p') {
			jPanel5.setBackground(Color.blue);
		}
		if (board1[0][1] == 'p') {
			jPanel6.setBackground(Color.blue);
		}
		if (board1[1][1] == 'p') {
			jPanel7.setBackground(Color.blue);
		}
		if (board1[2][1] == 'p') {
			jPanel8.setBackground(Color.blue);
		}
		if (board1[3][1] == 'p') {
			jPanel9.setBackground(Color.blue);
		}
		if (board1[4][1] == 'p') {
			jPanel10.setBackground(Color.blue);
		}
		if (board1[0][2] == 'p') {
			jPanel11.setBackground(Color.blue);
		}
		if (board1[1][2] == 'p') {
			jPanel12.setBackground(Color.blue);
		}
		if (board1[2][2] == 'p') {
			jPanel13.setBackground(Color.blue);
		}
		if (board1[3][2] == 'p') {
			jPanel14.setBackground(Color.blue);
		}
		if (board1[4][2] == 'p') {
			jPanel15.setBackground(Color.blue);
		}
		if (board1[0][3] == 'p') {
			jPanel16.setBackground(Color.blue);
		}
		if (board1[1][3] == 'p') {
			jPanel17.setBackground(Color.blue);
		}
		if (board1[2][3] == 'p') {
			jPanel18.setBackground(Color.blue);
		}
		if (board1[3][3] == 'p') {
			jPanel19.setBackground(Color.blue);
		}
		if (board1[4][3] == 'p') {
			jPanel20.setBackground(Color.blue);
		}
		if (board1[0][4] == 'p') {
			jPanel21.setBackground(Color.blue);
		}
		if (board1[1][4] == 'p') {
			jPanel22.setBackground(Color.blue);
		}
		if (board1[2][4] == 'p') {
			jPanel23.setBackground(Color.blue);
		}
		if (board1[3][4] == 'p') {
			jPanel24.setBackground(Color.blue);
		}
		if (board1[4][4] == 'p') {
			jPanel25.setBackground(Color.blue);
		}

		if (board1[0][5] == 'p') {
			jPanel26.setBackground(Color.blue);
		}
		if (board1[1][5] == 'p') {
			jPanel27.setBackground(Color.blue);
		}
		if (board1[2][5] == 'p') {
			jPanel28.setBackground(Color.blue);
		}
		if (board1[3][5] == 'p') {
			jPanel29.setBackground(Color.blue);
		}
		if (board1[4][5] == 'p') {
			jPanel30.setBackground(Color.blue);
		}
		if (board1[0][6] == 'p') {
			jPanel31.setBackground(Color.blue);
		}
		if (board1[1][6] == 'p') {
			jPanel32.setBackground(Color.blue);
		}
		if (board1[2][6] == 'p') {
			jPanel33.setBackground(Color.blue);
		}
		if (board1[3][6] == 'p') {
			jPanel34.setBackground(Color.blue);
		}
		if (board1[4][6] == 'p') {
			jPanel35.setBackground(Color.blue);
		}
		if (board1[0][7] == 'p') {
			jPanel36.setBackground(Color.blue);
		}
		if (board1[1][7] == 'p') {
			jPanel37.setBackground(Color.blue);
		}
		if (board1[2][7] == 'p') {
			jPanel38.setBackground(Color.blue);
		}
		if (board1[3][7] == 'p') {
			jPanel39.setBackground(Color.blue);
		}
		if (board1[4][7] == 'p') {
			jPanel40.setBackground(Color.blue);
		}
		if (board1[0][8] == 'p') {
			jPanel41.setBackground(Color.blue);
		}
		if (board1[1][8] == 'p') {
			jPanel42.setBackground(Color.blue);
		}
		if (board1[2][8] == 'p') {
			jPanel43.setBackground(Color.blue);
		}
		if (board1[3][8] == 'p') {
			jPanel44.setBackground(Color.blue);
		}
		if (board1[4][8] == 'p') {
			jPanel45.setBackground(Color.blue);
		}
		if (board1[0][9] == 'p') {
			jPanel46.setBackground(Color.blue);
		}
		if (board1[1][9] == 'p') {
			jPanel47.setBackground(Color.blue);
		}
		if (board1[2][9] == 'p') {
			jPanel48.setBackground(Color.blue);
		}
		if (board1[3][9] == 'p') {
			jPanel49.setBackground(Color.blue);
		}
		if (board1[4][9] == 'p') {
			jPanel50.setBackground(Color.blue);
		}

		if (board1[0][10] == 'p') {
			jPanel51.setBackground(Color.blue);
		}
		if (board1[1][10] == 'p') {
			jPanel52.setBackground(Color.blue);
		}
		if (board1[2][10] == 'p') {
			jPanel53.setBackground(Color.blue);
		}
		if (board1[3][10] == 'p') {
			jPanel54.setBackground(Color.blue);
		}
		if (board1[4][10] == 'p') {
			jPanel55.setBackground(Color.blue);
		}
		if (board1[0][11] == 'p') {
			jPanel56.setBackground(Color.blue);
		}
		if (board1[1][11] == 'p') {
			jPanel57.setBackground(Color.blue);
		}
		if (board1[2][11] == 'p') {
			jPanel58.setBackground(Color.blue);
		}
		if (board1[3][11] == 'p') {
			jPanel59.setBackground(Color.blue);
		}
		if (board1[4][11] == 'p') {
			jPanel60.setBackground(Color.blue);
		}
		if (board1[0][12] == 'p') {
			jPanel61.setBackground(Color.blue);
		}
		if (board1[1][12] == 'p') {
			jPanel62.setBackground(Color.blue);
		}
		if (board1[2][12] == 'p') {
			jPanel63.setBackground(Color.blue);
		}
		if (board1[3][12] == 'p') {
			jPanel64.setBackground(Color.blue);
		}
		if (board1[4][12] == 'p') {
			jPanel65.setBackground(Color.blue);
		}
		if (board1[0][13] == 'p') {
			jPanel66.setBackground(Color.blue);
		}
		if (board1[1][13] == 'p') {
			jPanel67.setBackground(Color.blue);
		}
		if (board1[2][13] == 'p') {
			jPanel68.setBackground(Color.blue);
		}
		if (board1[3][13] == 'p') {
			jPanel69.setBackground(Color.blue);
		}
		if (board1[4][13] == 'p') {
			jPanel70.setBackground(Color.blue);
		}
		if (board1[0][14] == 'p') {
			jPanel71.setBackground(Color.blue);
		}
		if (board1[1][14] == 'p') {
			jPanel72.setBackground(Color.blue);
		}
		if (board1[2][14] == 'p') {
			jPanel73.setBackground(Color.blue);
		}
		if (board1[3][14] == 'p') {
			jPanel74.setBackground(Color.blue);
		}
		if (board1[4][14] == 'p') {
			jPanel75.setBackground(Color.blue);
		}

		// -------------------------------------------------
		// make it green
		if (board1[0][0] == 'x') {
			jPanel1.setBackground(Color.green);
		}
		if (board1[1][0] == 'x') {
			jPanel2.setBackground(Color.green);
		}
		if (board1[2][0] == 'x') {
			jPanel3.setBackground(Color.green);
		}
		if (board1[3][0] == 'x') {
			jPanel4.setBackground(Color.green);
		}
		if (board1[4][0] == 'x') {
			jPanel5.setBackground(Color.green);
		}
		if (board1[0][1] == 'x') {
			jPanel6.setBackground(Color.green);
		}
		if (board1[1][1] == 'x') {
			jPanel7.setBackground(Color.green);
		}
		if (board1[2][1] == 'x') {
			jPanel8.setBackground(Color.green);
		}
		if (board1[3][1] == 'x') {
			jPanel9.setBackground(Color.green);
		}
		if (board1[4][1] == 'x') {
			jPanel10.setBackground(Color.green);
		}
		if (board1[0][2] == 'x') {
			jPanel11.setBackground(Color.green);
		}
		if (board1[1][2] == 'x') {
			jPanel12.setBackground(Color.green);
		}
		if (board1[2][2] == 'x') {
			jPanel13.setBackground(Color.green);
		}
		if (board1[3][2] == 'x') {
			jPanel14.setBackground(Color.green);
		}
		if (board1[4][2] == 'x') {
			jPanel15.setBackground(Color.green);
		}
		if (board1[0][3] == 'x') {
			jPanel16.setBackground(Color.green);
		}
		if (board1[1][3] == 'x') {
			jPanel17.setBackground(Color.green);
		}
		if (board1[2][3] == 'x') {
			jPanel18.setBackground(Color.green);
		}
		if (board1[3][3] == 'x') {
			jPanel19.setBackground(Color.green);
		}
		if (board1[4][3] == 'x') {
			jPanel20.setBackground(Color.green);
		}
		if (board1[0][4] == 'x') {
			jPanel21.setBackground(Color.green);
		}
		if (board1[1][4] == 'x') {
			jPanel22.setBackground(Color.green);
		}
		if (board1[2][4] == 'x') {
			jPanel23.setBackground(Color.green);
		}
		if (board1[3][4] == 'x') {
			jPanel24.setBackground(Color.green);
		}
		if (board1[4][4] == 'x') {
			jPanel25.setBackground(Color.green);
		}

		if (board1[0][5] == 'x') {
			jPanel26.setBackground(Color.green);
		}
		if (board1[1][5] == 'x') {
			jPanel27.setBackground(Color.green);
		}
		if (board1[2][5] == 'x') {
			jPanel28.setBackground(Color.green);
		}
		if (board1[3][5] == 'x') {
			jPanel29.setBackground(Color.green);
		}
		if (board1[4][5] == 'x') {
			jPanel30.setBackground(Color.green);
		}
		if (board1[0][6] == 'x') {
			jPanel31.setBackground(Color.green);
		}
		if (board1[1][6] == 'x') {
			jPanel32.setBackground(Color.green);
		}
		if (board1[2][6] == 'x') {
			jPanel33.setBackground(Color.green);
		}
		if (board1[3][6] == 'x') {
			jPanel34.setBackground(Color.green);
		}
		if (board1[4][6] == 'x') {
			jPanel35.setBackground(Color.green);
		}
		if (board1[0][7] == 'x') {
			jPanel36.setBackground(Color.green);
		}
		if (board1[1][7] == 'x') {
			jPanel37.setBackground(Color.green);
		}
		if (board1[2][7] == 'x') {
			jPanel38.setBackground(Color.green);
		}
		if (board1[3][7] == 'x') {
			jPanel39.setBackground(Color.green);
		}
		if (board1[4][7] == 'x') {
			jPanel40.setBackground(Color.green);
		}
		if (board1[0][8] == 'x') {
			jPanel41.setBackground(Color.green);
		}
		if (board1[1][8] == 'x') {
			jPanel42.setBackground(Color.green);
		}
		if (board1[2][8] == 'x') {
			jPanel43.setBackground(Color.green);
		}
		if (board1[3][8] == 'x') {
			jPanel44.setBackground(Color.green);
		}
		if (board1[4][8] == 'x') {
			jPanel45.setBackground(Color.green);
		}
		if (board1[0][9] == 'x') {
			jPanel46.setBackground(Color.green);
		}
		if (board1[1][9] == 'x') {
			jPanel47.setBackground(Color.green);
		}
		if (board1[2][9] == 'x') {
			jPanel48.setBackground(Color.green);
		}
		if (board1[3][9] == 'x') {
			jPanel49.setBackground(Color.green);
		}
		if (board1[4][9] == 'x') {
			jPanel50.setBackground(Color.green);
		}

		if (board1[0][10] == 'x') {
			jPanel51.setBackground(Color.green);
		}
		if (board1[1][10] == 'x') {
			jPanel52.setBackground(Color.green);
		}
		if (board1[2][10] == 'x') {
			jPanel53.setBackground(Color.green);
		}
		if (board1[3][10] == 'x') {
			jPanel54.setBackground(Color.green);
		}
		if (board1[4][10] == 'x') {
			jPanel55.setBackground(Color.green);
		}
		if (board1[0][11] == 'x') {
			jPanel56.setBackground(Color.green);
		}
		if (board1[1][11] == 'x') {
			jPanel57.setBackground(Color.green);
		}
		if (board1[2][11] == 'x') {
			jPanel58.setBackground(Color.green);
		}
		if (board1[3][11] == 'x') {
			jPanel59.setBackground(Color.green);
		}
		if (board1[4][11] == 'x') {
			jPanel60.setBackground(Color.green);
		}
		if (board1[0][12] == 'x') {
			jPanel61.setBackground(Color.green);
		}
		if (board1[1][12] == 'x') {
			jPanel62.setBackground(Color.green);
		}
		if (board1[2][12] == 'x') {
			jPanel63.setBackground(Color.green);
		}
		if (board1[3][12] == 'x') {
			jPanel64.setBackground(Color.green);
		}
		if (board1[4][12] == 'x') {
			jPanel65.setBackground(Color.green);
		}
		if (board1[0][13] == 'x') {
			jPanel66.setBackground(Color.green);
		}
		if (board1[1][13] == 'x') {
			jPanel67.setBackground(Color.green);
		}
		if (board1[2][13] == 'x') {
			jPanel68.setBackground(Color.green);
		}
		if (board1[3][13] == 'x') {
			jPanel69.setBackground(Color.green);
		}
		if (board1[4][13] == 'x') {
			jPanel70.setBackground(Color.green);
		}
		if (board1[0][14] == 'x') {
			jPanel71.setBackground(Color.green);
		}
		if (board1[1][14] == 'x') {
			jPanel72.setBackground(Color.green);
		}
		if (board1[2][14] == 'x') {
			jPanel73.setBackground(Color.green);
		}
		if (board1[3][14] == 'x') {
			jPanel74.setBackground(Color.green);
		}
		if (board1[4][14] == 'x') {
			jPanel75.setBackground(Color.green);
		}

		// ---------------------------------------------------
		// makes it cyan
		if (board1[0][0] == 'v') {
			jPanel1.setBackground(Color.cyan);
		}
		if (board1[1][0] == 'v') {
			jPanel2.setBackground(Color.cyan);
		}
		if (board1[2][0] == 'v') {
			jPanel3.setBackground(Color.cyan);
		}
		if (board1[3][0] == 'v') {
			jPanel4.setBackground(Color.cyan);
		}
		if (board1[4][0] == 'v') {
			jPanel5.setBackground(Color.cyan);
		}
		if (board1[0][1] == 'v') {
			jPanel6.setBackground(Color.cyan);
		}
		if (board1[1][1] == 'v') {
			jPanel7.setBackground(Color.cyan);
		}
		if (board1[2][1] == 'v') {
			jPanel8.setBackground(Color.cyan);
		}
		if (board1[3][1] == 'v') {
			jPanel9.setBackground(Color.cyan);
		}
		if (board1[4][1] == 'v') {
			jPanel10.setBackground(Color.cyan);
		}
		if (board1[0][2] == 'v') {
			jPanel11.setBackground(Color.cyan);
		}
		if (board1[1][2] == 'v') {
			jPanel12.setBackground(Color.cyan);
		}
		if (board1[2][2] == 'v') {
			jPanel13.setBackground(Color.cyan);
		}
		if (board1[3][2] == 'v') {
			jPanel14.setBackground(Color.cyan);
		}
		if (board1[4][2] == 'v') {
			jPanel15.setBackground(Color.cyan);
		}
		if (board1[0][3] == 'v') {
			jPanel16.setBackground(Color.cyan);
		}
		if (board1[1][3] == 'v') {
			jPanel17.setBackground(Color.cyan);
		}
		if (board1[2][3] == 'v') {
			jPanel18.setBackground(Color.cyan);
		}
		if (board1[3][3] == 'v') {
			jPanel19.setBackground(Color.cyan);
		}
		if (board1[4][3] == 'v') {
			jPanel20.setBackground(Color.cyan);
		}
		if (board1[0][4] == 'v') {
			jPanel21.setBackground(Color.cyan);
		}
		if (board1[1][4] == 'v') {
			jPanel22.setBackground(Color.cyan);
		}
		if (board1[2][4] == 'v') {
			jPanel23.setBackground(Color.cyan);
		}
		if (board1[3][4] == 'v') {
			jPanel24.setBackground(Color.cyan);
		}
		if (board1[4][4] == 'v') {
			jPanel25.setBackground(Color.cyan);
		}

		if (board1[0][5] == 'v') {
			jPanel26.setBackground(Color.cyan);
		}
		if (board1[1][5] == 'v') {
			jPanel27.setBackground(Color.cyan);
		}
		if (board1[2][5] == 'v') {
			jPanel28.setBackground(Color.cyan);
		}
		if (board1[3][5] == 'v') {
			jPanel29.setBackground(Color.cyan);
		}
		if (board1[4][5] == 'v') {
			jPanel30.setBackground(Color.cyan);
		}
		if (board1[0][6] == 'v') {
			jPanel31.setBackground(Color.cyan);
		}
		if (board1[1][6] == 'v') {
			jPanel32.setBackground(Color.cyan);
		}
		if (board1[2][6] == 'v') {
			jPanel33.setBackground(Color.cyan);
		}
		if (board1[3][6] == 'v') {
			jPanel34.setBackground(Color.cyan);
		}
		if (board1[4][6] == 'v') {
			jPanel35.setBackground(Color.cyan);
		}
		if (board1[0][7] == 'v') {
			jPanel36.setBackground(Color.cyan);
		}
		if (board1[1][7] == 'v') {
			jPanel37.setBackground(Color.cyan);
		}
		if (board1[2][7] == 'v') {
			jPanel38.setBackground(Color.cyan);
		}
		if (board1[3][7] == 'v') {
			jPanel39.setBackground(Color.cyan);
		}
		if (board1[4][7] == 'v') {
			jPanel40.setBackground(Color.cyan);
		}
		if (board1[0][8] == 'v') {
			jPanel41.setBackground(Color.cyan);
		}
		if (board1[1][8] == 'v') {
			jPanel42.setBackground(Color.cyan);
		}
		if (board1[2][8] == 'v') {
			jPanel43.setBackground(Color.cyan);
		}
		if (board1[3][8] == 'v') {
			jPanel44.setBackground(Color.cyan);
		}
		if (board1[4][8] == 'v') {
			jPanel45.setBackground(Color.cyan);
		}
		if (board1[0][9] == 'v') {
			jPanel46.setBackground(Color.cyan);
		}
		if (board1[1][9] == 'v') {
			jPanel47.setBackground(Color.cyan);
		}
		if (board1[2][9] == 'v') {
			jPanel48.setBackground(Color.cyan);
		}
		if (board1[3][9] == 'v') {
			jPanel49.setBackground(Color.cyan);
		}
		if (board1[4][9] == 'v') {
			jPanel50.setBackground(Color.cyan);
		}

		if (board1[0][10] == 'v') {
			jPanel51.setBackground(Color.cyan);
		}
		if (board1[1][10] == 'v') {
			jPanel52.setBackground(Color.cyan);
		}
		if (board1[2][10] == 'v') {
			jPanel53.setBackground(Color.cyan);
		}
		if (board1[3][10] == 'v') {
			jPanel54.setBackground(Color.cyan);
		}
		if (board1[4][10] == 'v') {
			jPanel55.setBackground(Color.cyan);
		}
		if (board1[0][11] == 'v') {
			jPanel56.setBackground(Color.cyan);
		}
		if (board1[1][11] == 'v') {
			jPanel57.setBackground(Color.cyan);
		}
		if (board1[2][11] == 'v') {
			jPanel58.setBackground(Color.cyan);
		}
		if (board1[3][11] == 'v') {
			jPanel59.setBackground(Color.cyan);
		}
		if (board1[4][11] == 'v') {
			jPanel60.setBackground(Color.cyan);
		}
		if (board1[0][12] == 'v') {
			jPanel61.setBackground(Color.cyan);
		}
		if (board1[1][12] == 'v') {
			jPanel62.setBackground(Color.cyan);
		}
		if (board1[2][12] == 'v') {
			jPanel63.setBackground(Color.cyan);
		}
		if (board1[3][12] == 'v') {
			jPanel64.setBackground(Color.cyan);
		}
		if (board1[4][12] == 'v') {
			jPanel65.setBackground(Color.cyan);
		}
		if (board1[0][13] == 'v') {
			jPanel66.setBackground(Color.cyan);
		}
		if (board1[1][13] == 'v') {
			jPanel67.setBackground(Color.cyan);
		}
		if (board1[2][13] == 'v') {
			jPanel68.setBackground(Color.cyan);
		}
		if (board1[3][13] == 'v') {
			jPanel69.setBackground(Color.cyan);
		}
		if (board1[4][13] == 'v') {
			jPanel70.setBackground(Color.cyan);
		}
		if (board1[0][14] == 'v') {
			jPanel71.setBackground(Color.cyan);
		}
		if (board1[1][14] == 'v') {
			jPanel72.setBackground(Color.cyan);
		}
		if (board1[2][14] == 'v') {
			jPanel73.setBackground(Color.cyan);
		}
		if (board1[3][14] == 'v') {
			jPanel74.setBackground(Color.cyan);
		}
		if (board1[4][14] == 'v') {
			jPanel75.setBackground(Color.cyan);
		}

		// -------------------------------------------------------
		// makes it grey
		if (board1[0][0] == 'w') {
			jPanel1.setBackground(Color.gray);
		}
		if (board1[1][0] == 'w') {
			jPanel2.setBackground(Color.gray);
		}
		if (board1[2][0] == 'w') {
			jPanel3.setBackground(Color.gray);
		}
		if (board1[3][0] == 'w') {
			jPanel4.setBackground(Color.gray);
		}
		if (board1[4][0] == 'w') {
			jPanel5.setBackground(Color.gray);
		}
		if (board1[0][1] == 'w') {
			jPanel6.setBackground(Color.gray);
		}
		if (board1[1][1] == 'w') {
			jPanel7.setBackground(Color.gray);
		}
		if (board1[2][1] == 'w') {
			jPanel8.setBackground(Color.gray);
		}
		if (board1[3][1] == 'w') {
			jPanel9.setBackground(Color.gray);
		}
		if (board1[4][1] == 'w') {
			jPanel10.setBackground(Color.gray);
		}
		if (board1[0][2] == 'w') {
			jPanel11.setBackground(Color.gray);
		}
		if (board1[1][2] == 'w') {
			jPanel12.setBackground(Color.gray);
		}
		if (board1[2][2] == 'w') {
			jPanel13.setBackground(Color.gray);
		}
		if (board1[3][2] == 'w') {
			jPanel14.setBackground(Color.gray);
		}
		if (board1[4][2] == 'w') {
			jPanel15.setBackground(Color.gray);
		}
		if (board1[0][3] == 'w') {
			jPanel16.setBackground(Color.gray);
		}
		if (board1[1][3] == 'w') {
			jPanel17.setBackground(Color.gray);
		}
		if (board1[2][3] == 'w') {
			jPanel18.setBackground(Color.gray);
		}
		if (board1[3][3] == 'w') {
			jPanel19.setBackground(Color.gray);
		}
		if (board1[4][3] == 'w') {
			jPanel20.setBackground(Color.gray);
		}
		if (board1[0][4] == 'w') {
			jPanel21.setBackground(Color.gray);
		}
		if (board1[1][4] == 'w') {
			jPanel22.setBackground(Color.gray);
		}
		if (board1[2][4] == 'w') {
			jPanel23.setBackground(Color.gray);
		}
		if (board1[3][4] == 'w') {
			jPanel24.setBackground(Color.gray);
		}
		if (board1[4][4] == 'w') {
			jPanel25.setBackground(Color.gray);
		}

		if (board1[0][5] == 'w') {
			jPanel26.setBackground(Color.gray);
		}
		if (board1[1][5] == 'w') {
			jPanel27.setBackground(Color.gray);
		}
		if (board1[2][5] == 'w') {
			jPanel28.setBackground(Color.gray);
		}
		if (board1[3][5] == 'w') {
			jPanel29.setBackground(Color.gray);
		}
		if (board1[4][5] == 'w') {
			jPanel30.setBackground(Color.gray);
		}
		if (board1[0][6] == 'w') {
			jPanel31.setBackground(Color.gray);
		}
		if (board1[1][6] == 'w') {
			jPanel32.setBackground(Color.gray);
		}
		if (board1[2][6] == 'w') {
			jPanel33.setBackground(Color.gray);
		}
		if (board1[3][6] == 'w') {
			jPanel34.setBackground(Color.gray);
		}
		if (board1[4][6] == 'w') {
			jPanel35.setBackground(Color.gray);
		}
		if (board1[0][7] == 'w') {
			jPanel36.setBackground(Color.gray);
		}
		if (board1[1][7] == 'w') {
			jPanel37.setBackground(Color.gray);
		}
		if (board1[2][7] == 'w') {
			jPanel38.setBackground(Color.gray);
		}
		if (board1[3][7] == 'w') {
			jPanel39.setBackground(Color.gray);
		}
		if (board1[4][7] == 'w') {
			jPanel40.setBackground(Color.gray);
		}
		if (board1[0][8] == 'w') {
			jPanel41.setBackground(Color.gray);
		}
		if (board1[1][8] == 'w') {
			jPanel42.setBackground(Color.gray);
		}
		if (board1[2][8] == 'w') {
			jPanel43.setBackground(Color.gray);
		}
		if (board1[3][8] == 'w') {
			jPanel44.setBackground(Color.gray);
		}
		if (board1[4][8] == 'w') {
			jPanel45.setBackground(Color.gray);
		}
		if (board1[0][9] == 'w') {
			jPanel46.setBackground(Color.gray);
		}
		if (board1[1][9] == 'w') {
			jPanel47.setBackground(Color.gray);
		}
		if (board1[2][9] == 'w') {
			jPanel48.setBackground(Color.gray);
		}
		if (board1[3][9] == 'w') {
			jPanel49.setBackground(Color.gray);
		}
		if (board1[4][9] == 'w') {
			jPanel50.setBackground(Color.gray);
		}

		if (board1[0][10] == 'w') {
			jPanel51.setBackground(Color.gray);
		}
		if (board1[1][10] == 'w') {
			jPanel52.setBackground(Color.gray);
		}
		if (board1[2][10] == 'w') {
			jPanel53.setBackground(Color.gray);
		}
		if (board1[3][10] == 'w') {
			jPanel54.setBackground(Color.gray);
		}
		if (board1[4][10] == 'w') {
			jPanel55.setBackground(Color.gray);
		}
		if (board1[0][11] == 'w') {
			jPanel56.setBackground(Color.gray);
		}
		if (board1[1][11] == 'w') {
			jPanel57.setBackground(Color.gray);
		}
		if (board1[2][11] == 'w') {
			jPanel58.setBackground(Color.gray);
		}
		if (board1[3][11] == 'w') {
			jPanel59.setBackground(Color.gray);
		}
		if (board1[4][11] == 'w') {
			jPanel60.setBackground(Color.gray);
		}
		if (board1[0][12] == 'w') {
			jPanel61.setBackground(Color.gray);
		}
		if (board1[1][12] == 'w') {
			jPanel62.setBackground(Color.gray);
		}
		if (board1[2][12] == 'w') {
			jPanel63.setBackground(Color.gray);
		}
		if (board1[3][12] == 'w') {
			jPanel64.setBackground(Color.gray);
		}
		if (board1[4][12] == 'w') {
			jPanel65.setBackground(Color.gray);
		}
		if (board1[0][13] == 'w') {
			jPanel66.setBackground(Color.gray);
		}
		if (board1[1][13] == 'w') {
			jPanel67.setBackground(Color.gray);
		}
		if (board1[2][13] == 'w') {
			jPanel68.setBackground(Color.gray);
		}
		if (board1[3][13] == 'w') {
			jPanel69.setBackground(Color.gray);
		}
		if (board1[4][13] == 'w') {
			jPanel70.setBackground(Color.gray);
		}
		if (board1[0][14] == 'w') {
			jPanel71.setBackground(Color.gray);
		}
		if (board1[1][14] == 'w') {
			jPanel72.setBackground(Color.gray);
		}
		if (board1[2][14] == 'w') {
			jPanel73.setBackground(Color.gray);
		}
		if (board1[3][14] == 'w') {
			jPanel74.setBackground(Color.gray);
		}
		if (board1[4][14] == 'w') {
			jPanel75.setBackground(Color.gray);
		}

		// -------------------------------------------
		// makes it magenta
		if (board1[0][0] == 'y') {
			jPanel1.setBackground(Color.magenta);
		}
		if (board1[1][0] == 'y') {
			jPanel2.setBackground(Color.magenta);
		}
		if (board1[2][0] == 'y') {
			jPanel3.setBackground(Color.magenta);
		}
		if (board1[3][0] == 'y') {
			jPanel4.setBackground(Color.magenta);
		}
		if (board1[4][0] == 'y') {
			jPanel5.setBackground(Color.magenta);
		}
		if (board1[0][1] == 'y') {
			jPanel6.setBackground(Color.magenta);
		}
		if (board1[1][1] == 'y') {
			jPanel7.setBackground(Color.magenta);
		}
		if (board1[2][1] == 'y') {
			jPanel8.setBackground(Color.magenta);
		}
		if (board1[3][1] == 'y') {
			jPanel9.setBackground(Color.magenta);
		}
		if (board1[4][1] == 'y') {
			jPanel10.setBackground(Color.magenta);
		}
		if (board1[0][2] == 'y') {
			jPanel11.setBackground(Color.magenta);
		}
		if (board1[1][2] == 'y') {
			jPanel12.setBackground(Color.magenta);
		}
		if (board1[2][2] == 'y') {
			jPanel13.setBackground(Color.magenta);
		}
		if (board1[3][2] == 'y') {
			jPanel14.setBackground(Color.magenta);
		}
		if (board1[4][2] == 'y') {
			jPanel15.setBackground(Color.magenta);
		}
		if (board1[0][3] == 'y') {
			jPanel16.setBackground(Color.magenta);
		}
		if (board1[1][3] == 'y') {
			jPanel17.setBackground(Color.magenta);
		}
		if (board1[2][3] == 'y') {
			jPanel18.setBackground(Color.magenta);
		}
		if (board1[3][3] == 'y') {
			jPanel19.setBackground(Color.magenta);
		}
		if (board1[4][3] == 'y') {
			jPanel20.setBackground(Color.magenta);
		}
		if (board1[0][4] == 'y') {
			jPanel21.setBackground(Color.magenta);
		}
		if (board1[1][4] == 'y') {
			jPanel22.setBackground(Color.magenta);
		}
		if (board1[2][4] == 'y') {
			jPanel23.setBackground(Color.magenta);
		}
		if (board1[3][4] == 'y') {
			jPanel24.setBackground(Color.magenta);
		}
		if (board1[4][4] == 'y') {
			jPanel25.setBackground(Color.magenta);
		}

		if (board1[0][5] == 'y') {
			jPanel26.setBackground(Color.magenta);
		}
		if (board1[1][5] == 'y') {
			jPanel27.setBackground(Color.magenta);
		}
		if (board1[2][5] == 'y') {
			jPanel28.setBackground(Color.magenta);
		}
		if (board1[3][5] == 'y') {
			jPanel29.setBackground(Color.magenta);
		}
		if (board1[4][5] == 'y') {
			jPanel30.setBackground(Color.magenta);
		}
		if (board1[0][6] == 'y') {
			jPanel31.setBackground(Color.magenta);
		}
		if (board1[1][6] == 'y') {
			jPanel32.setBackground(Color.magenta);
		}
		if (board1[2][6] == 'y') {
			jPanel33.setBackground(Color.magenta);
		}
		if (board1[3][6] == 'y') {
			jPanel34.setBackground(Color.magenta);
		}
		if (board1[4][6] == 'y') {
			jPanel35.setBackground(Color.magenta);
		}
		if (board1[0][7] == 'y') {
			jPanel36.setBackground(Color.magenta);
		}
		if (board1[1][7] == 'y') {
			jPanel37.setBackground(Color.magenta);
		}
		if (board1[2][7] == 'y') {
			jPanel38.setBackground(Color.magenta);
		}
		if (board1[3][7] == 'y') {
			jPanel39.setBackground(Color.magenta);
		}
		if (board1[4][7] == 'y') {
			jPanel40.setBackground(Color.magenta);
		}
		if (board1[0][8] == 'y') {
			jPanel41.setBackground(Color.magenta);
		}
		if (board1[1][8] == 'y') {
			jPanel42.setBackground(Color.magenta);
		}
		if (board1[2][8] == 'y') {
			jPanel43.setBackground(Color.magenta);
		}
		if (board1[3][8] == 'y') {
			jPanel44.setBackground(Color.magenta);
		}
		if (board1[4][8] == 'y') {
			jPanel45.setBackground(Color.magenta);
		}
		if (board1[0][9] == 'y') {
			jPanel46.setBackground(Color.magenta);
		}
		if (board1[1][9] == 'y') {
			jPanel47.setBackground(Color.magenta);
		}
		if (board1[2][9] == 'y') {
			jPanel48.setBackground(Color.magenta);
		}
		if (board1[3][9] == 'y') {
			jPanel49.setBackground(Color.magenta);
		}
		if (board1[4][9] == 'y') {
			jPanel50.setBackground(Color.magenta);
		}

		if (board1[0][10] == 'y') {
			jPanel51.setBackground(Color.magenta);
		}
		if (board1[1][10] == 'y') {
			jPanel52.setBackground(Color.magenta);
		}
		if (board1[2][10] == 'y') {
			jPanel53.setBackground(Color.magenta);
		}
		if (board1[3][10] == 'y') {
			jPanel54.setBackground(Color.magenta);
		}
		if (board1[4][10] == 'y') {
			jPanel55.setBackground(Color.magenta);
		}
		if (board1[0][11] == 'y') {
			jPanel56.setBackground(Color.magenta);
		}
		if (board1[1][11] == 'y') {
			jPanel57.setBackground(Color.magenta);
		}
		if (board1[2][11] == 'y') {
			jPanel58.setBackground(Color.magenta);
		}
		if (board1[3][11] == 'y') {
			jPanel59.setBackground(Color.magenta);
		}
		if (board1[4][11] == 'y') {
			jPanel60.setBackground(Color.magenta);
		}
		if (board1[0][12] == 'y') {
			jPanel61.setBackground(Color.magenta);
		}
		if (board1[1][12] == 'y') {
			jPanel62.setBackground(Color.magenta);
		}
		if (board1[2][12] == 'y') {
			jPanel63.setBackground(Color.magenta);
		}
		if (board1[3][12] == 'y') {
			jPanel64.setBackground(Color.magenta);
		}
		if (board1[4][12] == 'y') {
			jPanel65.setBackground(Color.magenta);
		}
		if (board1[0][13] == 'y') {
			jPanel66.setBackground(Color.magenta);
		}
		if (board1[1][13] == 'y') {
			jPanel67.setBackground(Color.magenta);
		}
		if (board1[2][13] == 'y') {
			jPanel68.setBackground(Color.magenta);
		}
		if (board1[3][13] == 'y') {
			jPanel69.setBackground(Color.magenta);
		}
		if (board1[4][13] == 'y') {
			jPanel70.setBackground(Color.magenta);
		}
		if (board1[0][14] == 'y') {
			jPanel71.setBackground(Color.magenta);
		}
		if (board1[1][14] == 'y') {
			jPanel72.setBackground(Color.magenta);
		}
		if (board1[2][14] == 'y') {
			jPanel73.setBackground(Color.magenta);
		}
		if (board1[3][14] == 'y') {
			jPanel74.setBackground(Color.magenta);
		}
		if (board1[4][14] == 'y') {
			jPanel75.setBackground(Color.magenta);
		}

		// --------------------------------------------
		// makes it orange (the best color)
		if (board1[0][0] == 'i') {
			jPanel1.setBackground(Color.orange);
		}
		if (board1[1][0] == 'i') {
			jPanel2.setBackground(Color.orange);
		}
		if (board1[2][0] == 'i') {
			jPanel3.setBackground(Color.orange);
		}
		if (board1[3][0] == 'i') {
			jPanel4.setBackground(Color.orange);
		}
		if (board1[4][0] == 'i') {
			jPanel5.setBackground(Color.orange);
		}
		if (board1[0][1] == 'i') {
			jPanel6.setBackground(Color.orange);
		}
		if (board1[1][1] == 'i') {
			jPanel7.setBackground(Color.orange);
		}
		if (board1[2][1] == 'i') {
			jPanel8.setBackground(Color.orange);
		}
		if (board1[3][1] == 'i') {
			jPanel9.setBackground(Color.orange);
		}
		if (board1[4][1] == 'i') {
			jPanel10.setBackground(Color.orange);
		}
		if (board1[0][2] == 'i') {
			jPanel11.setBackground(Color.orange);
		}
		if (board1[1][2] == 'i') {
			jPanel12.setBackground(Color.orange);
		}
		if (board1[2][2] == 'i') {
			jPanel13.setBackground(Color.orange);
		}
		if (board1[3][2] == 'i') {
			jPanel14.setBackground(Color.orange);
		}
		if (board1[4][2] == 'i') {
			jPanel15.setBackground(Color.orange);
		}
		if (board1[0][3] == 'i') {
			jPanel16.setBackground(Color.orange);
		}
		if (board1[1][3] == 'i') {
			jPanel17.setBackground(Color.orange);
		}
		if (board1[2][3] == 'i') {
			jPanel18.setBackground(Color.orange);
		}
		if (board1[3][3] == 'i') {
			jPanel19.setBackground(Color.orange);
		}
		if (board1[4][3] == 'i') {
			jPanel20.setBackground(Color.orange);
		}
		if (board1[0][4] == 'i') {
			jPanel21.setBackground(Color.orange);
		}
		if (board1[1][4] == 'i') {
			jPanel22.setBackground(Color.orange);
		}
		if (board1[2][4] == 'i') {
			jPanel23.setBackground(Color.orange);
		}
		if (board1[3][4] == 'i') {
			jPanel24.setBackground(Color.orange);
		}
		if (board1[4][4] == 'i') {
			jPanel25.setBackground(Color.orange);
		}

		if (board1[0][5] == 'i') {
			jPanel26.setBackground(Color.orange);
		}
		if (board1[1][5] == 'i') {
			jPanel27.setBackground(Color.orange);
		}
		if (board1[2][5] == 'i') {
			jPanel28.setBackground(Color.orange);
		}
		if (board1[3][5] == 'i') {
			jPanel29.setBackground(Color.orange);
		}
		if (board1[4][5] == 'i') {
			jPanel30.setBackground(Color.orange);
		}
		if (board1[0][6] == 'i') {
			jPanel31.setBackground(Color.orange);
		}
		if (board1[1][6] == 'i') {
			jPanel32.setBackground(Color.orange);
		}
		if (board1[2][6] == 'i') {
			jPanel33.setBackground(Color.orange);
		}
		if (board1[3][6] == 'i') {
			jPanel34.setBackground(Color.orange);
		}
		if (board1[4][6] == 'i') {
			jPanel35.setBackground(Color.orange);
		}
		if (board1[0][7] == 'i') {
			jPanel36.setBackground(Color.orange);
		}
		if (board1[1][7] == 'i') {
			jPanel37.setBackground(Color.orange);
		}
		if (board1[2][7] == 'i') {
			jPanel38.setBackground(Color.orange);
		}
		if (board1[3][7] == 'i') {
			jPanel39.setBackground(Color.orange);
		}
		if (board1[4][7] == 'i') {
			jPanel40.setBackground(Color.orange);
		}
		if (board1[0][8] == 'i') {
			jPanel41.setBackground(Color.orange);
		}
		if (board1[1][8] == 'i') {
			jPanel42.setBackground(Color.orange);
		}
		if (board1[2][8] == 'i') {
			jPanel43.setBackground(Color.orange);
		}
		if (board1[3][8] == 'i') {
			jPanel44.setBackground(Color.orange);
		}
		if (board1[4][8] == 'i') {
			jPanel45.setBackground(Color.orange);
		}
		if (board1[0][9] == 'i') {
			jPanel46.setBackground(Color.orange);
		}
		if (board1[1][9] == 'i') {
			jPanel47.setBackground(Color.orange);
		}
		if (board1[2][9] == 'i') {
			jPanel48.setBackground(Color.orange);
		}
		if (board1[3][9] == 'i') {
			jPanel49.setBackground(Color.orange);
		}
		if (board1[4][9] == 'i') {
			jPanel50.setBackground(Color.orange);
		}

		if (board1[0][10] == 'i') {
			jPanel51.setBackground(Color.orange);
		}
		if (board1[1][10] == 'i') {
			jPanel52.setBackground(Color.orange);
		}
		if (board1[2][10] == 'i') {
			jPanel53.setBackground(Color.orange);
		}
		if (board1[3][10] == 'i') {
			jPanel54.setBackground(Color.orange);
		}
		if (board1[4][10] == 'i') {
			jPanel55.setBackground(Color.orange);
		}
		if (board1[0][11] == 'i') {
			jPanel56.setBackground(Color.orange);
		}
		if (board1[1][11] == 'i') {
			jPanel57.setBackground(Color.orange);
		}
		if (board1[2][11] == 'i') {
			jPanel58.setBackground(Color.orange);
		}
		if (board1[3][11] == 'i') {
			jPanel59.setBackground(Color.orange);
		}
		if (board1[4][11] == 'i') {
			jPanel60.setBackground(Color.orange);
		}
		if (board1[0][12] == 'i') {
			jPanel61.setBackground(Color.orange);
		}
		if (board1[1][12] == 'i') {
			jPanel62.setBackground(Color.orange);
		}
		if (board1[2][12] == 'i') {
			jPanel63.setBackground(Color.orange);
		}
		if (board1[3][12] == 'i') {
			jPanel64.setBackground(Color.orange);
		}
		if (board1[4][12] == 'i') {
			jPanel65.setBackground(Color.orange);
		}
		if (board1[0][13] == 'i') {
			jPanel66.setBackground(Color.orange);
		}
		if (board1[1][13] == 'i') {
			jPanel67.setBackground(Color.orange);
		}
		if (board1[2][13] == 'i') {
			jPanel68.setBackground(Color.orange);
		}
		if (board1[3][13] == 'i') {
			jPanel69.setBackground(Color.orange);
		}
		if (board1[4][13] == 'i') {
			jPanel70.setBackground(Color.orange);
		}
		if (board1[0][14] == 'i') {
			jPanel71.setBackground(Color.orange);
		}
		if (board1[1][14] == 'i') {
			jPanel72.setBackground(Color.orange);
		}
		if (board1[2][14] == 'i') {
			jPanel73.setBackground(Color.orange);
		}
		if (board1[3][14] == 'i') {
			jPanel74.setBackground(Color.orange);
		}
		if (board1[4][14] == 'i') {
			jPanel75.setBackground(Color.orange);
		}

		// ----------------------------------------------
		// makes pink
		if (board1[0][0] == 't') {
			jPanel1.setBackground(Color.pink);
		}
		if (board1[1][0] == 't') {
			jPanel2.setBackground(Color.pink);
		}
		if (board1[2][0] == 't') {
			jPanel3.setBackground(Color.pink);
		}
		if (board1[3][0] == 't') {
			jPanel4.setBackground(Color.pink);
		}
		if (board1[4][0] == 't') {
			jPanel5.setBackground(Color.pink);
		}
		if (board1[0][1] == 't') {
			jPanel6.setBackground(Color.pink);
		}
		if (board1[1][1] == 't') {
			jPanel7.setBackground(Color.pink);
		}
		if (board1[2][1] == 't') {
			jPanel8.setBackground(Color.pink);
		}
		if (board1[3][1] == 't') {
			jPanel9.setBackground(Color.pink);
		}
		if (board1[4][1] == 't') {
			jPanel10.setBackground(Color.pink);
		}
		if (board1[0][2] == 't') {
			jPanel11.setBackground(Color.pink);
		}
		if (board1[1][2] == 't') {
			jPanel12.setBackground(Color.pink);
		}
		if (board1[2][2] == 't') {
			jPanel13.setBackground(Color.pink);
		}
		if (board1[3][2] == 't') {
			jPanel14.setBackground(Color.pink);
		}
		if (board1[4][2] == 't') {
			jPanel15.setBackground(Color.pink);
		}
		if (board1[0][3] == 't') {
			jPanel16.setBackground(Color.pink);
		}
		if (board1[1][3] == 't') {
			jPanel17.setBackground(Color.pink);
		}
		if (board1[2][3] == 't') {
			jPanel18.setBackground(Color.pink);
		}
		if (board1[3][3] == 't') {
			jPanel19.setBackground(Color.pink);
		}
		if (board1[4][3] == 't') {
			jPanel20.setBackground(Color.pink);
		}
		if (board1[0][4] == 't') {
			jPanel21.setBackground(Color.pink);
		}
		if (board1[1][4] == 't') {
			jPanel22.setBackground(Color.pink);
		}
		if (board1[2][4] == 't') {
			jPanel23.setBackground(Color.pink);
		}
		if (board1[3][4] == 't') {
			jPanel24.setBackground(Color.pink);
		}
		if (board1[4][4] == 't') {
			jPanel25.setBackground(Color.pink);
		}

		if (board1[0][5] == 't') {
			jPanel26.setBackground(Color.pink);
		}
		if (board1[1][5] == 't') {
			jPanel27.setBackground(Color.pink);
		}
		if (board1[2][5] == 't') {
			jPanel28.setBackground(Color.pink);
		}
		if (board1[3][5] == 't') {
			jPanel29.setBackground(Color.pink);
		}
		if (board1[4][5] == 't') {
			jPanel30.setBackground(Color.pink);
		}
		if (board1[0][6] == 't') {
			jPanel31.setBackground(Color.pink);
		}
		if (board1[1][6] == 't') {
			jPanel32.setBackground(Color.pink);
		}
		if (board1[2][6] == 't') {
			jPanel33.setBackground(Color.pink);
		}
		if (board1[3][6] == 't') {
			jPanel34.setBackground(Color.pink);
		}
		if (board1[4][6] == 't') {
			jPanel35.setBackground(Color.pink);
		}
		if (board1[0][7] == 't') {
			jPanel36.setBackground(Color.pink);
		}
		if (board1[1][7] == 't') {
			jPanel37.setBackground(Color.pink);
		}
		if (board1[2][7] == 't') {
			jPanel38.setBackground(Color.pink);
		}
		if (board1[3][7] == 't') {
			jPanel39.setBackground(Color.pink);
		}
		if (board1[4][7] == 't') {
			jPanel40.setBackground(Color.pink);
		}
		if (board1[0][8] == 't') {
			jPanel41.setBackground(Color.pink);
		}
		if (board1[1][8] == 't') {
			jPanel42.setBackground(Color.pink);
		}
		if (board1[2][8] == 't') {
			jPanel43.setBackground(Color.pink);
		}
		if (board1[3][8] == 't') {
			jPanel44.setBackground(Color.pink);
		}
		if (board1[4][8] == 't') {
			jPanel45.setBackground(Color.pink);
		}
		if (board1[0][9] == 't') {
			jPanel46.setBackground(Color.pink);
		}
		if (board1[1][9] == 't') {
			jPanel47.setBackground(Color.pink);
		}
		if (board1[2][9] == 't') {
			jPanel48.setBackground(Color.pink);
		}
		if (board1[3][9] == 't') {
			jPanel49.setBackground(Color.pink);
		}
		if (board1[4][9] == 't') {
			jPanel50.setBackground(Color.pink);
		}

		if (board1[0][10] == 't') {
			jPanel51.setBackground(Color.pink);
		}
		if (board1[1][10] == 't') {
			jPanel52.setBackground(Color.pink);
		}
		if (board1[2][10] == 't') {
			jPanel53.setBackground(Color.pink);
		}
		if (board1[3][10] == 't') {
			jPanel54.setBackground(Color.pink);
		}
		if (board1[4][10] == 't') {
			jPanel55.setBackground(Color.pink);
		}
		if (board1[0][11] == 't') {
			jPanel56.setBackground(Color.pink);
		}
		if (board1[1][11] == 't') {
			jPanel57.setBackground(Color.pink);
		}
		if (board1[2][11] == 't') {
			jPanel58.setBackground(Color.pink);
		}
		if (board1[3][11] == 't') {
			jPanel59.setBackground(Color.pink);
		}
		if (board1[4][11] == 't') {
			jPanel60.setBackground(Color.pink);
		}
		if (board1[0][12] == 't') {
			jPanel61.setBackground(Color.pink);
		}
		if (board1[1][12] == 't') {
			jPanel62.setBackground(Color.pink);
		}
		if (board1[2][12] == 't') {
			jPanel63.setBackground(Color.pink);
		}
		if (board1[3][12] == 't') {
			jPanel64.setBackground(Color.pink);
		}
		if (board1[4][12] == 't') {
			jPanel65.setBackground(Color.pink);
		}
		if (board1[0][13] == 't') {
			jPanel66.setBackground(Color.pink);
		}
		if (board1[1][13] == 't') {
			jPanel67.setBackground(Color.pink);
		}
		if (board1[2][13] == 't') {
			jPanel68.setBackground(Color.pink);
		}
		if (board1[3][13] == 't') {
			jPanel69.setBackground(Color.pink);
		}
		if (board1[4][13] == 't') {
			jPanel70.setBackground(Color.pink);
		}
		if (board1[0][14] == 't') {
			jPanel71.setBackground(Color.pink);
		}
		if (board1[1][14] == 't') {
			jPanel72.setBackground(Color.pink);
		}
		if (board1[2][14] == 't') {
			jPanel73.setBackground(Color.pink);
		}
		if (board1[3][14] == 't') {
			jPanel74.setBackground(Color.pink);
		}
		if (board1[4][14] == 't') {
			jPanel75.setBackground(Color.pink);
		}

		// ----------------------------------------------
		// makes yellow
		if (board1[0][0] == 'z') {
			jPanel1.setBackground(Color.yellow);
		}
		if (board1[1][0] == 'z') {
			jPanel2.setBackground(Color.yellow);
		}
		if (board1[2][0] == 'z') {
			jPanel3.setBackground(Color.yellow);
		}
		if (board1[3][0] == 'z') {
			jPanel4.setBackground(Color.yellow);
		}
		if (board1[4][0] == 'z') {
			jPanel5.setBackground(Color.yellow);
		}
		if (board1[0][1] == 'z') {
			jPanel6.setBackground(Color.yellow);
		}
		if (board1[1][1] == 'z') {
			jPanel7.setBackground(Color.yellow);
		}
		if (board1[2][1] == 'z') {
			jPanel8.setBackground(Color.yellow);
		}
		if (board1[3][1] == 'z') {
			jPanel9.setBackground(Color.yellow);
		}
		if (board1[4][1] == 'z') {
			jPanel10.setBackground(Color.yellow);
		}
		if (board1[0][2] == 'z') {
			jPanel11.setBackground(Color.yellow);
		}
		if (board1[1][2] == 'z') {
			jPanel12.setBackground(Color.yellow);
		}
		if (board1[2][2] == 'z') {
			jPanel13.setBackground(Color.yellow);
		}
		if (board1[3][2] == 'z') {
			jPanel14.setBackground(Color.yellow);
		}
		if (board1[4][2] == 'z') {
			jPanel15.setBackground(Color.yellow);
		}
		if (board1[0][3] == 'z') {
			jPanel16.setBackground(Color.yellow);
		}
		if (board1[1][3] == 'z') {
			jPanel17.setBackground(Color.yellow);
		}
		if (board1[2][3] == 'z') {
			jPanel18.setBackground(Color.yellow);
		}
		if (board1[3][3] == 'z') {
			jPanel19.setBackground(Color.yellow);
		}
		if (board1[4][3] == 'z') {
			jPanel20.setBackground(Color.yellow);
		}
		if (board1[0][4] == 'z') {
			jPanel21.setBackground(Color.yellow);
		}
		if (board1[1][4] == 'z') {
			jPanel22.setBackground(Color.yellow);
		}
		if (board1[2][4] == 'z') {
			jPanel23.setBackground(Color.yellow);
		}
		if (board1[3][4] == 'z') {
			jPanel24.setBackground(Color.yellow);
		}
		if (board1[4][4] == 'z') {
			jPanel25.setBackground(Color.yellow);
		}

		if (board1[0][5] == 'z') {
			jPanel26.setBackground(Color.yellow);
		}
		if (board1[1][5] == 'z') {
			jPanel27.setBackground(Color.yellow);
		}
		if (board1[2][5] == 'z') {
			jPanel28.setBackground(Color.yellow);
		}
		if (board1[3][5] == 'z') {
			jPanel29.setBackground(Color.yellow);
		}
		if (board1[4][5] == 'z') {
			jPanel30.setBackground(Color.yellow);
		}
		if (board1[0][6] == 'z') {
			jPanel31.setBackground(Color.yellow);
		}
		if (board1[1][6] == 'z') {
			jPanel32.setBackground(Color.yellow);
		}
		if (board1[2][6] == 'z') {
			jPanel33.setBackground(Color.yellow);
		}
		if (board1[3][6] == 'z') {
			jPanel34.setBackground(Color.yellow);
		}
		if (board1[4][6] == 'z') {
			jPanel35.setBackground(Color.yellow);
		}
		if (board1[0][7] == 'z') {
			jPanel36.setBackground(Color.yellow);
		}
		if (board1[1][7] == 'z') {
			jPanel37.setBackground(Color.yellow);
		}
		if (board1[2][7] == 'z') {
			jPanel38.setBackground(Color.yellow);
		}
		if (board1[3][7] == 'z') {
			jPanel39.setBackground(Color.yellow);
		}
		if (board1[4][7] == 'z') {
			jPanel40.setBackground(Color.yellow);
		}
		if (board1[0][8] == 'z') {
			jPanel41.setBackground(Color.yellow);
		}
		if (board1[1][8] == 'z') {
			jPanel42.setBackground(Color.yellow);
		}
		if (board1[2][8] == 'z') {
			jPanel43.setBackground(Color.yellow);
		}
		if (board1[3][8] == 'z') {
			jPanel44.setBackground(Color.yellow);
		}
		if (board1[4][8] == 'z') {
			jPanel45.setBackground(Color.yellow);
		}
		if (board1[0][9] == 'z') {
			jPanel46.setBackground(Color.yellow);
		}
		if (board1[1][9] == 'z') {
			jPanel47.setBackground(Color.yellow);
		}
		if (board1[2][9] == 'z') {
			jPanel48.setBackground(Color.yellow);
		}
		if (board1[3][9] == 'z') {
			jPanel49.setBackground(Color.yellow);
		}
		if (board1[4][9] == 'z') {
			jPanel50.setBackground(Color.yellow);
		}

		if (board1[0][10] == 'z') {
			jPanel51.setBackground(Color.yellow);
		}
		if (board1[1][10] == 'z') {
			jPanel52.setBackground(Color.yellow);
		}
		if (board1[2][10] == 'z') {
			jPanel53.setBackground(Color.yellow);
		}
		if (board1[3][10] == 'z') {
			jPanel54.setBackground(Color.yellow);
		}
		if (board1[4][10] == 'z') {
			jPanel55.setBackground(Color.yellow);
		}
		if (board1[0][11] == 'z') {
			jPanel56.setBackground(Color.yellow);
		}
		if (board1[1][11] == 'z') {
			jPanel57.setBackground(Color.yellow);
		}
		if (board1[2][11] == 'z') {
			jPanel58.setBackground(Color.yellow);
		}
		if (board1[3][11] == 'z') {
			jPanel59.setBackground(Color.yellow);
		}
		if (board1[4][11] == 'z') {
			jPanel60.setBackground(Color.yellow);
		}
		if (board1[0][12] == 'z') {
			jPanel61.setBackground(Color.yellow);
		}
		if (board1[1][12] == 'z') {
			jPanel62.setBackground(Color.yellow);
		}
		if (board1[2][12] == 'z') {
			jPanel63.setBackground(Color.yellow);
		}
		if (board1[3][12] == 'z') {
			jPanel64.setBackground(Color.yellow);
		}
		if (board1[4][12] == 'z') {
			jPanel65.setBackground(Color.yellow);
		}
		if (board1[0][13] == 'z') {
			jPanel66.setBackground(Color.yellow);
		}
		if (board1[1][13] == 'z') {
			jPanel67.setBackground(Color.yellow);
		}
		if (board1[2][13] == 'z') {
			jPanel68.setBackground(Color.yellow);
		}
		if (board1[3][13] == 'z') {
			jPanel69.setBackground(Color.yellow);
		}
		if (board1[4][13] == 'z') {
			jPanel70.setBackground(Color.yellow);
		}
		if (board1[0][14] == 'z') {
			jPanel71.setBackground(Color.yellow);
		}
		if (board1[1][14] == 'z') {
			jPanel72.setBackground(Color.yellow);
		}
		if (board1[2][14] == 'z') {
			jPanel73.setBackground(Color.yellow);
		}
		if (board1[3][14] == 'z') {
			jPanel74.setBackground(Color.yellow);
		}
		if (board1[4][14] == 'z') {
			jPanel75.setBackground(Color.yellow);
		}

		// ----------------------------------------------
		// makes black
		if (board1[0][0] == 'u') {
			jPanel1.setBackground(Color.black);
		}
		if (board1[1][0] == 'u') {
			jPanel2.setBackground(Color.black);
		}
		if (board1[2][0] == 'u') {
			jPanel3.setBackground(Color.black);
		}
		if (board1[3][0] == 'u') {
			jPanel4.setBackground(Color.black);
		}
		if (board1[4][0] == 'u') {
			jPanel5.setBackground(Color.black);
		}
		if (board1[0][1] == 'u') {
			jPanel6.setBackground(Color.black);
		}
		if (board1[1][1] == 'u') {
			jPanel7.setBackground(Color.black);
		}
		if (board1[2][1] == 'u') {
			jPanel8.setBackground(Color.black);
		}
		if (board1[3][1] == 'u') {
			jPanel9.setBackground(Color.black);
		}
		if (board1[4][1] == 'u') {
			jPanel10.setBackground(Color.black);
		}
		if (board1[0][2] == 'u') {
			jPanel11.setBackground(Color.black);
		}
		if (board1[1][2] == 'u') {
			jPanel12.setBackground(Color.black);
		}
		if (board1[2][2] == 'u') {
			jPanel13.setBackground(Color.black);
		}
		if (board1[3][2] == 'u') {
			jPanel14.setBackground(Color.black);
		}
		if (board1[4][2] == 'u') {
			jPanel15.setBackground(Color.black);
		}
		if (board1[0][3] == 'u') {
			jPanel16.setBackground(Color.black);
		}
		if (board1[1][3] == 'u') {
			jPanel17.setBackground(Color.black);
		}
		if (board1[2][3] == 'u') {
			jPanel18.setBackground(Color.black);
		}
		if (board1[3][3] == 'u') {
			jPanel19.setBackground(Color.black);
		}
		if (board1[4][3] == 'u') {
			jPanel20.setBackground(Color.black);
		}
		if (board1[0][4] == 'u') {
			jPanel21.setBackground(Color.black);
		}
		if (board1[1][4] == 'u') {
			jPanel22.setBackground(Color.black);
		}
		if (board1[2][4] == 'u') {
			jPanel23.setBackground(Color.black);
		}
		if (board1[3][4] == 'u') {
			jPanel24.setBackground(Color.black);
		}
		if (board1[4][4] == 'u') {
			jPanel25.setBackground(Color.black);
		}

		if (board1[0][5] == 'u') {
			jPanel26.setBackground(Color.black);
		}
		if (board1[1][5] == 'u') {
			jPanel27.setBackground(Color.black);
		}
		if (board1[2][5] == 'u') {
			jPanel28.setBackground(Color.black);
		}
		if (board1[3][5] == 'u') {
			jPanel29.setBackground(Color.black);
		}
		if (board1[4][5] == 'u') {
			jPanel30.setBackground(Color.black);
		}
		if (board1[0][6] == 'u') {
			jPanel31.setBackground(Color.black);
		}
		if (board1[1][6] == 'u') {
			jPanel32.setBackground(Color.black);
		}
		if (board1[2][6] == 'u') {
			jPanel33.setBackground(Color.black);
		}
		if (board1[3][6] == 'u') {
			jPanel34.setBackground(Color.black);
		}
		if (board1[4][6] == 'u') {
			jPanel35.setBackground(Color.black);
		}
		if (board1[0][7] == 'u') {
			jPanel36.setBackground(Color.black);
		}
		if (board1[1][7] == 'u') {
			jPanel37.setBackground(Color.black);
		}
		if (board1[2][7] == 'u') {
			jPanel38.setBackground(Color.black);
		}
		if (board1[3][7] == 'u') {
			jPanel39.setBackground(Color.black);
		}
		if (board1[4][7] == 'u') {
			jPanel40.setBackground(Color.black);
		}
		if (board1[0][8] == 'u') {
			jPanel41.setBackground(Color.black);
		}
		if (board1[1][8] == 'u') {
			jPanel42.setBackground(Color.black);
		}
		if (board1[2][8] == 'u') {
			jPanel43.setBackground(Color.black);
		}
		if (board1[3][8] == 'u') {
			jPanel44.setBackground(Color.black);
		}
		if (board1[4][8] == 'u') {
			jPanel45.setBackground(Color.black);
		}
		if (board1[0][9] == 'u') {
			jPanel46.setBackground(Color.black);
		}
		if (board1[1][9] == 'u') {
			jPanel47.setBackground(Color.black);
		}
		if (board1[2][9] == 'u') {
			jPanel48.setBackground(Color.black);
		}
		if (board1[3][9] == 'u') {
			jPanel49.setBackground(Color.black);
		}
		if (board1[4][9] == 'u') {
			jPanel50.setBackground(Color.black);
		}

		if (board1[0][10] == 'u') {
			jPanel51.setBackground(Color.black);
		}
		if (board1[1][10] == 'u') {
			jPanel52.setBackground(Color.black);
		}
		if (board1[2][10] == 'u') {
			jPanel53.setBackground(Color.black);
		}
		if (board1[3][10] == 'u') {
			jPanel54.setBackground(Color.black);
		}
		if (board1[4][10] == 'u') {
			jPanel55.setBackground(Color.black);
		}
		if (board1[0][11] == 'u') {
			jPanel56.setBackground(Color.black);
		}
		if (board1[1][11] == 'u') {
			jPanel57.setBackground(Color.black);
		}
		if (board1[2][11] == 'u') {
			jPanel58.setBackground(Color.black);
		}
		if (board1[3][11] == 'u') {
			jPanel59.setBackground(Color.black);
		}
		if (board1[4][11] == 'u') {
			jPanel60.setBackground(Color.black);
		}
		if (board1[0][12] == 'u') {
			jPanel61.setBackground(Color.black);
		}
		if (board1[1][12] == 'u') {
			jPanel62.setBackground(Color.black);
		}
		if (board1[2][12] == 'u') {
			jPanel63.setBackground(Color.black);
		}
		if (board1[3][12] == 'u') {
			jPanel64.setBackground(Color.black);
		}
		if (board1[4][12] == 'u') {
			jPanel65.setBackground(Color.black);
		}
		if (board1[0][13] == 'u') {
			jPanel66.setBackground(Color.black);
		}
		if (board1[1][13] == 'u') {
			jPanel67.setBackground(Color.black);
		}
		if (board1[2][13] == 'u') {
			jPanel68.setBackground(Color.black);
		}
		if (board1[3][13] == 'u') {
			jPanel69.setBackground(Color.black);
		}
		if (board1[4][13] == 'u') {
			jPanel70.setBackground(Color.black);
		}
		if (board1[0][14] == 'u') {
			jPanel71.setBackground(Color.black);
		}
		if (board1[1][14] == 'u') {
			jPanel72.setBackground(Color.black);
		}
		if (board1[2][14] == 'u') {
			jPanel73.setBackground(Color.black);
		}
		if (board1[3][14] == 'u') {
			jPanel74.setBackground(Color.black);
		}
		if (board1[4][14] == 'u') {
			jPanel75.setBackground(Color.black);
		}

		// ----------------------------------------------
		// makes darkGray
		if (board1[0][0] == 'n') {
			jPanel1.setBackground(Color.darkGray);
		}
		if (board1[1][0] == 'n') {
			jPanel2.setBackground(Color.darkGray);
		}
		if (board1[2][0] == 'n') {
			jPanel3.setBackground(Color.darkGray);
		}
		if (board1[3][0] == 'n') {
			jPanel4.setBackground(Color.darkGray);
		}
		if (board1[4][0] == 'n') {
			jPanel5.setBackground(Color.darkGray);
		}
		if (board1[0][1] == 'n') {
			jPanel6.setBackground(Color.darkGray);
		}
		if (board1[1][1] == 'n') {
			jPanel7.setBackground(Color.darkGray);
		}
		if (board1[2][1] == 'n') {
			jPanel8.setBackground(Color.darkGray);
		}
		if (board1[3][1] == 'n') {
			jPanel9.setBackground(Color.darkGray);
		}
		if (board1[4][1] == 'n') {
			jPanel10.setBackground(Color.darkGray);
		}
		if (board1[0][2] == 'n') {
			jPanel11.setBackground(Color.darkGray);
		}
		if (board1[1][2] == 'n') {
			jPanel12.setBackground(Color.darkGray);
		}
		if (board1[2][2] == 'n') {
			jPanel13.setBackground(Color.darkGray);
		}
		if (board1[3][2] == 'n') {
			jPanel14.setBackground(Color.darkGray);
		}
		if (board1[4][2] == 'n') {
			jPanel15.setBackground(Color.darkGray);
		}
		if (board1[0][3] == 'n') {
			jPanel16.setBackground(Color.darkGray);
		}
		if (board1[1][3] == 'n') {
			jPanel17.setBackground(Color.darkGray);
		}
		if (board1[2][3] == 'n') {
			jPanel18.setBackground(Color.darkGray);
		}
		if (board1[3][3] == 'n') {
			jPanel19.setBackground(Color.darkGray);
		}
		if (board1[4][3] == 'n') {
			jPanel20.setBackground(Color.darkGray);
		}
		if (board1[0][4] == 'n') {
			jPanel21.setBackground(Color.darkGray);
		}
		if (board1[1][4] == 'n') {
			jPanel22.setBackground(Color.darkGray);
		}
		if (board1[2][4] == 'n') {
			jPanel23.setBackground(Color.darkGray);
		}
		if (board1[3][4] == 'n') {
			jPanel24.setBackground(Color.darkGray);
		}
		if (board1[4][4] == 'n') {
			jPanel25.setBackground(Color.darkGray);
		}

		if (board1[0][5] == 'n') {
			jPanel26.setBackground(Color.darkGray);
		}
		if (board1[1][5] == 'n') {
			jPanel27.setBackground(Color.darkGray);
		}
		if (board1[2][5] == 'n') {
			jPanel28.setBackground(Color.darkGray);
		}
		if (board1[3][5] == 'n') {
			jPanel29.setBackground(Color.darkGray);
		}
		if (board1[4][5] == 'n') {
			jPanel30.setBackground(Color.darkGray);
		}
		if (board1[0][6] == 'n') {
			jPanel31.setBackground(Color.darkGray);
		}
		if (board1[1][6] == 'n') {
			jPanel32.setBackground(Color.darkGray);
		}
		if (board1[2][6] == 'n') {
			jPanel33.setBackground(Color.darkGray);
		}
		if (board1[3][6] == 'n') {
			jPanel34.setBackground(Color.darkGray);
		}
		if (board1[4][6] == 'n') {
			jPanel35.setBackground(Color.darkGray);
		}
		if (board1[0][7] == 'n') {
			jPanel36.setBackground(Color.darkGray);
		}
		if (board1[1][7] == 'n') {
			jPanel37.setBackground(Color.darkGray);
		}
		if (board1[2][7] == 'n') {
			jPanel38.setBackground(Color.darkGray);
		}
		if (board1[3][7] == 'n') {
			jPanel39.setBackground(Color.darkGray);
		}
		if (board1[4][7] == 'n') {
			jPanel40.setBackground(Color.darkGray);
		}
		if (board1[0][8] == 'n') {
			jPanel41.setBackground(Color.darkGray);
		}
		if (board1[1][8] == 'n') {
			jPanel42.setBackground(Color.darkGray);
		}
		if (board1[2][8] == 'n') {
			jPanel43.setBackground(Color.darkGray);
		}
		if (board1[3][8] == 'n') {
			jPanel44.setBackground(Color.darkGray);
		}
		if (board1[4][8] == 'n') {
			jPanel45.setBackground(Color.darkGray);
		}
		if (board1[0][9] == 'n') {
			jPanel46.setBackground(Color.darkGray);
		}
		if (board1[1][9] == 'n') {
			jPanel47.setBackground(Color.darkGray);
		}
		if (board1[2][9] == 'n') {
			jPanel48.setBackground(Color.darkGray);
		}
		if (board1[3][9] == 'n') {
			jPanel49.setBackground(Color.darkGray);
		}
		if (board1[4][9] == 'n') {
			jPanel50.setBackground(Color.darkGray);
		}

		if (board1[0][10] == 'n') {
			jPanel51.setBackground(Color.darkGray);
		}
		if (board1[1][10] == 'n') {
			jPanel52.setBackground(Color.darkGray);
		}
		if (board1[2][10] == 'n') {
			jPanel53.setBackground(Color.darkGray);
		}
		if (board1[3][10] == 'n') {
			jPanel54.setBackground(Color.darkGray);
		}
		if (board1[4][10] == 'n') {
			jPanel55.setBackground(Color.darkGray);
		}
		if (board1[0][11] == 'n') {
			jPanel56.setBackground(Color.darkGray);
		}
		if (board1[1][11] == 'n') {
			jPanel57.setBackground(Color.darkGray);
		}
		if (board1[2][11] == 'n') {
			jPanel58.setBackground(Color.darkGray);
		}
		if (board1[3][11] == 'n') {
			jPanel59.setBackground(Color.darkGray);
		}
		if (board1[4][11] == 'n') {
			jPanel60.setBackground(Color.darkGray);
		}
		if (board1[0][12] == 'n') {
			jPanel61.setBackground(Color.darkGray);
		}
		if (board1[1][12] == 'n') {
			jPanel62.setBackground(Color.darkGray);
		}
		if (board1[2][12] == 'n') {
			jPanel63.setBackground(Color.darkGray);
		}
		if (board1[3][12] == 'n') {
			jPanel64.setBackground(Color.darkGray);
		}
		if (board1[4][12] == 'n') {
			jPanel65.setBackground(Color.darkGray);
		}
		if (board1[0][13] == 'n') {
			jPanel66.setBackground(Color.darkGray);
		}
		if (board1[1][13] == 'n') {
			jPanel67.setBackground(Color.darkGray);
		}
		if (board1[2][13] == 'n') {
			jPanel68.setBackground(Color.darkGray);
		}
		if (board1[3][13] == 'n') {
			jPanel69.setBackground(Color.darkGray);
		}
		if (board1[4][13] == 'n') {
			jPanel70.setBackground(Color.darkGray);
		}
		if (board1[0][14] == 'n') {
			jPanel71.setBackground(Color.darkGray);
		}
		if (board1[1][14] == 'n') {
			jPanel72.setBackground(Color.darkGray);
		}
		if (board1[2][14] == 'n') {
			jPanel73.setBackground(Color.darkGray);
		}
		if (board1[3][14] == 'n') {
			jPanel74.setBackground(Color.darkGray);
		}
		if (board1[4][14] == 'n') {
			jPanel75.setBackground(Color.darkGray);
		}

		// ----------------------------------------------
		// makes lightGray
		if (board1[0][0] == 'l') {
			jPanel1.setBackground(Color.lightGray);
		}
		if (board1[1][0] == 'l') {
			jPanel2.setBackground(Color.lightGray);
		}
		if (board1[2][0] == 'l') {
			jPanel3.setBackground(Color.lightGray);
		}
		if (board1[3][0] == 'l') {
			jPanel4.setBackground(Color.lightGray);
		}
		if (board1[4][0] == 'l') {
			jPanel5.setBackground(Color.lightGray);
		}
		if (board1[0][1] == 'l') {
			jPanel6.setBackground(Color.lightGray);
		}
		if (board1[1][1] == 'l') {
			jPanel7.setBackground(Color.lightGray);
		}
		if (board1[2][1] == 'l') {
			jPanel8.setBackground(Color.lightGray);
		}
		if (board1[3][1] == 'l') {
			jPanel9.setBackground(Color.lightGray);
		}
		if (board1[4][1] == 'l') {
			jPanel10.setBackground(Color.lightGray);
		}
		if (board1[0][2] == 'l') {
			jPanel11.setBackground(Color.lightGray);
		}
		if (board1[1][2] == 'l') {
			jPanel12.setBackground(Color.lightGray);
		}
		if (board1[2][2] == 'l') {
			jPanel13.setBackground(Color.lightGray);
		}
		if (board1[3][2] == 'l') {
			jPanel14.setBackground(Color.lightGray);
		}
		if (board1[4][2] == 'l') {
			jPanel15.setBackground(Color.lightGray);
		}
		if (board1[0][3] == 'l') {
			jPanel16.setBackground(Color.lightGray);
		}
		if (board1[1][3] == 'l') {
			jPanel17.setBackground(Color.lightGray);
		}
		if (board1[2][3] == 'l') {
			jPanel18.setBackground(Color.lightGray);
		}
		if (board1[3][3] == 'l') {
			jPanel19.setBackground(Color.lightGray);
		}
		if (board1[4][3] == 'l') {
			jPanel20.setBackground(Color.lightGray);
		}
		if (board1[0][4] == 'l') {
			jPanel21.setBackground(Color.lightGray);
		}
		if (board1[1][4] == 'l') {
			jPanel22.setBackground(Color.lightGray);
		}
		if (board1[2][4] == 'l') {
			jPanel23.setBackground(Color.lightGray);
		}
		if (board1[3][4] == 'l') {
			jPanel24.setBackground(Color.lightGray);
		}
		if (board1[4][4] == 'l') {
			jPanel25.setBackground(Color.lightGray);
		}

		if (board1[0][5] == 'l') {
			jPanel26.setBackground(Color.lightGray);
		}
		if (board1[1][5] == 'l') {
			jPanel27.setBackground(Color.lightGray);
		}
		if (board1[2][5] == 'l') {
			jPanel28.setBackground(Color.lightGray);
		}
		if (board1[3][5] == 'l') {
			jPanel29.setBackground(Color.lightGray);
		}
		if (board1[4][5] == 'l') {
			jPanel30.setBackground(Color.lightGray);
		}
		if (board1[0][6] == 'l') {
			jPanel31.setBackground(Color.lightGray);
		}
		if (board1[1][6] == 'l') {
			jPanel32.setBackground(Color.lightGray);
		}
		if (board1[2][6] == 'l') {
			jPanel33.setBackground(Color.lightGray);
		}
		if (board1[3][6] == 'l') {
			jPanel34.setBackground(Color.lightGray);
		}
		if (board1[4][6] == 'l') {
			jPanel35.setBackground(Color.lightGray);
		}
		if (board1[0][7] == 'l') {
			jPanel36.setBackground(Color.lightGray);
		}
		if (board1[1][7] == 'l') {
			jPanel37.setBackground(Color.lightGray);
		}
		if (board1[2][7] == 'l') {
			jPanel38.setBackground(Color.lightGray);
		}
		if (board1[3][7] == 'l') {
			jPanel39.setBackground(Color.lightGray);
		}
		if (board1[4][7] == 'l') {
			jPanel40.setBackground(Color.lightGray);
		}
		if (board1[0][8] == 'l') {
			jPanel41.setBackground(Color.lightGray);
		}
		if (board1[1][8] == 'l') {
			jPanel42.setBackground(Color.lightGray);
		}
		if (board1[2][8] == 'l') {
			jPanel43.setBackground(Color.lightGray);
		}
		if (board1[3][8] == 'l') {
			jPanel44.setBackground(Color.lightGray);
		}
		if (board1[4][8] == 'l') {
			jPanel45.setBackground(Color.lightGray);
		}
		if (board1[0][9] == 'l') {
			jPanel46.setBackground(Color.lightGray);
		}
		if (board1[1][9] == 'l') {
			jPanel47.setBackground(Color.lightGray);
		}
		if (board1[2][9] == 'l') {
			jPanel48.setBackground(Color.lightGray);
		}
		if (board1[3][9] == 'l') {
			jPanel49.setBackground(Color.lightGray);
		}
		if (board1[4][9] == 'l') {
			jPanel50.setBackground(Color.lightGray);
		}

		if (board1[0][10] == 'l') {
			jPanel51.setBackground(Color.lightGray);
		}
		if (board1[1][10] == 'l') {
			jPanel52.setBackground(Color.lightGray);
		}
		if (board1[2][10] == 'l') {
			jPanel53.setBackground(Color.lightGray);
		}
		if (board1[3][10] == 'l') {
			jPanel54.setBackground(Color.lightGray);
		}
		if (board1[4][10] == 'l') {
			jPanel55.setBackground(Color.lightGray);
		}
		if (board1[0][11] == 'l') {
			jPanel56.setBackground(Color.lightGray);
		}
		if (board1[1][11] == 'l') {
			jPanel57.setBackground(Color.lightGray);
		}
		if (board1[2][11] == 'l') {
			jPanel58.setBackground(Color.lightGray);
		}
		if (board1[3][11] == 'l') {
			jPanel59.setBackground(Color.lightGray);
		}
		if (board1[4][11] == 'l') {
			jPanel60.setBackground(Color.lightGray);
		}
		if (board1[0][12] == 'l') {
			jPanel61.setBackground(Color.lightGray);
		}
		if (board1[1][12] == 'l') {
			jPanel62.setBackground(Color.lightGray);
		}
		if (board1[2][12] == 'l') {
			jPanel63.setBackground(Color.lightGray);
		}
		if (board1[3][12] == 'l') {
			jPanel64.setBackground(Color.lightGray);
		}
		if (board1[4][12] == 'l') {
			jPanel65.setBackground(Color.lightGray);
		}
		if (board1[0][13] == 'l') {
			jPanel66.setBackground(Color.lightGray);
		}
		if (board1[1][13] == 'l') {
			jPanel67.setBackground(Color.lightGray);
		}
		if (board1[2][13] == 'l') {
			jPanel68.setBackground(Color.lightGray);
		}
		if (board1[3][13] == 'l') {
			jPanel69.setBackground(Color.lightGray);
		}
		if (board1[4][13] == 'l') {
			jPanel70.setBackground(Color.lightGray);
		}
		if (board1[0][14] == 'l') {
			jPanel71.setBackground(Color.lightGray);
		}
		if (board1[1][14] == 'l') {
			jPanel72.setBackground(Color.lightGray);
		}
		if (board1[2][14] == 'l') {
			jPanel73.setBackground(Color.lightGray);
		}
		if (board1[3][14] == 'l') {
			jPanel74.setBackground(Color.lightGray);
		}
		if (board1[4][14] == 'l') {
			jPanel75.setBackground(Color.lightGray);
		}

	</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rDnxJXk6EeSVm5Faw75mfQ" name="main" specification="_q_zoIHk6EeSVm5Faw75mfQ">
        <ownedParameter xmi:id="_rDnxJnk6EeSVm5Faw75mfQ" name="args">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rDnxJ3k6EeSVm5Faw75mfQ" value="*"/>
        </ownedParameter>
        <language>java</language>
        <body>try {
			for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager
					.getInstalledLookAndFeels()) {
				if (&quot;Nimbus&quot;.equals(info.getName())) {
					javax.swing.UIManager.setLookAndFeel(info.getClassName());
					break;
				}
			}
		} catch (ClassNotFoundException ex) {
			java.util.logging.Logger.getLogger(UI.class.getName()).log(
					java.util.logging.Level.SEVERE, null, ex);
		} catch (InstantiationException ex) {
			java.util.logging.Logger.getLogger(UI.class.getName()).log(
					java.util.logging.Level.SEVERE, null, ex);
		} catch (IllegalAccessException ex) {
			java.util.logging.Logger.getLogger(UI.class.getName()).log(
					java.util.logging.Level.SEVERE, null, ex);
		} catch (javax.swing.UnsupportedLookAndFeelException ex) {
			java.util.logging.Logger.getLogger(UI.class.getName()).log(
					java.util.logging.Level.SEVERE, null, ex);
		}
		// &lt;/editor-fold>
		// &lt;/editor-fold>

		/* Create and display the form */
		java.awt.EventQueue.invokeLater(new Runnable() {
			public void run() {
				new UI().setVisible(true);
			}
		});
	</body>
      </ownedBehavior>
      <ownedOperation xmi:id="_q_uIkXk6EeSVm5Faw75mfQ" name="update" method="_rDlU4Hk6EeSVm5Faw75mfQ">
        <ownedParameter xmi:id="_q_uIknk6EeSVm5Faw75mfQ" name="obs" type="_qV2sMHk6EeSVm5Faw75mfQ"/>
        <ownedParameter xmi:id="_q_uvoHk6EeSVm5Faw75mfQ" name="obj" type="_qXjVUXk6EeSVm5Faw75mfQ"/>
      </ownedOperation>
      <ownedOperation xmi:id="_q_uvoXk6EeSVm5Faw75mfQ" name="UI" method="_rDl78nk6EeSVm5Faw75mfQ">
        <eAnnotations xmi:id="_q_uvonk6EeSVm5Faw75mfQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
          <details xmi:id="_q_vWsHk6EeSVm5Faw75mfQ" key="create"/>
        </eAnnotations>
        <ownedComment xmi:id="_rDspoXk6EeSVm5Faw75mfQ">
          <body>Creates new form UI In the process of making the music work</body>
        </ownedComment>
        <ownedParameter xmi:id="_q_vWsXk6EeSVm5Faw75mfQ" type="_q_rsUHk6EeSVm5Faw75mfQ" direction="return"/>
      </ownedOperation>
      <ownedOperation xmi:id="_q_vWsnk6EeSVm5Faw75mfQ" name="initComponents" visibility="private" method="_rDl79Hk6EeSVm5Faw75mfQ"/>
      <ownedOperation xmi:id="_q_v9w3k6EeSVm5Faw75mfQ" name="exitButtonActionPerformed" visibility="private" method="_rDmjAHk6EeSVm5Faw75mfQ">
        <ownedComment xmi:id="_rDspo3k6EeSVm5Faw75mfQ">
          <body>This is the event if the button (exit button) is called. It will close
	 * the game
	 *
	 * @param evt
	 *            If the button is clicked</body>
        </ownedComment>
        <ownedParameter xmi:id="_q_wk0Hk6EeSVm5Faw75mfQ" name="evt" type="_qXH3gHk6EeSVm5Faw75mfQ"/>
      </ownedOperation>
      <ownedOperation xmi:id="_q_wk0Xk6EeSVm5Faw75mfQ" name="testButtonActionPerformed" visibility="private" method="_rDnKEXk6EeSVm5Faw75mfQ">
        <ownedParameter xmi:id="_q_wk0nk6EeSVm5Faw75mfQ" name="evt" type="_qXH3gHk6EeSVm5Faw75mfQ"/>
      </ownedOperation>
      <ownedOperation xmi:id="_q_xL4Hk6EeSVm5Faw75mfQ" name="leftPressed" visibility="private" method="_rDnKE3k6EeSVm5Faw75mfQ">
        <ownedParameter xmi:id="_q_xL4Xk6EeSVm5Faw75mfQ" name="evt" type="_qWXpkXk6EeSVm5Faw75mfQ"/>
      </ownedOperation>
      <ownedOperation xmi:id="_q_yaAHk6EeSVm5Faw75mfQ" name="refresh" visibility="private" method="_rDnKFXk6EeSVm5Faw75mfQ"/>
      <ownedOperation xmi:id="_q_yaAXk6EeSVm5Faw75mfQ" name="newGameButtonActionPerformed" visibility="private" method="_rDnxIHk6EeSVm5Faw75mfQ">
        <ownedParameter xmi:id="_q_yaAnk6EeSVm5Faw75mfQ" name="evt" type="_qXH3gHk6EeSVm5Faw75mfQ"/>
      </ownedOperation>
      <ownedOperation xmi:id="_q_zBEHk6EeSVm5Faw75mfQ" name="muteButtonActionPerformed" visibility="private" method="_rDnxInk6EeSVm5Faw75mfQ">
        <ownedParameter xmi:id="_q_zBEXk6EeSVm5Faw75mfQ" name="evt" type="_qXH3gHk6EeSVm5Faw75mfQ"/>
      </ownedOperation>
      <ownedOperation xmi:id="_q_zBEnk6EeSVm5Faw75mfQ" name="printboard" visibility="private" method="_rDnxJHk6EeSVm5Faw75mfQ"/>
      <ownedOperation xmi:id="_q_zoIHk6EeSVm5Faw75mfQ" name="main" isStatic="true" method="_rDnxJXk6EeSVm5Faw75mfQ">
        <ownedParameter xmi:id="_q_zoIXk6EeSVm5Faw75mfQ" name="args">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_q_0PMXk6EeSVm5Faw75mfQ" value="*"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_rD0lcHk6EeSVm5Faw75mfQ" name="" memberEnd="_rD0lcXk6EeSVm5Faw75mfQ _rC1uAXk6EeSVm5Faw75mfQ">
      <ownedEnd xmi:id="_rD0lcXk6EeSVm5Faw75mfQ" name="" type="_q_rsUHk6EeSVm5Faw75mfQ" association="_rD0lcHk6EeSVm5Faw75mfQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_rD1zkHk6EeSVm5Faw75mfQ" name="" memberEnd="_rD1zkXk6EeSVm5Faw75mfQ _rC1uA3k6EeSVm5Faw75mfQ">
      <ownedEnd xmi:id="_rD1zkXk6EeSVm5Faw75mfQ" name="" type="_q_rsUHk6EeSVm5Faw75mfQ" association="_rD1zkHk6EeSVm5Faw75mfQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_rD2aoHk6EeSVm5Faw75mfQ" name="" memberEnd="_rD2aoXk6EeSVm5Faw75mfQ _rC2VEXk6EeSVm5Faw75mfQ">
      <ownedEnd xmi:id="_rD2aoXk6EeSVm5Faw75mfQ" name="" type="_q_rsUHk6EeSVm5Faw75mfQ" association="_rD2aoHk6EeSVm5Faw75mfQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_rD3BsHk6EeSVm5Faw75mfQ" name="" memberEnd="_rD3BsXk6EeSVm5Faw75mfQ _rC28IXk6EeSVm5Faw75mfQ">
      <ownedEnd xmi:id="_rD3BsXk6EeSVm5Faw75mfQ" name="" type="_q_rsUHk6EeSVm5Faw75mfQ" association="_rD3BsHk6EeSVm5Faw75mfQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_rD3owHk6EeSVm5Faw75mfQ" name="" memberEnd="_rD3owXk6EeSVm5Faw75mfQ _rC3jMXk6EeSVm5Faw75mfQ">
      <ownedEnd xmi:id="_rD3owXk6EeSVm5Faw75mfQ" name="" type="_q_rsUHk6EeSVm5Faw75mfQ" association="_rD3owHk6EeSVm5Faw75mfQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_rD4P0Hk6EeSVm5Faw75mfQ" name="" memberEnd="_rD4P0Xk6EeSVm5Faw75mfQ _rC4KQHk6EeSVm5Faw75mfQ">
      <ownedEnd xmi:id="_rD4P0Xk6EeSVm5Faw75mfQ" name="" type="_q_rsUHk6EeSVm5Faw75mfQ" association="_rD4P0Hk6EeSVm5Faw75mfQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_rD424Hk6EeSVm5Faw75mfQ" name="" memberEnd="_rD424Xk6EeSVm5Faw75mfQ _rC4KQnk6EeSVm5Faw75mfQ">
      <ownedEnd xmi:id="_rD424Xk6EeSVm5Faw75mfQ" name="" type="_q_rsUHk6EeSVm5Faw75mfQ" association="_rD424Hk6EeSVm5Faw75mfQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_rD5d8Xk6EeSVm5Faw75mfQ" name="" memberEnd="_rD5d8nk6EeSVm5Faw75mfQ _rC4xUXk6EeSVm5Faw75mfQ">
      <ownedEnd xmi:id="_rD5d8nk6EeSVm5Faw75mfQ" name="" type="_q_rsUHk6EeSVm5Faw75mfQ" association="_rD5d8Xk6EeSVm5Faw75mfQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_rD6FAXk6EeSVm5Faw75mfQ" name="" memberEnd="_rD6FAnk6EeSVm5Faw75mfQ _rC4xU3k6EeSVm5Faw75mfQ">
      <ownedEnd xmi:id="_rD6FAnk6EeSVm5Faw75mfQ" name="" type="_q_rsUHk6EeSVm5Faw75mfQ" association="_rD6FAXk6EeSVm5Faw75mfQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_rD6sEXk6EeSVm5Faw75mfQ" name="" memberEnd="_rD6sEnk6EeSVm5Faw75mfQ _rC5YYXk6EeSVm5Faw75mfQ">
      <ownedEnd xmi:id="_rD6sEnk6EeSVm5Faw75mfQ" name="" type="_q_rsUHk6EeSVm5Faw75mfQ" association="_rD6sEXk6EeSVm5Faw75mfQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_rD7TIXk6EeSVm5Faw75mfQ" name="" memberEnd="_rD7TInk6EeSVm5Faw75mfQ _rC5YY3k6EeSVm5Faw75mfQ">
      <ownedEnd xmi:id="_rD7TInk6EeSVm5Faw75mfQ" name="" type="_q_rsUHk6EeSVm5Faw75mfQ" association="_rD7TIXk6EeSVm5Faw75mfQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_rD76MXk6EeSVm5Faw75mfQ" name="" memberEnd="_rD76Mnk6EeSVm5Faw75mfQ _rC5_cXk6EeSVm5Faw75mfQ">
      <ownedEnd xmi:id="_rD76Mnk6EeSVm5Faw75mfQ" name="" type="_q_rsUHk6EeSVm5Faw75mfQ" association="_rD76MXk6EeSVm5Faw75mfQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_rD8hQHk6EeSVm5Faw75mfQ" name="" memberEnd="_rD8hQXk6EeSVm5Faw75mfQ _rC6mgHk6EeSVm5Faw75mfQ">
      <ownedEnd xmi:id="_rD8hQXk6EeSVm5Faw75mfQ" name="" type="_q_rsUHk6EeSVm5Faw75mfQ" association="_rD8hQHk6EeSVm5Faw75mfQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_rD8hQ3k6EeSVm5Faw75mfQ" name="" memberEnd="_rD8hRHk6EeSVm5Faw75mfQ _rC7NkXk6EeSVm5Faw75mfQ">
      <ownedEnd xmi:id="_rD8hRHk6EeSVm5Faw75mfQ" name="" type="_q_rsUHk6EeSVm5Faw75mfQ" association="_rD8hQ3k6EeSVm5Faw75mfQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_rD9IUXk6EeSVm5Faw75mfQ" name="" memberEnd="_rD9IUnk6EeSVm5Faw75mfQ _rC7Nk3k6EeSVm5Faw75mfQ">
      <ownedEnd xmi:id="_rD9IUnk6EeSVm5Faw75mfQ" name="" type="_q_rsUHk6EeSVm5Faw75mfQ" association="_rD9IUXk6EeSVm5Faw75mfQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_rD9vYHk6EeSVm5Faw75mfQ" name="" memberEnd="_rD9vYXk6EeSVm5Faw75mfQ _rC70oXk6EeSVm5Faw75mfQ">
      <ownedEnd xmi:id="_rD9vYXk6EeSVm5Faw75mfQ" name="" type="_q_rsUHk6EeSVm5Faw75mfQ" association="_rD9vYHk6EeSVm5Faw75mfQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_rD9vY3k6EeSVm5Faw75mfQ" name="" memberEnd="_rD9vZHk6EeSVm5Faw75mfQ _rC70o3k6EeSVm5Faw75mfQ">
      <ownedEnd xmi:id="_rD9vZHk6EeSVm5Faw75mfQ" name="" type="_q_rsUHk6EeSVm5Faw75mfQ" association="_rD9vY3k6EeSVm5Faw75mfQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_rD-WcXk6EeSVm5Faw75mfQ" name="" memberEnd="_rD-Wcnk6EeSVm5Faw75mfQ _rC8bsXk6EeSVm5Faw75mfQ">
      <ownedEnd xmi:id="_rD-Wcnk6EeSVm5Faw75mfQ" name="" type="_q_rsUHk6EeSVm5Faw75mfQ" association="_rD-WcXk6EeSVm5Faw75mfQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_rD_kkXk6EeSVm5Faw75mfQ" name="" memberEnd="_rD_kknk6EeSVm5Faw75mfQ _rC8bs3k6EeSVm5Faw75mfQ">
      <ownedEnd xmi:id="_rD_kknk6EeSVm5Faw75mfQ" name="" type="_q_rsUHk6EeSVm5Faw75mfQ" association="_rD_kkXk6EeSVm5Faw75mfQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_rEALoHk6EeSVm5Faw75mfQ" name="" memberEnd="_rEALoXk6EeSVm5Faw75mfQ _rC9CwXk6EeSVm5Faw75mfQ">
      <ownedEnd xmi:id="_rEALoXk6EeSVm5Faw75mfQ" name="" type="_q_rsUHk6EeSVm5Faw75mfQ" association="_rEALoHk6EeSVm5Faw75mfQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_rEALo3k6EeSVm5Faw75mfQ" name="" memberEnd="_rEALpHk6EeSVm5Faw75mfQ _rC9Cw3k6EeSVm5Faw75mfQ">
      <ownedEnd xmi:id="_rEALpHk6EeSVm5Faw75mfQ" name="" type="_q_rsUHk6EeSVm5Faw75mfQ" association="_rEALo3k6EeSVm5Faw75mfQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_rEAysXk6EeSVm5Faw75mfQ" name="" memberEnd="_rEAysnk6EeSVm5Faw75mfQ _rC9p0Hk6EeSVm5Faw75mfQ">
      <ownedEnd xmi:id="_rEAysnk6EeSVm5Faw75mfQ" name="" type="_q_rsUHk6EeSVm5Faw75mfQ" association="_rEAysXk6EeSVm5Faw75mfQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_rEAytHk6EeSVm5Faw75mfQ" name="" memberEnd="_rEAytXk6EeSVm5Faw75mfQ _rC9p0nk6EeSVm5Faw75mfQ">
      <ownedEnd xmi:id="_rEAytXk6EeSVm5Faw75mfQ" name="" type="_q_rsUHk6EeSVm5Faw75mfQ" association="_rEAytHk6EeSVm5Faw75mfQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_rEBZwXk6EeSVm5Faw75mfQ" name="" memberEnd="_rEBZwnk6EeSVm5Faw75mfQ _rC9p1Hk6EeSVm5Faw75mfQ">
      <ownedEnd xmi:id="_rEBZwnk6EeSVm5Faw75mfQ" name="" type="_q_rsUHk6EeSVm5Faw75mfQ" association="_rEBZwXk6EeSVm5Faw75mfQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_rECA0Xk6EeSVm5Faw75mfQ" name="" memberEnd="_rECA0nk6EeSVm5Faw75mfQ _rC-Q4Xk6EeSVm5Faw75mfQ">
      <ownedEnd xmi:id="_rECA0nk6EeSVm5Faw75mfQ" name="" type="_q_rsUHk6EeSVm5Faw75mfQ" association="_rECA0Xk6EeSVm5Faw75mfQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_rECA1Hk6EeSVm5Faw75mfQ" name="" memberEnd="_rECA1Xk6EeSVm5Faw75mfQ _rC-Q43k6EeSVm5Faw75mfQ">
      <ownedEnd xmi:id="_rECA1Xk6EeSVm5Faw75mfQ" name="" type="_q_rsUHk6EeSVm5Faw75mfQ" association="_rECA1Hk6EeSVm5Faw75mfQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_rECn4Xk6EeSVm5Faw75mfQ" name="" memberEnd="_rECn4nk6EeSVm5Faw75mfQ _rC-38Xk6EeSVm5Faw75mfQ">
      <ownedEnd xmi:id="_rECn4nk6EeSVm5Faw75mfQ" name="" type="_q_rsUHk6EeSVm5Faw75mfQ" association="_rECn4Xk6EeSVm5Faw75mfQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_rEDO8Xk6EeSVm5Faw75mfQ" name="" memberEnd="_rEDO8nk6EeSVm5Faw75mfQ _rC-383k6EeSVm5Faw75mfQ">
      <ownedEnd xmi:id="_rEDO8nk6EeSVm5Faw75mfQ" name="" type="_q_rsUHk6EeSVm5Faw75mfQ" association="_rEDO8Xk6EeSVm5Faw75mfQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_rED2AXk6EeSVm5Faw75mfQ" name="" memberEnd="_rED2Ank6EeSVm5Faw75mfQ _rC_fAXk6EeSVm5Faw75mfQ">
      <ownedEnd xmi:id="_rED2Ank6EeSVm5Faw75mfQ" name="" type="_q_rsUHk6EeSVm5Faw75mfQ" association="_rED2AXk6EeSVm5Faw75mfQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_rEEdEXk6EeSVm5Faw75mfQ" name="" memberEnd="_rEEdEnk6EeSVm5Faw75mfQ _rC_fA3k6EeSVm5Faw75mfQ">
      <ownedEnd xmi:id="_rEEdEnk6EeSVm5Faw75mfQ" name="" type="_q_rsUHk6EeSVm5Faw75mfQ" association="_rEEdEXk6EeSVm5Faw75mfQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_rEFEIXk6EeSVm5Faw75mfQ" name="" memberEnd="_rEFEInk6EeSVm5Faw75mfQ _rDAGEXk6EeSVm5Faw75mfQ">
      <ownedEnd xmi:id="_rEFEInk6EeSVm5Faw75mfQ" name="" type="_q_rsUHk6EeSVm5Faw75mfQ" association="_rEFEIXk6EeSVm5Faw75mfQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_rEFrMXk6EeSVm5Faw75mfQ" name="" memberEnd="_rEFrMnk6EeSVm5Faw75mfQ _rDAtIXk6EeSVm5Faw75mfQ">
      <ownedEnd xmi:id="_rEFrMnk6EeSVm5Faw75mfQ" name="" type="_q_rsUHk6EeSVm5Faw75mfQ" association="_rEFrMXk6EeSVm5Faw75mfQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_rEGSQXk6EeSVm5Faw75mfQ" name="" memberEnd="_rEGSQnk6EeSVm5Faw75mfQ _rDBUMHk6EeSVm5Faw75mfQ">
      <ownedEnd xmi:id="_rEGSQnk6EeSVm5Faw75mfQ" name="" type="_q_rsUHk6EeSVm5Faw75mfQ" association="_rEGSQXk6EeSVm5Faw75mfQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_rEG5UXk6EeSVm5Faw75mfQ" name="" memberEnd="_rEG5Unk6EeSVm5Faw75mfQ _rDB7QHk6EeSVm5Faw75mfQ">
      <ownedEnd xmi:id="_rEG5Unk6EeSVm5Faw75mfQ" name="" type="_q_rsUHk6EeSVm5Faw75mfQ" association="_rEG5UXk6EeSVm5Faw75mfQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_rEHgYXk6EeSVm5Faw75mfQ" name="" memberEnd="_rEHgYnk6EeSVm5Faw75mfQ _rDCiUHk6EeSVm5Faw75mfQ">
      <ownedEnd xmi:id="_rEHgYnk6EeSVm5Faw75mfQ" name="" type="_q_rsUHk6EeSVm5Faw75mfQ" association="_rEHgYXk6EeSVm5Faw75mfQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_rEKjsHk6EeSVm5Faw75mfQ" name="" memberEnd="_rEKjsXk6EeSVm5Faw75mfQ _rDDJYHk6EeSVm5Faw75mfQ">
      <ownedEnd xmi:id="_rEKjsXk6EeSVm5Faw75mfQ" name="" type="_q_rsUHk6EeSVm5Faw75mfQ" association="_rEKjsHk6EeSVm5Faw75mfQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_rELKwXk6EeSVm5Faw75mfQ" name="" memberEnd="_rELKwnk6EeSVm5Faw75mfQ _rDDwcHk6EeSVm5Faw75mfQ">
      <ownedEnd xmi:id="_rELKwnk6EeSVm5Faw75mfQ" name="" type="_q_rsUHk6EeSVm5Faw75mfQ" association="_rELKwXk6EeSVm5Faw75mfQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_rELx0Xk6EeSVm5Faw75mfQ" name="" memberEnd="_rELx0nk6EeSVm5Faw75mfQ _rDEXgHk6EeSVm5Faw75mfQ">
      <ownedEnd xmi:id="_rELx0nk6EeSVm5Faw75mfQ" name="" type="_q_rsUHk6EeSVm5Faw75mfQ" association="_rELx0Xk6EeSVm5Faw75mfQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_rEM_8Hk6EeSVm5Faw75mfQ" name="" memberEnd="_rEM_8Xk6EeSVm5Faw75mfQ _rDE-kHk6EeSVm5Faw75mfQ">
      <ownedEnd xmi:id="_rEM_8Xk6EeSVm5Faw75mfQ" name="" type="_q_rsUHk6EeSVm5Faw75mfQ" association="_rEM_8Hk6EeSVm5Faw75mfQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_rENnAXk6EeSVm5Faw75mfQ" name="" memberEnd="_rENnAnk6EeSVm5Faw75mfQ _rDE-knk6EeSVm5Faw75mfQ">
      <ownedEnd xmi:id="_rENnAnk6EeSVm5Faw75mfQ" name="" type="_q_rsUHk6EeSVm5Faw75mfQ" association="_rENnAXk6EeSVm5Faw75mfQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_rEOOEXk6EeSVm5Faw75mfQ" name="" memberEnd="_rEOOEnk6EeSVm5Faw75mfQ _rDFloXk6EeSVm5Faw75mfQ">
      <ownedEnd xmi:id="_rEOOEnk6EeSVm5Faw75mfQ" name="" type="_q_rsUHk6EeSVm5Faw75mfQ" association="_rEOOEXk6EeSVm5Faw75mfQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_rEO1IXk6EeSVm5Faw75mfQ" name="" memberEnd="_rEO1Ink6EeSVm5Faw75mfQ _rDGMsHk6EeSVm5Faw75mfQ">
      <ownedEnd xmi:id="_rEO1Ink6EeSVm5Faw75mfQ" name="" type="_q_rsUHk6EeSVm5Faw75mfQ" association="_rEO1IXk6EeSVm5Faw75mfQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_rEQDQHk6EeSVm5Faw75mfQ" name="" memberEnd="_rEQDQXk6EeSVm5Faw75mfQ _rDGMsnk6EeSVm5Faw75mfQ">
      <ownedEnd xmi:id="_rEQDQXk6EeSVm5Faw75mfQ" name="" type="_q_rsUHk6EeSVm5Faw75mfQ" association="_rEQDQHk6EeSVm5Faw75mfQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_rEQqUXk6EeSVm5Faw75mfQ" name="" memberEnd="_rEQqUnk6EeSVm5Faw75mfQ _rDGMtHk6EeSVm5Faw75mfQ">
      <ownedEnd xmi:id="_rEQqUnk6EeSVm5Faw75mfQ" name="" type="_q_rsUHk6EeSVm5Faw75mfQ" association="_rEQqUXk6EeSVm5Faw75mfQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_rERRYHk6EeSVm5Faw75mfQ" name="" memberEnd="_rERRYXk6EeSVm5Faw75mfQ _rDGzwXk6EeSVm5Faw75mfQ">
      <ownedEnd xmi:id="_rERRYXk6EeSVm5Faw75mfQ" name="" type="_q_rsUHk6EeSVm5Faw75mfQ" association="_rERRYHk6EeSVm5Faw75mfQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_rERRY3k6EeSVm5Faw75mfQ" name="" memberEnd="_rERRZHk6EeSVm5Faw75mfQ _rDGzw3k6EeSVm5Faw75mfQ">
      <ownedEnd xmi:id="_rERRZHk6EeSVm5Faw75mfQ" name="" type="_q_rsUHk6EeSVm5Faw75mfQ" association="_rERRY3k6EeSVm5Faw75mfQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_rESfgHk6EeSVm5Faw75mfQ" name="" memberEnd="_rESfgXk6EeSVm5Faw75mfQ _rDHa0Xk6EeSVm5Faw75mfQ">
      <ownedEnd xmi:id="_rESfgXk6EeSVm5Faw75mfQ" name="" type="_q_rsUHk6EeSVm5Faw75mfQ" association="_rESfgHk6EeSVm5Faw75mfQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_rESfg3k6EeSVm5Faw75mfQ" name="" memberEnd="_rESfhHk6EeSVm5Faw75mfQ _rDHa03k6EeSVm5Faw75mfQ">
      <ownedEnd xmi:id="_rESfhHk6EeSVm5Faw75mfQ" name="" type="_q_rsUHk6EeSVm5Faw75mfQ" association="_rESfg3k6EeSVm5Faw75mfQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_rETGkXk6EeSVm5Faw75mfQ" name="" memberEnd="_rETGknk6EeSVm5Faw75mfQ _rDIB4Xk6EeSVm5Faw75mfQ">
      <ownedEnd xmi:id="_rETGknk6EeSVm5Faw75mfQ" name="" type="_q_rsUHk6EeSVm5Faw75mfQ" association="_rETGkXk6EeSVm5Faw75mfQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_rEU7wHk6EeSVm5Faw75mfQ" name="" memberEnd="_rEU7wXk6EeSVm5Faw75mfQ _rDIB43k6EeSVm5Faw75mfQ">
      <ownedEnd xmi:id="_rEU7wXk6EeSVm5Faw75mfQ" name="" type="_q_rsUHk6EeSVm5Faw75mfQ" association="_rEU7wHk6EeSVm5Faw75mfQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_rEVi0Xk6EeSVm5Faw75mfQ" name="" memberEnd="_rEVi0nk6EeSVm5Faw75mfQ _rDIo8Xk6EeSVm5Faw75mfQ">
      <ownedEnd xmi:id="_rEVi0nk6EeSVm5Faw75mfQ" name="" type="_q_rsUHk6EeSVm5Faw75mfQ" association="_rEVi0Xk6EeSVm5Faw75mfQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_rEWJ4Xk6EeSVm5Faw75mfQ" name="" memberEnd="_rEWJ4nk6EeSVm5Faw75mfQ _rDJQAHk6EeSVm5Faw75mfQ">
      <ownedEnd xmi:id="_rEWJ4nk6EeSVm5Faw75mfQ" name="" type="_q_rsUHk6EeSVm5Faw75mfQ" association="_rEWJ4Xk6EeSVm5Faw75mfQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_rEXYAHk6EeSVm5Faw75mfQ" name="" memberEnd="_rEXYAXk6EeSVm5Faw75mfQ _rDJQAnk6EeSVm5Faw75mfQ">
      <ownedEnd xmi:id="_rEXYAXk6EeSVm5Faw75mfQ" name="" type="_q_rsUHk6EeSVm5Faw75mfQ" association="_rEXYAHk6EeSVm5Faw75mfQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_rEX_EXk6EeSVm5Faw75mfQ" name="" memberEnd="_rEX_Enk6EeSVm5Faw75mfQ _rDJ3EHk6EeSVm5Faw75mfQ">
      <ownedEnd xmi:id="_rEX_Enk6EeSVm5Faw75mfQ" name="" type="_q_rsUHk6EeSVm5Faw75mfQ" association="_rEX_EXk6EeSVm5Faw75mfQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_rEYmIXk6EeSVm5Faw75mfQ" name="" memberEnd="_rEYmInk6EeSVm5Faw75mfQ _rDJ3Enk6EeSVm5Faw75mfQ">
      <ownedEnd xmi:id="_rEYmInk6EeSVm5Faw75mfQ" name="" type="_q_rsUHk6EeSVm5Faw75mfQ" association="_rEYmIXk6EeSVm5Faw75mfQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_rEZ0QHk6EeSVm5Faw75mfQ" name="" memberEnd="_rEZ0QXk6EeSVm5Faw75mfQ _rDJ3FHk6EeSVm5Faw75mfQ">
      <ownedEnd xmi:id="_rEZ0QXk6EeSVm5Faw75mfQ" name="" type="_q_rsUHk6EeSVm5Faw75mfQ" association="_rEZ0QHk6EeSVm5Faw75mfQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_rEabUXk6EeSVm5Faw75mfQ" name="" memberEnd="_rEabUnk6EeSVm5Faw75mfQ _rDKeIXk6EeSVm5Faw75mfQ">
      <ownedEnd xmi:id="_rEabUnk6EeSVm5Faw75mfQ" name="" type="_q_rsUHk6EeSVm5Faw75mfQ" association="_rEabUXk6EeSVm5Faw75mfQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_rEbCYXk6EeSVm5Faw75mfQ" name="" memberEnd="_rEbCYnk6EeSVm5Faw75mfQ _rDKeI3k6EeSVm5Faw75mfQ">
      <ownedEnd xmi:id="_rEbCYnk6EeSVm5Faw75mfQ" name="" type="_q_rsUHk6EeSVm5Faw75mfQ" association="_rEbCYXk6EeSVm5Faw75mfQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_rEcQgXk6EeSVm5Faw75mfQ" name="" memberEnd="_rEcQgnk6EeSVm5Faw75mfQ _rDLFMXk6EeSVm5Faw75mfQ">
      <ownedEnd xmi:id="_rEcQgnk6EeSVm5Faw75mfQ" name="" type="_q_rsUHk6EeSVm5Faw75mfQ" association="_rEcQgXk6EeSVm5Faw75mfQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_rEc3kXk6EeSVm5Faw75mfQ" name="" memberEnd="_rEc3knk6EeSVm5Faw75mfQ _rDLsQHk6EeSVm5Faw75mfQ">
      <ownedEnd xmi:id="_rEc3knk6EeSVm5Faw75mfQ" name="" type="_q_rsUHk6EeSVm5Faw75mfQ" association="_rEc3kXk6EeSVm5Faw75mfQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_rEdeoXk6EeSVm5Faw75mfQ" name="" memberEnd="_rEdeonk6EeSVm5Faw75mfQ _rDLsQnk6EeSVm5Faw75mfQ">
      <ownedEnd xmi:id="_rEdeonk6EeSVm5Faw75mfQ" name="" type="_q_rsUHk6EeSVm5Faw75mfQ" association="_rEdeoXk6EeSVm5Faw75mfQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_rEeswHk6EeSVm5Faw75mfQ" name="" memberEnd="_rEeswXk6EeSVm5Faw75mfQ _rDMTUXk6EeSVm5Faw75mfQ">
      <ownedEnd xmi:id="_rEeswXk6EeSVm5Faw75mfQ" name="" type="_q_rsUHk6EeSVm5Faw75mfQ" association="_rEeswHk6EeSVm5Faw75mfQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_rEfT0Xk6EeSVm5Faw75mfQ" name="" memberEnd="_rEfT0nk6EeSVm5Faw75mfQ _rDM6YXk6EeSVm5Faw75mfQ">
      <ownedEnd xmi:id="_rEfT0nk6EeSVm5Faw75mfQ" name="" type="_q_rsUHk6EeSVm5Faw75mfQ" association="_rEfT0Xk6EeSVm5Faw75mfQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_rEf64Xk6EeSVm5Faw75mfQ" name="" memberEnd="_rEf64nk6EeSVm5Faw75mfQ _rDNhcXk6EeSVm5Faw75mfQ">
      <ownedEnd xmi:id="_rEf64nk6EeSVm5Faw75mfQ" name="" type="_q_rsUHk6EeSVm5Faw75mfQ" association="_rEf64Xk6EeSVm5Faw75mfQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_rEgh8Xk6EeSVm5Faw75mfQ" name="" memberEnd="_rEgh8nk6EeSVm5Faw75mfQ _rDNhc3k6EeSVm5Faw75mfQ">
      <ownedEnd xmi:id="_rEgh8nk6EeSVm5Faw75mfQ" name="" type="_q_rsUHk6EeSVm5Faw75mfQ" association="_rEgh8Xk6EeSVm5Faw75mfQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_rEi-MHk6EeSVm5Faw75mfQ" name="" memberEnd="_rEi-MXk6EeSVm5Faw75mfQ _rDOIgHk6EeSVm5Faw75mfQ">
      <ownedEnd xmi:id="_rEi-MXk6EeSVm5Faw75mfQ" name="" type="_q_rsUHk6EeSVm5Faw75mfQ" association="_rEi-MHk6EeSVm5Faw75mfQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_rEjlQXk6EeSVm5Faw75mfQ" name="" memberEnd="_rEjlQnk6EeSVm5Faw75mfQ _rDOIgnk6EeSVm5Faw75mfQ">
      <ownedEnd xmi:id="_rEjlQnk6EeSVm5Faw75mfQ" name="" type="_q_rsUHk6EeSVm5Faw75mfQ" association="_rEjlQXk6EeSVm5Faw75mfQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_rEkMUXk6EeSVm5Faw75mfQ" name="" memberEnd="_rEkMUnk6EeSVm5Faw75mfQ _rDOvkHk6EeSVm5Faw75mfQ">
      <ownedEnd xmi:id="_rEkMUnk6EeSVm5Faw75mfQ" name="" type="_q_rsUHk6EeSVm5Faw75mfQ" association="_rEkMUXk6EeSVm5Faw75mfQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_rEkzYXk6EeSVm5Faw75mfQ" name="" memberEnd="_rEkzYnk6EeSVm5Faw75mfQ _rDOvknk6EeSVm5Faw75mfQ">
      <ownedEnd xmi:id="_rEkzYnk6EeSVm5Faw75mfQ" name="" type="_q_rsUHk6EeSVm5Faw75mfQ" association="_rEkzYXk6EeSVm5Faw75mfQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_rElacXk6EeSVm5Faw75mfQ" name="" memberEnd="_rElacnk6EeSVm5Faw75mfQ _rDPWoXk6EeSVm5Faw75mfQ">
      <ownedEnd xmi:id="_rElacnk6EeSVm5Faw75mfQ" name="" type="_q_rsUHk6EeSVm5Faw75mfQ" association="_rElacXk6EeSVm5Faw75mfQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_rEmBgXk6EeSVm5Faw75mfQ" name="" memberEnd="_rEmBgnk6EeSVm5Faw75mfQ _rDPWo3k6EeSVm5Faw75mfQ">
      <ownedEnd xmi:id="_rEmBgnk6EeSVm5Faw75mfQ" name="" type="_q_rsUHk6EeSVm5Faw75mfQ" association="_rEmBgXk6EeSVm5Faw75mfQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_rEmokXk6EeSVm5Faw75mfQ" name="" memberEnd="_rEmoknk6EeSVm5Faw75mfQ _rDP9sXk6EeSVm5Faw75mfQ">
      <ownedEnd xmi:id="_rEmoknk6EeSVm5Faw75mfQ" name="" type="_q_rsUHk6EeSVm5Faw75mfQ" association="_rEmokXk6EeSVm5Faw75mfQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_rEodwHk6EeSVm5Faw75mfQ" name="" memberEnd="_rEodwXk6EeSVm5Faw75mfQ _rDQkwHk6EeSVm5Faw75mfQ">
      <ownedEnd xmi:id="_rEodwXk6EeSVm5Faw75mfQ" name="" type="_q_rsUHk6EeSVm5Faw75mfQ" association="_rEodwHk6EeSVm5Faw75mfQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_rEpr4Hk6EeSVm5Faw75mfQ" name="" memberEnd="_rEpr4Xk6EeSVm5Faw75mfQ _rDQkwnk6EeSVm5Faw75mfQ">
      <ownedEnd xmi:id="_rEpr4Xk6EeSVm5Faw75mfQ" name="" type="_q_rsUHk6EeSVm5Faw75mfQ" association="_rEpr4Hk6EeSVm5Faw75mfQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_rEqS8Xk6EeSVm5Faw75mfQ" name="" memberEnd="_rEqS8nk6EeSVm5Faw75mfQ _rDRL0Xk6EeSVm5Faw75mfQ">
      <ownedEnd xmi:id="_rEqS8nk6EeSVm5Faw75mfQ" name="" type="_q_rsUHk6EeSVm5Faw75mfQ" association="_rEqS8Xk6EeSVm5Faw75mfQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_rErhEHk6EeSVm5Faw75mfQ" name="" memberEnd="_rErhEXk6EeSVm5Faw75mfQ _rDRL03k6EeSVm5Faw75mfQ">
      <ownedEnd xmi:id="_rErhEXk6EeSVm5Faw75mfQ" name="" type="_q_rsUHk6EeSVm5Faw75mfQ" association="_rErhEHk6EeSVm5Faw75mfQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_rErhE3k6EeSVm5Faw75mfQ" name="" memberEnd="_rErhFHk6EeSVm5Faw75mfQ _rDRy4Xk6EeSVm5Faw75mfQ">
      <ownedEnd xmi:id="_rErhFHk6EeSVm5Faw75mfQ" name="" type="_q_rsUHk6EeSVm5Faw75mfQ" association="_rErhE3k6EeSVm5Faw75mfQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_rEsIIXk6EeSVm5Faw75mfQ" name="" memberEnd="_rEsIInk6EeSVm5Faw75mfQ _rDSZ8Hk6EeSVm5Faw75mfQ">
      <ownedEnd xmi:id="_rEsIInk6EeSVm5Faw75mfQ" name="" type="_q_rsUHk6EeSVm5Faw75mfQ" association="_rEsIIXk6EeSVm5Faw75mfQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_rEtWQHk6EeSVm5Faw75mfQ" name="" memberEnd="_rEtWQXk6EeSVm5Faw75mfQ _rDSZ8nk6EeSVm5Faw75mfQ">
      <ownedEnd xmi:id="_rEtWQXk6EeSVm5Faw75mfQ" name="" type="_q_rsUHk6EeSVm5Faw75mfQ" association="_rEtWQHk6EeSVm5Faw75mfQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_rEt9UHk6EeSVm5Faw75mfQ" name="" memberEnd="_rEt9UXk6EeSVm5Faw75mfQ _rDTBAHk6EeSVm5Faw75mfQ">
      <ownedEnd xmi:id="_rEt9UXk6EeSVm5Faw75mfQ" name="" type="_q_rsUHk6EeSVm5Faw75mfQ" association="_rEt9UHk6EeSVm5Faw75mfQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_rEt9U3k6EeSVm5Faw75mfQ" name="" memberEnd="_rEt9VHk6EeSVm5Faw75mfQ _rDU2MHk6EeSVm5Faw75mfQ">
      <ownedEnd xmi:id="_rEt9VHk6EeSVm5Faw75mfQ" name="" type="_q_rsUHk6EeSVm5Faw75mfQ" association="_rEt9U3k6EeSVm5Faw75mfQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_rEukYXk6EeSVm5Faw75mfQ" name="" memberEnd="_rEukYnk6EeSVm5Faw75mfQ _rDU2Mnk6EeSVm5Faw75mfQ">
      <ownedEnd xmi:id="_rEukYnk6EeSVm5Faw75mfQ" name="" type="_q_rsUHk6EeSVm5Faw75mfQ" association="_rEukYXk6EeSVm5Faw75mfQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_rEvLcXk6EeSVm5Faw75mfQ" name="" memberEnd="_rEvLcnk6EeSVm5Faw75mfQ _rDVdQXk6EeSVm5Faw75mfQ">
      <ownedEnd xmi:id="_rEvLcnk6EeSVm5Faw75mfQ" name="" type="_q_rsUHk6EeSVm5Faw75mfQ" association="_rEvLcXk6EeSVm5Faw75mfQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_rEvygXk6EeSVm5Faw75mfQ" name="" memberEnd="_rEvygnk6EeSVm5Faw75mfQ _rDWEUHk6EeSVm5Faw75mfQ">
      <ownedEnd xmi:id="_rEvygnk6EeSVm5Faw75mfQ" name="" type="_q_rsUHk6EeSVm5Faw75mfQ" association="_rEvygXk6EeSVm5Faw75mfQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_rEwZkXk6EeSVm5Faw75mfQ" name="" memberEnd="_rExAoHk6EeSVm5Faw75mfQ _rDWrYXk6EeSVm5Faw75mfQ">
      <ownedEnd xmi:id="_rExAoHk6EeSVm5Faw75mfQ" name="" type="_q_rsUHk6EeSVm5Faw75mfQ" association="_rEwZkXk6EeSVm5Faw75mfQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_rExAonk6EeSVm5Faw75mfQ" name="" memberEnd="_rExAo3k6EeSVm5Faw75mfQ _rDXScXk6EeSVm5Faw75mfQ">
      <ownedEnd xmi:id="_rExAo3k6EeSVm5Faw75mfQ" name="" type="_q_rsUHk6EeSVm5Faw75mfQ" association="_rExAonk6EeSVm5Faw75mfQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_rEyOwHk6EeSVm5Faw75mfQ" name="" memberEnd="_rEyOwXk6EeSVm5Faw75mfQ _rDX5g3k6EeSVm5Faw75mfQ">
      <ownedEnd xmi:id="_rEyOwXk6EeSVm5Faw75mfQ" name="" type="_q_rsUHk6EeSVm5Faw75mfQ" association="_rEyOwHk6EeSVm5Faw75mfQ"/>
    </packagedElement>
    <profileApplication xmi:id="_pd0Q8Hk6EeSVm5Faw75mfQ">
      <eAnnotations xmi:id="_pd0Q8Xk6EeSVm5Faw75mfQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
        <references xmi:type="ecore:EPackage" href="pathmap://UMLLAB_PROFILES/UMLLab.profile.uml#UMLLabProfile-Annotation_2-UMLLabProfile"/>
      </eAnnotations>
      <appliedProfile href="pathmap://UMLLAB_PROFILES/UMLLab.profile.uml#UMLLabProfile"/>
    </profileApplication>
  </uml:Model>
  <UMLLabProfile:TargetLanguage xmi:id="_pd0Q8nk6EeSVm5Faw75mfQ" base_Package="_pF5gMHk6EeSVm5Faw75mfQ">
    <languageName>java</languageName>
  </UMLLabProfile:TargetLanguage>
  <UMLLabProfile:LegacyStyledElement xmi:id="_qNVpYHk6EeSVm5Faw75mfQ" base_Element="_qNUbQHk6EeSVm5Faw75mfQ"/>
  <UMLLabProfile:Annotations xmi:id="_qNWQcHk6EeSVm5Faw75mfQ" base_Element="_qNUbQHk6EeSVm5Faw75mfQ">
    <annotations xmi:id="_qNWQcXk6EeSVm5Faw75mfQ" name="RunWith">
      <annotationParameters xmi:id="_qNW3gHk6EeSVm5Faw75mfQ" skipName="true" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_qk3YkHk6EeSVm5Faw75mfQ" value="Suite.class"/>
      </annotationParameters>
    </annotations>
    <annotations xmi:id="_qNW3gXk6EeSVm5Faw75mfQ" name="SuiteClasses">
      <annotationParameters xmi:id="_qNXekHk6EeSVm5Faw75mfQ" skipName="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_qk3_oHk6EeSVm5Faw75mfQ" value="FinalBoardTest.class"/>
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_qk3_oXk6EeSVm5Faw75mfQ" value="GameTest.class"/>
      </annotationParameters>
    </annotations>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Array xmi:id="_qNgogXk6EeSVm5Faw75mfQ" dimensions="2" base_Element="_qNgBcHk6EeSVm5Faw75mfQ"/>
  <UMLLabProfile:Array xmi:id="_qN1Yo3k6EeSVm5Faw75mfQ" dimensions="2" base_Element="_qN1YoHk6EeSVm5Faw75mfQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_qN64MHk6EeSVm5Faw75mfQ" base_Element="_qN6RIHk6EeSVm5Faw75mfQ"/>
  <UMLLabProfile:Annotations xmi:id="_qN64MXk6EeSVm5Faw75mfQ" base_Element="_qN6RIHk6EeSVm5Faw75mfQ">
    <annotations xmi:id="_qN7fQHk6EeSVm5Faw75mfQ" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_qOQ2cHk6EeSVm5Faw75mfQ" base_Element="_qOQPYHk6EeSVm5Faw75mfQ"/>
  <UMLLabProfile:Annotations xmi:id="_qOQ2cXk6EeSVm5Faw75mfQ" base_Element="_qOQPYHk6EeSVm5Faw75mfQ">
    <annotations xmi:id="_qOQ2cnk6EeSVm5Faw75mfQ" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Array xmi:id="_qOW9FHk6EeSVm5Faw75mfQ" dimensions="1" base_Element="_qOW9EHk6EeSVm5Faw75mfQ"/>
  <UMLLabProfile:Array xmi:id="_qOguEnk6EeSVm5Faw75mfQ" base_Element="_qOgHAXk6EeSVm5Faw75mfQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_qPVNcXk6EeSVm5Faw75mfQ" base_Element="_qPVNcHk6EeSVm5Faw75mfQ"/>
  <UMLLabProfile:Annotations xmi:id="_qPV0gHk6EeSVm5Faw75mfQ" base_Element="_qPVNcHk6EeSVm5Faw75mfQ">
    <annotations xmi:id="_qPV0gXk6EeSVm5Faw75mfQ" name="SuppressWarnings">
      <annotationParameters xmi:id="_qPV0gnk6EeSVm5Faw75mfQ" skipName="true" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_qk84JXk6EeSVm5Faw75mfQ" value="&quot;unchecked&quot;"/>
      </annotationParameters>
    </annotations>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_qPYQwHk6EeSVm5Faw75mfQ" base_Element="_qPWbkHk6EeSVm5Faw75mfQ"/>
  <UMLLabProfile:Array xmi:id="_qPZe4Hk6EeSVm5Faw75mfQ" base_Element="_qPXCoHk6EeSVm5Faw75mfQ"/>
  <UMLLabProfile:Reference xmi:id="_qPb7IHk6EeSVm5Faw75mfQ" base_Element="_qPatAHk6EeSVm5Faw75mfQ"/>
  <UMLLabProfile:Reference xmi:id="_qVv-gHk6EeSVm5Faw75mfQ" base_Element="_qVvXcHk6EeSVm5Faw75mfQ"/>
  <UMLLabProfile:Reference xmi:id="_qVxMoHk6EeSVm5Faw75mfQ" base_Element="_qVwlkHk6EeSVm5Faw75mfQ"/>
  <UMLLabProfile:Reference xmi:id="_qVxzsHk6EeSVm5Faw75mfQ" base_Element="_qVxMoXk6EeSVm5Faw75mfQ"/>
  <UMLLabProfile:Reference xmi:id="_qV3TQHk6EeSVm5Faw75mfQ" base_Element="_qV2sMHk6EeSVm5Faw75mfQ"/>
  <UMLLabProfile:Reference xmi:id="_qV36UXk6EeSVm5Faw75mfQ" base_Element="_qV36UHk6EeSVm5Faw75mfQ"/>
  <UMLLabProfile:Reference xmi:id="_qV_2IHk6EeSVm5Faw75mfQ" base_Element="_qV_PEHk6EeSVm5Faw75mfQ"/>
  <UMLLabProfile:Reference xmi:id="_qWAdMXk6EeSVm5Faw75mfQ" base_Element="_qWAdMHk6EeSVm5Faw75mfQ"/>
  <UMLLabProfile:Reference xmi:id="_qWCSYHk6EeSVm5Faw75mfQ" base_Element="_qWBrUHk6EeSVm5Faw75mfQ"/>
  <UMLLabProfile:Reference xmi:id="_qWC5cHk6EeSVm5Faw75mfQ" base_Element="_qWCSYXk6EeSVm5Faw75mfQ"/>
  <UMLLabProfile:Reference xmi:id="_qWDggHk6EeSVm5Faw75mfQ" base_Element="_qWC5cXk6EeSVm5Faw75mfQ"/>
  <UMLLabProfile:Reference xmi:id="_qWEHkHk6EeSVm5Faw75mfQ" base_Element="_qWDggXk6EeSVm5Faw75mfQ"/>
  <UMLLabProfile:Reference xmi:id="_qWQU0Hk6EeSVm5Faw75mfQ" base_Element="_qWPtwHk6EeSVm5Faw75mfQ"/>
  <UMLLabProfile:Reference xmi:id="_qWQ74Hk6EeSVm5Faw75mfQ" base_Element="_qWQU0Xk6EeSVm5Faw75mfQ"/>
  <UMLLabProfile:Reference xmi:id="_qWRi8Hk6EeSVm5Faw75mfQ" base_Element="_qWQ74Xk6EeSVm5Faw75mfQ"/>
  <UMLLabProfile:Reference xmi:id="_qWSKAHk6EeSVm5Faw75mfQ" base_Element="_qWRi8Xk6EeSVm5Faw75mfQ"/>
  <UMLLabProfile:Reference xmi:id="_qWSxEHk6EeSVm5Faw75mfQ" base_Element="_qWSKAXk6EeSVm5Faw75mfQ"/>
  <UMLLabProfile:Reference xmi:id="_qWV0YHk6EeSVm5Faw75mfQ" base_Element="_qWVNUHk6EeSVm5Faw75mfQ"/>
  <UMLLabProfile:Reference xmi:id="_qWWbcHk6EeSVm5Faw75mfQ" base_Element="_qWV0YXk6EeSVm5Faw75mfQ"/>
  <UMLLabProfile:Reference xmi:id="_qWXpkHk6EeSVm5Faw75mfQ" base_Element="_qWXCgHk6EeSVm5Faw75mfQ"/>
  <UMLLabProfile:Reference xmi:id="_qWaF0Hk6EeSVm5Faw75mfQ" base_Element="_qWXpkXk6EeSVm5Faw75mfQ"/>
  <UMLLabProfile:Reference xmi:id="_qWas4Hk6EeSVm5Faw75mfQ" base_Element="_qWaF0Xk6EeSVm5Faw75mfQ"/>
  <UMLLabProfile:Reference xmi:id="_qWb7AHk6EeSVm5Faw75mfQ" base_Element="_qWbT8Hk6EeSVm5Faw75mfQ"/>
  <UMLLabProfile:Reference xmi:id="_qWciEHk6EeSVm5Faw75mfQ" base_Element="_qWb7AXk6EeSVm5Faw75mfQ"/>
  <UMLLabProfile:Reference xmi:id="_qW6cIHk6EeSVm5Faw75mfQ" base_Element="_qWciEXk6EeSVm5Faw75mfQ"/>
  <UMLLabProfile:Reference xmi:id="_qXE0MHk6EeSVm5Faw75mfQ" base_Element="_qXENIHk6EeSVm5Faw75mfQ"/>
  <UMLLabProfile:Reference xmi:id="_qXFbQHk6EeSVm5Faw75mfQ" base_Element="_qXE0MXk6EeSVm5Faw75mfQ"/>
  <UMLLabProfile:Reference xmi:id="_qXIekHk6EeSVm5Faw75mfQ" base_Element="_qXH3gHk6EeSVm5Faw75mfQ"/>
  <UMLLabProfile:Reference xmi:id="_qXJssHk6EeSVm5Faw75mfQ" base_Element="_qXJFoHk6EeSVm5Faw75mfQ"/>
  <UMLLabProfile:Reference xmi:id="_qXLh4Hk6EeSVm5Faw75mfQ" base_Element="_qXKTwHk6EeSVm5Faw75mfQ"/>
  <UMLLabProfile:Reference xmi:id="_qXMwAHk6EeSVm5Faw75mfQ" base_Element="_qXMI8Hk6EeSVm5Faw75mfQ"/>
  <UMLLabProfile:Reference xmi:id="_qXj8YHk6EeSVm5Faw75mfQ" base_Element="_qXjVUXk6EeSVm5Faw75mfQ"/>
  <UMLLabProfile:Array xmi:id="_qXmYoHk6EeSVm5Faw75mfQ" dimensions="2" base_Element="_qXlxkHk6EeSVm5Faw75mfQ"/>
  <UMLLabProfile:Array xmi:id="_qXsfQXk6EeSVm5Faw75mfQ" dimensions="1" base_Element="_qXr4Mnk6EeSVm5Faw75mfQ"/>
  <UMLLabProfile:Generics xmi:id="_qXyl4Hk6EeSVm5Faw75mfQ" genericsValue="Pentomino" base_Element="_qXx-0Hk6EeSVm5Faw75mfQ"/>
  <UMLLabProfile:Generics xmi:id="_qX1CIHk6EeSVm5Faw75mfQ" genericsValue="Integer" base_Element="_qXz0AXk6EeSVm5Faw75mfQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_qYMOgHk6EeSVm5Faw75mfQ" base_Element="_qYLncHk6EeSVm5Faw75mfQ"/>
  <UMLLabProfile:Annotations xmi:id="_qYM1kHk6EeSVm5Faw75mfQ" base_Element="_qYLncHk6EeSVm5Faw75mfQ">
    <annotations xmi:id="_qYM1kXk6EeSVm5Faw75mfQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_qYOqwHk6EeSVm5Faw75mfQ" base_Element="_qYODsHk6EeSVm5Faw75mfQ"/>
  <UMLLabProfile:Annotations xmi:id="_qYPR0Hk6EeSVm5Faw75mfQ" base_Element="_qYODsHk6EeSVm5Faw75mfQ">
    <annotations xmi:id="_qYPR0Xk6EeSVm5Faw75mfQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_qYQf8Hk6EeSVm5Faw75mfQ" base_Element="_qYP44Hk6EeSVm5Faw75mfQ"/>
  <UMLLabProfile:Annotations xmi:id="_qYRHAHk6EeSVm5Faw75mfQ" base_Element="_qYP44Hk6EeSVm5Faw75mfQ">
    <annotations xmi:id="_qYRHAXk6EeSVm5Faw75mfQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_qYiMwHk6EeSVm5Faw75mfQ" base_Element="_qYhlsHk6EeSVm5Faw75mfQ">
    <associatedElement xmi:type="uml:Operation" xmi:id="_qYkB8Hk6EeSVm5Faw75mfQ" name="getWidth" method="_qkV0IHk6EeSVm5Faw75mfQ">
      <ownedParameter xmi:id="_qYkpAHk6EeSVm5Faw75mfQ" direction="return">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
      </ownedParameter>
    </associatedElement>
  </UMLLabProfile:LegacyStyledElement>
  <UMLLabProfile:MultiDeclaration xmi:id="_qYiz0Hk6EeSVm5Faw75mfQ" base_Property="_qYhlsHk6EeSVm5Faw75mfQ" siblings="_qk3_onk6EeSVm5Faw75mfQ" root="true"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_qjT5YHk6EeSVm5Faw75mfQ" base_Element="_qjSEMHk6EeSVm5Faw75mfQ"/>
  <UMLLabProfile:Array xmi:id="_qjlmMHk6EeSVm5Faw75mfQ" base_Element="_qjk_IHk6EeSVm5Faw75mfQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_qjmNQXk6EeSVm5Faw75mfQ" base_Element="_qjlmMXk6EeSVm5Faw75mfQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_qjm0Unk6EeSVm5Faw75mfQ" base_Element="_qjm0UHk6EeSVm5Faw75mfQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_qjpQkHk6EeSVm5Faw75mfQ" base_Element="_qjopgHk6EeSVm5Faw75mfQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_qjp3oXk6EeSVm5Faw75mfQ" base_Element="_qjp3oHk6EeSVm5Faw75mfQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_qjqesXk6EeSVm5Faw75mfQ" base_Element="_qjqesHk6EeSVm5Faw75mfQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_qjrFwXk6EeSVm5Faw75mfQ" base_Element="_qjrFwHk6EeSVm5Faw75mfQ"/>
  <UMLLabProfile:Array xmi:id="_qjsT4nk6EeSVm5Faw75mfQ" dimensions="2" base_Element="_qjsT4Hk6EeSVm5Faw75mfQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_qjs68Hk6EeSVm5Faw75mfQ" base_Element="_qjsT4Hk6EeSVm5Faw75mfQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_qjvXMHk6EeSVm5Faw75mfQ" base_Element="_qjuwIXk6EeSVm5Faw75mfQ"/>
  <UMLLabProfile:Generics xmi:id="_qjv-QHk6EeSVm5Faw75mfQ" genericsValue="Pentomino" base_Element="_qjvXMXk6EeSVm5Faw75mfQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_qjwlUHk6EeSVm5Faw75mfQ" base_Element="_qjvXMXk6EeSVm5Faw75mfQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_qjxMYXk6EeSVm5Faw75mfQ" base_Element="_qjxMYHk6EeSVm5Faw75mfQ">
    <associatedElement xmi:type="uml:Operation" xmi:id="_qjxzcHk6EeSVm5Faw75mfQ" name="getDropSpeed" method="_qkhaUXk6EeSVm5Faw75mfQ">
      <ownedParameter xmi:id="_qjxzcXk6EeSVm5Faw75mfQ" direction="return">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
      </ownedParameter>
    </associatedElement>
  </UMLLabProfile:LegacyStyledElement>
  <UMLLabProfile:LegacyStyledElement xmi:id="_qjzBkHk6EeSVm5Faw75mfQ" base_Element="_qjyagHk6EeSVm5Faw75mfQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_qjzooXk6EeSVm5Faw75mfQ" base_Element="_qjzooHk6EeSVm5Faw75mfQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_qj3TAHk6EeSVm5Faw75mfQ" base_Element="_qj2r8Hk6EeSVm5Faw75mfQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_qj36EHk6EeSVm5Faw75mfQ" base_Element="_qj3TAXk6EeSVm5Faw75mfQ"/>
  <UMLLabProfile:Array xmi:id="_qj6WUHk6EeSVm5Faw75mfQ" dimensions="1" base_Element="_qj5vQHk6EeSVm5Faw75mfQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_qj6WUXk6EeSVm5Faw75mfQ" base_Element="_qj5vQHk6EeSVm5Faw75mfQ"/>
  <UMLLabProfile:Generics xmi:id="_qj7kcHk6EeSVm5Faw75mfQ" genericsValue="String[]" base_Element="_qj69YHk6EeSVm5Faw75mfQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_qj7kcnk6EeSVm5Faw75mfQ" base_Element="_qj69YHk6EeSVm5Faw75mfQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_qj9ZoHk6EeSVm5Faw75mfQ" base_Element="_qj8ykHk6EeSVm5Faw75mfQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_qkAc8Hk6EeSVm5Faw75mfQ" base_Element="_qj_14Hk6EeSVm5Faw75mfQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_qkBEAXk6EeSVm5Faw75mfQ" base_Element="_qkAc8Xk6EeSVm5Faw75mfQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_qkBrEXk6EeSVm5Faw75mfQ" base_Element="_qkBrEHk6EeSVm5Faw75mfQ"/>
  <UMLLabProfile:Array xmi:id="_qkCSIXk6EeSVm5Faw75mfQ" dimensions="2" base_Element="_qkBrEnk6EeSVm5Faw75mfQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_qkC5MHk6EeSVm5Faw75mfQ" base_Element="_qkBrEnk6EeSVm5Faw75mfQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_qkC5Mnk6EeSVm5Faw75mfQ" base_Element="_qkC5MXk6EeSVm5Faw75mfQ"/>
  <UMLLabProfile:Array xmi:id="_qkDgQnk6EeSVm5Faw75mfQ" dimensions="1" base_Element="_qkDgQHk6EeSVm5Faw75mfQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_qkEHUXk6EeSVm5Faw75mfQ" base_Element="_qkDgQHk6EeSVm5Faw75mfQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_qkHxsHk6EeSVm5Faw75mfQ" base_Element="_qkGjkHk6EeSVm5Faw75mfQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_qkIYwXk6EeSVm5Faw75mfQ" base_Element="_qkHxsXk6EeSVm5Faw75mfQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_qkKN8Hk6EeSVm5Faw75mfQ" base_Element="_qkJm4Hk6EeSVm5Faw75mfQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_qkK1AHk6EeSVm5Faw75mfQ" base_Element="_qkKN8Xk6EeSVm5Faw75mfQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_qkMqMHk6EeSVm5Faw75mfQ" base_Element="_qkK1AXk6EeSVm5Faw75mfQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_qkNRQHk6EeSVm5Faw75mfQ" base_Element="_qkMqMXk6EeSVm5Faw75mfQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_qkN4UXk6EeSVm5Faw75mfQ" base_Element="_qkN4UHk6EeSVm5Faw75mfQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_qkPGcHk6EeSVm5Faw75mfQ" base_Element="_qkOfYHk6EeSVm5Faw75mfQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_qkPtgHk6EeSVm5Faw75mfQ" base_Element="_qkPGcXk6EeSVm5Faw75mfQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_qkQUkHk6EeSVm5Faw75mfQ" base_Element="_qkPtgXk6EeSVm5Faw75mfQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_qkRisHk6EeSVm5Faw75mfQ" base_Element="_qkQUkXk6EeSVm5Faw75mfQ"/>
  <uml:OpaqueBehavior xmi:id="_qkV0IHk6EeSVm5Faw75mfQ" name="getWidth" specification="_qYkB8Hk6EeSVm5Faw75mfQ">
    <ownedParameter xmi:id="_qkV0IXk6EeSVm5Faw75mfQ" direction="return">
      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
    </ownedParameter>
    <language>java</language>
    <body>return width;
	</body>
  </uml:OpaqueBehavior>
  <uml:OpaqueBehavior xmi:id="_qkhaUXk6EeSVm5Faw75mfQ" name="getDropSpeed" specification="_qjxzcHk6EeSVm5Faw75mfQ">
    <ownedParameter xmi:id="_qkiBYHk6EeSVm5Faw75mfQ" direction="return">
      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
    </ownedParameter>
    <language>java</language>
    <body>return dropSpeed;
	</body>
  </uml:OpaqueBehavior>
  <UMLLabProfile:MultiDeclaration xmi:id="_qk3_o3k6EeSVm5Faw75mfQ" base_Property="_qk3_onk6EeSVm5Faw75mfQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_qk4msHk6EeSVm5Faw75mfQ" base_Element="_qk3_onk6EeSVm5Faw75mfQ"/>
  <UMLLabProfile:Reference xmi:id="_qlGpIHk6EeSVm5Faw75mfQ" base_Element="_qlGCEHk6EeSVm5Faw75mfQ"/>
  <UMLLabProfile:Reference xmi:id="_qlHQMHk6EeSVm5Faw75mfQ" base_Element="_qlGpIXk6EeSVm5Faw75mfQ"/>
  <UMLLabProfile:Reference xmi:id="_qlH3QHk6EeSVm5Faw75mfQ" base_Element="_qlHQMXk6EeSVm5Faw75mfQ"/>
  <UMLLabProfile:Reference xmi:id="_qlIeUHk6EeSVm5Faw75mfQ" base_Element="_qlH3QXk6EeSVm5Faw75mfQ"/>
  <UMLLabProfile:Reference xmi:id="_qlJscHk6EeSVm5Faw75mfQ" base_Element="_qlIeUXk6EeSVm5Faw75mfQ"/>
  <UMLLabProfile:Reference xmi:id="_qlKTgnk6EeSVm5Faw75mfQ" base_Element="_qlKTgHk6EeSVm5Faw75mfQ"/>
  <UMLLabProfile:Reference xmi:id="_qlK6knk6EeSVm5Faw75mfQ" base_Element="_qlK6kHk6EeSVm5Faw75mfQ"/>
  <UMLLabProfile:Reference xmi:id="_qlLhoHk6EeSVm5Faw75mfQ" base_Element="_qlK6k3k6EeSVm5Faw75mfQ"/>
  <UMLLabProfile:Reference xmi:id="_qlMIsHk6EeSVm5Faw75mfQ" base_Element="_qlLhoXk6EeSVm5Faw75mfQ"/>
  <UMLLabProfile:Reference xmi:id="_qlMvwHk6EeSVm5Faw75mfQ" base_Element="_qlMIsXk6EeSVm5Faw75mfQ"/>
  <UMLLabProfile:Reference xmi:id="_qlNW0Hk6EeSVm5Faw75mfQ" base_Element="_qlMvwXk6EeSVm5Faw75mfQ"/>
  <UMLLabProfile:Reference xmi:id="_qlN94Hk6EeSVm5Faw75mfQ" base_Element="_qlNW0Xk6EeSVm5Faw75mfQ"/>
  <UMLLabProfile:Reference xmi:id="_qlOk8nk6EeSVm5Faw75mfQ" base_Element="_qlOk8Hk6EeSVm5Faw75mfQ"/>
  <UMLLabProfile:Reference xmi:id="_qlPMAnk6EeSVm5Faw75mfQ" base_Element="_qlPMAHk6EeSVm5Faw75mfQ"/>
  <UMLLabProfile:Reference xmi:id="_qlRoQHk6EeSVm5Faw75mfQ" base_Element="_qlPzEHk6EeSVm5Faw75mfQ"/>
  <UMLLabProfile:Reference xmi:id="_qlSPUHk6EeSVm5Faw75mfQ" base_Element="_qlRoQXk6EeSVm5Faw75mfQ"/>
  <UMLLabProfile:Reference xmi:id="_qlSPU3k6EeSVm5Faw75mfQ" base_Element="_qlSPUXk6EeSVm5Faw75mfQ"/>
  <UMLLabProfile:Reference xmi:id="_qlS2Ynk6EeSVm5Faw75mfQ" base_Element="_qlS2YHk6EeSVm5Faw75mfQ"/>
  <UMLLabProfile:Reference xmi:id="_qlTdcHk6EeSVm5Faw75mfQ" base_Element="_qlS2Y3k6EeSVm5Faw75mfQ"/>
  <UMLLabProfile:Reference xmi:id="_qlUEgHk6EeSVm5Faw75mfQ" base_Element="_qlTdcXk6EeSVm5Faw75mfQ"/>
  <UMLLabProfile:Reference xmi:id="_qlUrkHk6EeSVm5Faw75mfQ" base_Element="_qlUEgXk6EeSVm5Faw75mfQ"/>
  <UMLLabProfile:Reference xmi:id="_qlVSoHk6EeSVm5Faw75mfQ" base_Element="_qlUrkXk6EeSVm5Faw75mfQ"/>
  <UMLLabProfile:Reference xmi:id="_qlVSo3k6EeSVm5Faw75mfQ" base_Element="_qlVSoXk6EeSVm5Faw75mfQ"/>
  <UMLLabProfile:Reference xmi:id="_qlV5snk6EeSVm5Faw75mfQ" base_Element="_qlV5sHk6EeSVm5Faw75mfQ"/>
  <UMLLabProfile:Reference xmi:id="_qlWgwHk6EeSVm5Faw75mfQ" base_Element="_qlV5s3k6EeSVm5Faw75mfQ"/>
  <UMLLabProfile:Generics xmi:id="_q_W8MHk6EeSVm5Faw75mfQ" genericsValue="Pentomino" base_Element="_q_VuEHk6EeSVm5Faw75mfQ"/>
  <UMLLabProfile:Array xmi:id="_q_YKU3k6EeSVm5Faw75mfQ" dimensions="2" base_Element="_q_YKUHk6EeSVm5Faw75mfQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_q_vWs3k6EeSVm5Faw75mfQ" base_Element="_q_vWsnk6EeSVm5Faw75mfQ"/>
  <UMLLabProfile:Annotations xmi:id="_q_v9wHk6EeSVm5Faw75mfQ" base_Element="_q_vWsnk6EeSVm5Faw75mfQ">
    <annotations xmi:id="_q_v9wXk6EeSVm5Faw75mfQ" name="SuppressWarnings">
      <annotationParameters xmi:id="_q_v9wnk6EeSVm5Faw75mfQ" skipName="true" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_rDsponk6EeSVm5Faw75mfQ" value="&quot;unchecked&quot;"/>
      </annotationParameters>
    </annotations>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_q_0PMHk6EeSVm5Faw75mfQ" base_Element="_q_zoIHk6EeSVm5Faw75mfQ"/>
  <UMLLabProfile:Array xmi:id="_q_0PMnk6EeSVm5Faw75mfQ" base_Element="_q_zoIXk6EeSVm5Faw75mfQ"/>
  <UMLLabProfile:Generics xmi:id="_rAKNcHk6EeSVm5Faw75mfQ" genericsValue="Pentomino" base_Element="_rAI_UHk6EeSVm5Faw75mfQ"/>
  <UMLLabProfile:Reference xmi:id="_rCa3QHk6EeSVm5Faw75mfQ" base_Element="_rCaQMHk6EeSVm5Faw75mfQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rC1G8Hk6EeSVm5Faw75mfQ" base_Element="_rC0f4Hk6EeSVm5Faw75mfQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rC1uAHk6EeSVm5Faw75mfQ" base_Element="_rC1G8Xk6EeSVm5Faw75mfQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rC1uAnk6EeSVm5Faw75mfQ" base_Element="_rC1uAXk6EeSVm5Faw75mfQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rC2VEHk6EeSVm5Faw75mfQ" base_Element="_rC1uA3k6EeSVm5Faw75mfQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rC28IHk6EeSVm5Faw75mfQ" base_Element="_rC2VEXk6EeSVm5Faw75mfQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rC3jMHk6EeSVm5Faw75mfQ" base_Element="_rC28IXk6EeSVm5Faw75mfQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rC3jMnk6EeSVm5Faw75mfQ" base_Element="_rC3jMXk6EeSVm5Faw75mfQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rC4KQXk6EeSVm5Faw75mfQ" base_Element="_rC4KQHk6EeSVm5Faw75mfQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rC4xUHk6EeSVm5Faw75mfQ" base_Element="_rC4KQnk6EeSVm5Faw75mfQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rC4xUnk6EeSVm5Faw75mfQ" base_Element="_rC4xUXk6EeSVm5Faw75mfQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rC5YYHk6EeSVm5Faw75mfQ" base_Element="_rC4xU3k6EeSVm5Faw75mfQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rC5YYnk6EeSVm5Faw75mfQ" base_Element="_rC5YYXk6EeSVm5Faw75mfQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rC5_cHk6EeSVm5Faw75mfQ" base_Element="_rC5YY3k6EeSVm5Faw75mfQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rC5_cnk6EeSVm5Faw75mfQ" base_Element="_rC5_cXk6EeSVm5Faw75mfQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rC7NkHk6EeSVm5Faw75mfQ" base_Element="_rC6mgHk6EeSVm5Faw75mfQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rC7Nknk6EeSVm5Faw75mfQ" base_Element="_rC7NkXk6EeSVm5Faw75mfQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rC70oHk6EeSVm5Faw75mfQ" base_Element="_rC7Nk3k6EeSVm5Faw75mfQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rC70onk6EeSVm5Faw75mfQ" base_Element="_rC70oXk6EeSVm5Faw75mfQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rC8bsHk6EeSVm5Faw75mfQ" base_Element="_rC70o3k6EeSVm5Faw75mfQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rC8bsnk6EeSVm5Faw75mfQ" base_Element="_rC8bsXk6EeSVm5Faw75mfQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rC9CwHk6EeSVm5Faw75mfQ" base_Element="_rC8bs3k6EeSVm5Faw75mfQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rC9Cwnk6EeSVm5Faw75mfQ" base_Element="_rC9CwXk6EeSVm5Faw75mfQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rC9CxHk6EeSVm5Faw75mfQ" base_Element="_rC9Cw3k6EeSVm5Faw75mfQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rC9p0Xk6EeSVm5Faw75mfQ" base_Element="_rC9p0Hk6EeSVm5Faw75mfQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rC9p03k6EeSVm5Faw75mfQ" base_Element="_rC9p0nk6EeSVm5Faw75mfQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rC-Q4Hk6EeSVm5Faw75mfQ" base_Element="_rC9p1Hk6EeSVm5Faw75mfQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rC-Q4nk6EeSVm5Faw75mfQ" base_Element="_rC-Q4Xk6EeSVm5Faw75mfQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rC-38Hk6EeSVm5Faw75mfQ" base_Element="_rC-Q43k6EeSVm5Faw75mfQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rC-38nk6EeSVm5Faw75mfQ" base_Element="_rC-38Xk6EeSVm5Faw75mfQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rC_fAHk6EeSVm5Faw75mfQ" base_Element="_rC-383k6EeSVm5Faw75mfQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rC_fAnk6EeSVm5Faw75mfQ" base_Element="_rC_fAXk6EeSVm5Faw75mfQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rDAGEHk6EeSVm5Faw75mfQ" base_Element="_rC_fA3k6EeSVm5Faw75mfQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rDAtIHk6EeSVm5Faw75mfQ" base_Element="_rDAGEXk6EeSVm5Faw75mfQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rDAtInk6EeSVm5Faw75mfQ" base_Element="_rDAtIXk6EeSVm5Faw75mfQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rDBUMXk6EeSVm5Faw75mfQ" base_Element="_rDBUMHk6EeSVm5Faw75mfQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rDB7QXk6EeSVm5Faw75mfQ" base_Element="_rDB7QHk6EeSVm5Faw75mfQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rDCiUXk6EeSVm5Faw75mfQ" base_Element="_rDCiUHk6EeSVm5Faw75mfQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rDDJYXk6EeSVm5Faw75mfQ" base_Element="_rDDJYHk6EeSVm5Faw75mfQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rDDwcXk6EeSVm5Faw75mfQ" base_Element="_rDDwcHk6EeSVm5Faw75mfQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rDEXgXk6EeSVm5Faw75mfQ" base_Element="_rDEXgHk6EeSVm5Faw75mfQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rDE-kXk6EeSVm5Faw75mfQ" base_Element="_rDE-kHk6EeSVm5Faw75mfQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rDFloHk6EeSVm5Faw75mfQ" base_Element="_rDE-knk6EeSVm5Faw75mfQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rDFlonk6EeSVm5Faw75mfQ" base_Element="_rDFloXk6EeSVm5Faw75mfQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rDGMsXk6EeSVm5Faw75mfQ" base_Element="_rDGMsHk6EeSVm5Faw75mfQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rDGMs3k6EeSVm5Faw75mfQ" base_Element="_rDGMsnk6EeSVm5Faw75mfQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rDGzwHk6EeSVm5Faw75mfQ" base_Element="_rDGMtHk6EeSVm5Faw75mfQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rDGzwnk6EeSVm5Faw75mfQ" base_Element="_rDGzwXk6EeSVm5Faw75mfQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rDHa0Hk6EeSVm5Faw75mfQ" base_Element="_rDGzw3k6EeSVm5Faw75mfQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rDHa0nk6EeSVm5Faw75mfQ" base_Element="_rDHa0Xk6EeSVm5Faw75mfQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rDIB4Hk6EeSVm5Faw75mfQ" base_Element="_rDHa03k6EeSVm5Faw75mfQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rDIB4nk6EeSVm5Faw75mfQ" base_Element="_rDIB4Xk6EeSVm5Faw75mfQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rDIo8Hk6EeSVm5Faw75mfQ" base_Element="_rDIB43k6EeSVm5Faw75mfQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rDIo8nk6EeSVm5Faw75mfQ" base_Element="_rDIo8Xk6EeSVm5Faw75mfQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rDJQAXk6EeSVm5Faw75mfQ" base_Element="_rDJQAHk6EeSVm5Faw75mfQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rDJQA3k6EeSVm5Faw75mfQ" base_Element="_rDJQAnk6EeSVm5Faw75mfQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rDJ3EXk6EeSVm5Faw75mfQ" base_Element="_rDJ3EHk6EeSVm5Faw75mfQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rDJ3E3k6EeSVm5Faw75mfQ" base_Element="_rDJ3Enk6EeSVm5Faw75mfQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rDKeIHk6EeSVm5Faw75mfQ" base_Element="_rDJ3FHk6EeSVm5Faw75mfQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rDKeInk6EeSVm5Faw75mfQ" base_Element="_rDKeIXk6EeSVm5Faw75mfQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rDLFMHk6EeSVm5Faw75mfQ" base_Element="_rDKeI3k6EeSVm5Faw75mfQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rDLFMnk6EeSVm5Faw75mfQ" base_Element="_rDLFMXk6EeSVm5Faw75mfQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rDLsQXk6EeSVm5Faw75mfQ" base_Element="_rDLsQHk6EeSVm5Faw75mfQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rDMTUHk6EeSVm5Faw75mfQ" base_Element="_rDLsQnk6EeSVm5Faw75mfQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rDM6YHk6EeSVm5Faw75mfQ" base_Element="_rDMTUXk6EeSVm5Faw75mfQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rDNhcHk6EeSVm5Faw75mfQ" base_Element="_rDM6YXk6EeSVm5Faw75mfQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rDNhcnk6EeSVm5Faw75mfQ" base_Element="_rDNhcXk6EeSVm5Faw75mfQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rDNhdHk6EeSVm5Faw75mfQ" base_Element="_rDNhc3k6EeSVm5Faw75mfQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rDOIgXk6EeSVm5Faw75mfQ" base_Element="_rDOIgHk6EeSVm5Faw75mfQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rDOIg3k6EeSVm5Faw75mfQ" base_Element="_rDOIgnk6EeSVm5Faw75mfQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rDOvkXk6EeSVm5Faw75mfQ" base_Element="_rDOvkHk6EeSVm5Faw75mfQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rDPWoHk6EeSVm5Faw75mfQ" base_Element="_rDOvknk6EeSVm5Faw75mfQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rDPWonk6EeSVm5Faw75mfQ" base_Element="_rDPWoXk6EeSVm5Faw75mfQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rDP9sHk6EeSVm5Faw75mfQ" base_Element="_rDPWo3k6EeSVm5Faw75mfQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rDP9snk6EeSVm5Faw75mfQ" base_Element="_rDP9sXk6EeSVm5Faw75mfQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rDQkwXk6EeSVm5Faw75mfQ" base_Element="_rDQkwHk6EeSVm5Faw75mfQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rDRL0Hk6EeSVm5Faw75mfQ" base_Element="_rDQkwnk6EeSVm5Faw75mfQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rDRL0nk6EeSVm5Faw75mfQ" base_Element="_rDRL0Xk6EeSVm5Faw75mfQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rDRy4Hk6EeSVm5Faw75mfQ" base_Element="_rDRL03k6EeSVm5Faw75mfQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rDRy4nk6EeSVm5Faw75mfQ" base_Element="_rDRy4Xk6EeSVm5Faw75mfQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rDSZ8Xk6EeSVm5Faw75mfQ" base_Element="_rDSZ8Hk6EeSVm5Faw75mfQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rDSZ83k6EeSVm5Faw75mfQ" base_Element="_rDSZ8nk6EeSVm5Faw75mfQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rDTBAXk6EeSVm5Faw75mfQ" base_Element="_rDTBAHk6EeSVm5Faw75mfQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rDU2MXk6EeSVm5Faw75mfQ" base_Element="_rDU2MHk6EeSVm5Faw75mfQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rDVdQHk6EeSVm5Faw75mfQ" base_Element="_rDU2Mnk6EeSVm5Faw75mfQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rDVdQnk6EeSVm5Faw75mfQ" base_Element="_rDVdQXk6EeSVm5Faw75mfQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rDWrYHk6EeSVm5Faw75mfQ" base_Element="_rDWEUHk6EeSVm5Faw75mfQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rDXScHk6EeSVm5Faw75mfQ" base_Element="_rDWrYXk6EeSVm5Faw75mfQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rDXScnk6EeSVm5Faw75mfQ" base_Element="_rDXScXk6EeSVm5Faw75mfQ"/>
  <UMLLabProfile:Array xmi:id="_rDX5gHk6EeSVm5Faw75mfQ" dimensions="2" base_Element="_rDXSc3k6EeSVm5Faw75mfQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rDX5gnk6EeSVm5Faw75mfQ" base_Element="_rDXSc3k6EeSVm5Faw75mfQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rDYgkHk6EeSVm5Faw75mfQ" base_Element="_rDX5g3k6EeSVm5Faw75mfQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rDYgk3k6EeSVm5Faw75mfQ" base_Element="_rDYgkXk6EeSVm5Faw75mfQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rDZHonk6EeSVm5Faw75mfQ" base_Element="_rDZHoHk6EeSVm5Faw75mfQ"/>
  <UMLLabProfile:Array xmi:id="_rDbj4Hk6EeSVm5Faw75mfQ" dimensions="2" base_Element="_rDa80Hk6EeSVm5Faw75mfQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rDbj4nk6EeSVm5Faw75mfQ" base_Element="_rDa80Hk6EeSVm5Faw75mfQ"/>
  <UMLLabProfile:Array xmi:id="_rDcK8Hk6EeSVm5Faw75mfQ" dimensions="2" base_Element="_rDbj43k6EeSVm5Faw75mfQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rDcK8nk6EeSVm5Faw75mfQ" base_Element="_rDbj43k6EeSVm5Faw75mfQ"/>
  <UMLLabProfile:Array xmi:id="_rDcyAHk6EeSVm5Faw75mfQ" dimensions="2" base_Element="_rDcK83k6EeSVm5Faw75mfQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rDcyAnk6EeSVm5Faw75mfQ" base_Element="_rDcK83k6EeSVm5Faw75mfQ"/>
  <UMLLabProfile:Array xmi:id="_rDdZEHk6EeSVm5Faw75mfQ" dimensions="2" base_Element="_rDcyA3k6EeSVm5Faw75mfQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rDdZEnk6EeSVm5Faw75mfQ" base_Element="_rDcyA3k6EeSVm5Faw75mfQ"/>
  <UMLLabProfile:Array xmi:id="_rDeAIHk6EeSVm5Faw75mfQ" dimensions="2" base_Element="_rDdZE3k6EeSVm5Faw75mfQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rDeAInk6EeSVm5Faw75mfQ" base_Element="_rDdZE3k6EeSVm5Faw75mfQ"/>
  <UMLLabProfile:Array xmi:id="_rDenMHk6EeSVm5Faw75mfQ" dimensions="2" base_Element="_rDeAI3k6EeSVm5Faw75mfQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rDenMnk6EeSVm5Faw75mfQ" base_Element="_rDeAI3k6EeSVm5Faw75mfQ"/>
  <UMLLabProfile:Array xmi:id="_rDfOQHk6EeSVm5Faw75mfQ" dimensions="2" base_Element="_rDenM3k6EeSVm5Faw75mfQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rDfOQnk6EeSVm5Faw75mfQ" base_Element="_rDenM3k6EeSVm5Faw75mfQ"/>
  <UMLLabProfile:Array xmi:id="_rDgcYHk6EeSVm5Faw75mfQ" dimensions="2" base_Element="_rDf1UHk6EeSVm5Faw75mfQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rDhDcHk6EeSVm5Faw75mfQ" base_Element="_rDf1UHk6EeSVm5Faw75mfQ"/>
  <UMLLabProfile:Array xmi:id="_rDhDc3k6EeSVm5Faw75mfQ" dimensions="2" base_Element="_rDhDcXk6EeSVm5Faw75mfQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rDhqgHk6EeSVm5Faw75mfQ" base_Element="_rDhDcXk6EeSVm5Faw75mfQ"/>
  <UMLLabProfile:Array xmi:id="_rDhqg3k6EeSVm5Faw75mfQ" dimensions="2" base_Element="_rDhqgXk6EeSVm5Faw75mfQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rDi4oHk6EeSVm5Faw75mfQ" base_Element="_rDhqgXk6EeSVm5Faw75mfQ"/>
  <UMLLabProfile:Array xmi:id="_rDi4o3k6EeSVm5Faw75mfQ" dimensions="2" base_Element="_rDi4oXk6EeSVm5Faw75mfQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rDjfsHk6EeSVm5Faw75mfQ" base_Element="_rDi4oXk6EeSVm5Faw75mfQ"/>
  <UMLLabProfile:Array xmi:id="_rDjfs3k6EeSVm5Faw75mfQ" dimensions="2" base_Element="_rDjfsXk6EeSVm5Faw75mfQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rDkGwHk6EeSVm5Faw75mfQ" base_Element="_rDjfsXk6EeSVm5Faw75mfQ"/>
  <UMLLabProfile:Array xmi:id="_rDkGw3k6EeSVm5Faw75mfQ" dimensions="2" base_Element="_rDkGwXk6EeSVm5Faw75mfQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rDkGxHk6EeSVm5Faw75mfQ" base_Element="_rDkGwXk6EeSVm5Faw75mfQ"/>
  <UMLLabProfile:Reference xmi:id="_rD1MgHk6EeSVm5Faw75mfQ" base_Element="_rD0lcHk6EeSVm5Faw75mfQ"/>
  <UMLLabProfile:Reference xmi:id="_rD1zknk6EeSVm5Faw75mfQ" base_Element="_rD1zkHk6EeSVm5Faw75mfQ"/>
  <UMLLabProfile:Reference xmi:id="_rD2aonk6EeSVm5Faw75mfQ" base_Element="_rD2aoHk6EeSVm5Faw75mfQ"/>
  <UMLLabProfile:Reference xmi:id="_rD3Bsnk6EeSVm5Faw75mfQ" base_Element="_rD3BsHk6EeSVm5Faw75mfQ"/>
  <UMLLabProfile:Reference xmi:id="_rD3ownk6EeSVm5Faw75mfQ" base_Element="_rD3owHk6EeSVm5Faw75mfQ"/>
  <UMLLabProfile:Reference xmi:id="_rD4P0nk6EeSVm5Faw75mfQ" base_Element="_rD4P0Hk6EeSVm5Faw75mfQ"/>
  <UMLLabProfile:Reference xmi:id="_rD5d8Hk6EeSVm5Faw75mfQ" base_Element="_rD424Hk6EeSVm5Faw75mfQ"/>
  <UMLLabProfile:Reference xmi:id="_rD6FAHk6EeSVm5Faw75mfQ" base_Element="_rD5d8Xk6EeSVm5Faw75mfQ"/>
  <UMLLabProfile:Reference xmi:id="_rD6sEHk6EeSVm5Faw75mfQ" base_Element="_rD6FAXk6EeSVm5Faw75mfQ"/>
  <UMLLabProfile:Reference xmi:id="_rD7TIHk6EeSVm5Faw75mfQ" base_Element="_rD6sEXk6EeSVm5Faw75mfQ"/>
  <UMLLabProfile:Reference xmi:id="_rD76MHk6EeSVm5Faw75mfQ" base_Element="_rD7TIXk6EeSVm5Faw75mfQ"/>
  <UMLLabProfile:Reference xmi:id="_rD76M3k6EeSVm5Faw75mfQ" base_Element="_rD76MXk6EeSVm5Faw75mfQ"/>
  <UMLLabProfile:Reference xmi:id="_rD8hQnk6EeSVm5Faw75mfQ" base_Element="_rD8hQHk6EeSVm5Faw75mfQ"/>
  <UMLLabProfile:Reference xmi:id="_rD9IUHk6EeSVm5Faw75mfQ" base_Element="_rD8hQ3k6EeSVm5Faw75mfQ"/>
  <UMLLabProfile:Reference xmi:id="_rD9IU3k6EeSVm5Faw75mfQ" base_Element="_rD9IUXk6EeSVm5Faw75mfQ"/>
  <UMLLabProfile:Reference xmi:id="_rD9vYnk6EeSVm5Faw75mfQ" base_Element="_rD9vYHk6EeSVm5Faw75mfQ"/>
  <UMLLabProfile:Reference xmi:id="_rD-WcHk6EeSVm5Faw75mfQ" base_Element="_rD9vY3k6EeSVm5Faw75mfQ"/>
  <UMLLabProfile:Reference xmi:id="_rD_kkHk6EeSVm5Faw75mfQ" base_Element="_rD-WcXk6EeSVm5Faw75mfQ"/>
  <UMLLabProfile:Reference xmi:id="_rD_kk3k6EeSVm5Faw75mfQ" base_Element="_rD_kkXk6EeSVm5Faw75mfQ"/>
  <UMLLabProfile:Reference xmi:id="_rEALonk6EeSVm5Faw75mfQ" base_Element="_rEALoHk6EeSVm5Faw75mfQ"/>
  <UMLLabProfile:Reference xmi:id="_rEAysHk6EeSVm5Faw75mfQ" base_Element="_rEALo3k6EeSVm5Faw75mfQ"/>
  <UMLLabProfile:Reference xmi:id="_rEAys3k6EeSVm5Faw75mfQ" base_Element="_rEAysXk6EeSVm5Faw75mfQ"/>
  <UMLLabProfile:Reference xmi:id="_rEBZwHk6EeSVm5Faw75mfQ" base_Element="_rEAytHk6EeSVm5Faw75mfQ"/>
  <UMLLabProfile:Reference xmi:id="_rECA0Hk6EeSVm5Faw75mfQ" base_Element="_rEBZwXk6EeSVm5Faw75mfQ"/>
  <UMLLabProfile:Reference xmi:id="_rECA03k6EeSVm5Faw75mfQ" base_Element="_rECA0Xk6EeSVm5Faw75mfQ"/>
  <UMLLabProfile:Reference xmi:id="_rECn4Hk6EeSVm5Faw75mfQ" base_Element="_rECA1Hk6EeSVm5Faw75mfQ"/>
  <UMLLabProfile:Reference xmi:id="_rEDO8Hk6EeSVm5Faw75mfQ" base_Element="_rECn4Xk6EeSVm5Faw75mfQ"/>
  <UMLLabProfile:Reference xmi:id="_rED2AHk6EeSVm5Faw75mfQ" base_Element="_rEDO8Xk6EeSVm5Faw75mfQ"/>
  <UMLLabProfile:Reference xmi:id="_rEEdEHk6EeSVm5Faw75mfQ" base_Element="_rED2AXk6EeSVm5Faw75mfQ"/>
  <UMLLabProfile:Reference xmi:id="_rEFEIHk6EeSVm5Faw75mfQ" base_Element="_rEEdEXk6EeSVm5Faw75mfQ"/>
  <UMLLabProfile:Reference xmi:id="_rEFrMHk6EeSVm5Faw75mfQ" base_Element="_rEFEIXk6EeSVm5Faw75mfQ"/>
  <UMLLabProfile:Reference xmi:id="_rEGSQHk6EeSVm5Faw75mfQ" base_Element="_rEFrMXk6EeSVm5Faw75mfQ"/>
  <UMLLabProfile:Reference xmi:id="_rEG5UHk6EeSVm5Faw75mfQ" base_Element="_rEGSQXk6EeSVm5Faw75mfQ"/>
  <UMLLabProfile:Reference xmi:id="_rEHgYHk6EeSVm5Faw75mfQ" base_Element="_rEG5UXk6EeSVm5Faw75mfQ"/>
  <UMLLabProfile:Reference xmi:id="_rEJ8oHk6EeSVm5Faw75mfQ" base_Element="_rEHgYXk6EeSVm5Faw75mfQ"/>
  <UMLLabProfile:Reference xmi:id="_rELKwHk6EeSVm5Faw75mfQ" base_Element="_rEKjsHk6EeSVm5Faw75mfQ"/>
  <UMLLabProfile:Reference xmi:id="_rELx0Hk6EeSVm5Faw75mfQ" base_Element="_rELKwXk6EeSVm5Faw75mfQ"/>
  <UMLLabProfile:Reference xmi:id="_rEMY4Hk6EeSVm5Faw75mfQ" base_Element="_rELx0Xk6EeSVm5Faw75mfQ"/>
  <UMLLabProfile:Reference xmi:id="_rENnAHk6EeSVm5Faw75mfQ" base_Element="_rEM_8Hk6EeSVm5Faw75mfQ"/>
  <UMLLabProfile:Reference xmi:id="_rEOOEHk6EeSVm5Faw75mfQ" base_Element="_rENnAXk6EeSVm5Faw75mfQ"/>
  <UMLLabProfile:Reference xmi:id="_rEO1IHk6EeSVm5Faw75mfQ" base_Element="_rEOOEXk6EeSVm5Faw75mfQ"/>
  <UMLLabProfile:Reference xmi:id="_rEPcMHk6EeSVm5Faw75mfQ" base_Element="_rEO1IXk6EeSVm5Faw75mfQ"/>
  <UMLLabProfile:Reference xmi:id="_rEQqUHk6EeSVm5Faw75mfQ" base_Element="_rEQDQHk6EeSVm5Faw75mfQ"/>
  <UMLLabProfile:Reference xmi:id="_rEQqU3k6EeSVm5Faw75mfQ" base_Element="_rEQqUXk6EeSVm5Faw75mfQ"/>
  <UMLLabProfile:Reference xmi:id="_rERRYnk6EeSVm5Faw75mfQ" base_Element="_rERRYHk6EeSVm5Faw75mfQ"/>
  <UMLLabProfile:Reference xmi:id="_rER4cHk6EeSVm5Faw75mfQ" base_Element="_rERRY3k6EeSVm5Faw75mfQ"/>
  <UMLLabProfile:Reference xmi:id="_rESfgnk6EeSVm5Faw75mfQ" base_Element="_rESfgHk6EeSVm5Faw75mfQ"/>
  <UMLLabProfile:Reference xmi:id="_rETGkHk6EeSVm5Faw75mfQ" base_Element="_rESfg3k6EeSVm5Faw75mfQ"/>
  <UMLLabProfile:Reference xmi:id="_rEUUsHk6EeSVm5Faw75mfQ" base_Element="_rETGkXk6EeSVm5Faw75mfQ"/>
  <UMLLabProfile:Reference xmi:id="_rEVi0Hk6EeSVm5Faw75mfQ" base_Element="_rEU7wHk6EeSVm5Faw75mfQ"/>
  <UMLLabProfile:Reference xmi:id="_rEWJ4Hk6EeSVm5Faw75mfQ" base_Element="_rEVi0Xk6EeSVm5Faw75mfQ"/>
  <UMLLabProfile:Reference xmi:id="_rEWw8Hk6EeSVm5Faw75mfQ" base_Element="_rEWJ4Xk6EeSVm5Faw75mfQ"/>
  <UMLLabProfile:Reference xmi:id="_rEX_EHk6EeSVm5Faw75mfQ" base_Element="_rEXYAHk6EeSVm5Faw75mfQ"/>
  <UMLLabProfile:Reference xmi:id="_rEYmIHk6EeSVm5Faw75mfQ" base_Element="_rEX_EXk6EeSVm5Faw75mfQ"/>
  <UMLLabProfile:Reference xmi:id="_rEZNMHk6EeSVm5Faw75mfQ" base_Element="_rEYmIXk6EeSVm5Faw75mfQ"/>
  <UMLLabProfile:Reference xmi:id="_rEabUHk6EeSVm5Faw75mfQ" base_Element="_rEZ0QHk6EeSVm5Faw75mfQ"/>
  <UMLLabProfile:Reference xmi:id="_rEbCYHk6EeSVm5Faw75mfQ" base_Element="_rEabUXk6EeSVm5Faw75mfQ"/>
  <UMLLabProfile:Reference xmi:id="_rEcQgHk6EeSVm5Faw75mfQ" base_Element="_rEbCYXk6EeSVm5Faw75mfQ"/>
  <UMLLabProfile:Reference xmi:id="_rEc3kHk6EeSVm5Faw75mfQ" base_Element="_rEcQgXk6EeSVm5Faw75mfQ"/>
  <UMLLabProfile:Reference xmi:id="_rEdeoHk6EeSVm5Faw75mfQ" base_Element="_rEc3kXk6EeSVm5Faw75mfQ"/>
  <UMLLabProfile:Reference xmi:id="_rEeFsHk6EeSVm5Faw75mfQ" base_Element="_rEdeoXk6EeSVm5Faw75mfQ"/>
  <UMLLabProfile:Reference xmi:id="_rEfT0Hk6EeSVm5Faw75mfQ" base_Element="_rEeswHk6EeSVm5Faw75mfQ"/>
  <UMLLabProfile:Reference xmi:id="_rEf64Hk6EeSVm5Faw75mfQ" base_Element="_rEfT0Xk6EeSVm5Faw75mfQ"/>
  <UMLLabProfile:Reference xmi:id="_rEgh8Hk6EeSVm5Faw75mfQ" base_Element="_rEf64Xk6EeSVm5Faw75mfQ"/>
  <UMLLabProfile:Reference xmi:id="_rEiXIHk6EeSVm5Faw75mfQ" base_Element="_rEgh8Xk6EeSVm5Faw75mfQ"/>
  <UMLLabProfile:Reference xmi:id="_rEjlQHk6EeSVm5Faw75mfQ" base_Element="_rEi-MHk6EeSVm5Faw75mfQ"/>
  <UMLLabProfile:Reference xmi:id="_rEkMUHk6EeSVm5Faw75mfQ" base_Element="_rEjlQXk6EeSVm5Faw75mfQ"/>
  <UMLLabProfile:Reference xmi:id="_rEkzYHk6EeSVm5Faw75mfQ" base_Element="_rEkMUXk6EeSVm5Faw75mfQ"/>
  <UMLLabProfile:Reference xmi:id="_rElacHk6EeSVm5Faw75mfQ" base_Element="_rEkzYXk6EeSVm5Faw75mfQ"/>
  <UMLLabProfile:Reference xmi:id="_rEmBgHk6EeSVm5Faw75mfQ" base_Element="_rElacXk6EeSVm5Faw75mfQ"/>
  <UMLLabProfile:Reference xmi:id="_rEmokHk6EeSVm5Faw75mfQ" base_Element="_rEmBgXk6EeSVm5Faw75mfQ"/>
  <UMLLabProfile:Reference xmi:id="_rEn2sHk6EeSVm5Faw75mfQ" base_Element="_rEmokXk6EeSVm5Faw75mfQ"/>
  <UMLLabProfile:Reference xmi:id="_rEpE0Hk6EeSVm5Faw75mfQ" base_Element="_rEodwHk6EeSVm5Faw75mfQ"/>
  <UMLLabProfile:Reference xmi:id="_rEqS8Hk6EeSVm5Faw75mfQ" base_Element="_rEpr4Hk6EeSVm5Faw75mfQ"/>
  <UMLLabProfile:Reference xmi:id="_rEq6AHk6EeSVm5Faw75mfQ" base_Element="_rEqS8Xk6EeSVm5Faw75mfQ"/>
  <UMLLabProfile:Reference xmi:id="_rErhEnk6EeSVm5Faw75mfQ" base_Element="_rErhEHk6EeSVm5Faw75mfQ"/>
  <UMLLabProfile:Reference xmi:id="_rEsIIHk6EeSVm5Faw75mfQ" base_Element="_rErhE3k6EeSVm5Faw75mfQ"/>
  <UMLLabProfile:Reference xmi:id="_rEsvMHk6EeSVm5Faw75mfQ" base_Element="_rEsIIXk6EeSVm5Faw75mfQ"/>
  <UMLLabProfile:Reference xmi:id="_rEtWQnk6EeSVm5Faw75mfQ" base_Element="_rEtWQHk6EeSVm5Faw75mfQ"/>
  <UMLLabProfile:Reference xmi:id="_rEt9Unk6EeSVm5Faw75mfQ" base_Element="_rEt9UHk6EeSVm5Faw75mfQ"/>
  <UMLLabProfile:Reference xmi:id="_rEukYHk6EeSVm5Faw75mfQ" base_Element="_rEt9U3k6EeSVm5Faw75mfQ"/>
  <UMLLabProfile:Reference xmi:id="_rEvLcHk6EeSVm5Faw75mfQ" base_Element="_rEukYXk6EeSVm5Faw75mfQ"/>
  <UMLLabProfile:Reference xmi:id="_rEvygHk6EeSVm5Faw75mfQ" base_Element="_rEvLcXk6EeSVm5Faw75mfQ"/>
  <UMLLabProfile:Reference xmi:id="_rEwZkHk6EeSVm5Faw75mfQ" base_Element="_rEvygXk6EeSVm5Faw75mfQ"/>
  <UMLLabProfile:Reference xmi:id="_rExAoXk6EeSVm5Faw75mfQ" base_Element="_rEwZkXk6EeSVm5Faw75mfQ"/>
  <UMLLabProfile:Reference xmi:id="_rExnsHk6EeSVm5Faw75mfQ" base_Element="_rExAonk6EeSVm5Faw75mfQ"/>
  <UMLLabProfile:Reference xmi:id="_rEy10Hk6EeSVm5Faw75mfQ" base_Element="_rEyOwHk6EeSVm5Faw75mfQ"/>
</xmi:XMI>
